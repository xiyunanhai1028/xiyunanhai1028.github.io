<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>底部导航</title>
      <link href="/2019/09/10/di-bu-dao-hang/"/>
      <url>/2019/09/10/di-bu-dao-hang/</url>
      
        <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'widget/bottom_navigation_bar.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">BottomNavigationBarWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">HomePage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"首页"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>          <span class="token string">"首页"</span><span class="token punctuation">,</span>          style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SearchPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"搜索"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>          <span class="token string">"搜索"</span><span class="token punctuation">,</span>          style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MePage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我的"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>          <span class="token string">"我的"</span><span class="token punctuation">,</span>          style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../pages/home_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../pages/search_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../pages/me_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">BottomNavigationBarWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  _BottomNavigationBarWidgetState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>      <span class="token function">_BottomNavigationBarWidgetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_BottomNavigationBarWidgetState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>BottomNavigationBarWidget<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">int</span> _currentIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  Color actionColor <span class="token operator">=</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">;</span>  List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> _lists <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@override</span>  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    _lists<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">SearchPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">MePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      body<span class="token operator">:</span> _lists<span class="token punctuation">[</span>_currentIndex<span class="token punctuation">]</span><span class="token punctuation">,</span>      bottomNavigationBar<span class="token operator">:</span> <span class="token function">BottomNavigationBar</span><span class="token punctuation">(</span>        type<span class="token operator">:</span> BottomNavigationBarType<span class="token punctuation">.</span>fixed<span class="token punctuation">,</span>        onTap<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            _currentIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        currentIndex<span class="token operator">:</span> _currentIndex<span class="token punctuation">,</span>        items<span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>              icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>home<span class="token punctuation">)</span><span class="token punctuation">,</span>              title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"首页"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>home<span class="token punctuation">,</span> color<span class="token operator">:</span> actionColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>              icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">,</span>              title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"搜索"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">,</span> color<span class="token operator">:</span> actionColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>              icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>              title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我的"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">,</span> color<span class="token operator">:</span> actionColor<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter底部导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PMP学习</title>
      <link href="/2019/09/09/pmp-xue-xi/"/>
      <url>/2019/09/09/pmp-xue-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="项目定义："><a href="#项目定义：" class="headerlink" title="项目定义："></a>项目定义：</h3><blockquote><p>为创造独特的产品，服务或成果而进行的临时性工作</p></blockquote><h3 id="项目的类别："><a href="#项目的类别：" class="headerlink" title="项目的类别："></a>项目的类别：</h3><blockquote><p>研发类项目，交付类项目，变革类项目</p></blockquote><h3 id="企业分类："><a href="#企业分类：" class="headerlink" title="企业分类："></a>企业分类：</h3><blockquote><p>甲方，乙方</p></blockquote><h3 id="管路分类："><a href="#管路分类：" class="headerlink" title="管路分类："></a>管路分类：</h3><blockquote><p>项目，运营</p></blockquote><h3 id="项目的三个特征："><a href="#项目的三个特征：" class="headerlink" title="项目的三个特征："></a>项目的三个特征：</h3><blockquote><p>独特性，临时性，不确定性</p></blockquote><h3 id="项目管理的基本目标："><a href="#项目管理的基本目标：" class="headerlink" title="项目管理的基本目标："></a>项目管理的基本目标：</h3><blockquote><p>进度，成本，质量</p></blockquote><h3 id="成本和进度的关系："><a href="#成本和进度的关系：" class="headerlink" title="成本和进度的关系："></a>成本和进度的关系：</h3><blockquote><p>微笑曲线</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568024181593.png" alt="1568024181593"></p><h3 id="项目管理高层次目标："><a href="#项目管理高层次目标：" class="headerlink" title="项目管理高层次目标："></a>项目管理高层次目标：</h3><ul><li>实现组织（企业）战略目标</li><li>项目相关方满意</li><li>项目团队成员满意</li><li>HSE( Health健康，safety安全，environment环保 )</li></ul><h3 id="项目管理的主要角色："><a href="#项目管理的主要角色：" class="headerlink" title="项目管理的主要角色："></a>项目管理的主要角色：</h3><ul><li>高级管理层</li><li>CCB：change contol boy 变更控制委员会</li><li>PMO：项目管理办公司，支持服务于公司里的很多项目</li><li>职能经理</li><li>发起人</li><li>项目经理</li><li>项目团队</li><li>项目相关方</li></ul><blockquote><p>CCB（变更控制委员会）与PM（项目经理）：需求的变更与否是用PM跟CCB来决策的。在项目订制的基准之内（范围基准，进度基准，成本基准）的变更一般由PM来决定是否变更，在基准在外的变更一般交由CCB来决策。但是考试中的变更基本都是由CCB来决策的</p></blockquote><h3 id="项目集管理"><a href="#项目集管理" class="headerlink" title="项目集管理"></a>项目集管理</h3><blockquote><p>项目集管理实现1+1&gt;2，</p><p>一组相互关联且被协调管理的项目、子项目集和项目集活动，以便获得分别管理所无法获取的利益</p><p>理解：开发商建房子，项目集经理管理项目经理，项目经理管理各个房屋的建设，项目集经理负责协调项目经理之间活动造成工程的阻塞，已经各个项目之间共性事务的统一处理</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rxjava总结</title>
      <link href="/2019/08/26/rxjava-zong-jie/"/>
      <url>/2019/08/26/rxjava-zong-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><pre class=" language-java"><code class="language-java">implementation <span class="token string">'io.reactivex.rxjava2:rxandroid:2.1.1'</span>implementation <span class="token string">'io.reactivex.rxjava2:rxjava:2.2.12'</span></code></pre><h3 id="三个重要的知识点"><a href="#三个重要的知识点" class="headerlink" title="三个重要的知识点"></a>三个重要的知识点</h3><blockquote><p>Observable：被观察者，可以理解为事件的发送者</p><p>Observer：观察者，可以理解为事件的接收者</p><p>Subscriber：订阅，可以理解为链接发送者跟接收者</p></blockquote><pre class=" language-java"><code class="language-java">Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> ob <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Observable"</span><span class="token punctuation">,</span> <span class="token string">"subscribe: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"hi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"嗨"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Observer<span class="token operator">&lt;</span>String<span class="token operator">></span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span>Disposable d<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"observer"</span><span class="token punctuation">,</span> <span class="token string">"onSubscribe: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"observer"</span><span class="token punctuation">,</span> <span class="token string">"onNext: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"observer"</span><span class="token punctuation">,</span> <span class="token string">"onError: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"observer"</span><span class="token punctuation">,</span> <span class="token string">"onComplete: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        ob<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>代码干了三件事情，</p><ul><li><ol><li>创建了Observable被观察者(发送者)对象，</li><li>创建Observer(接收者)对象，</li><li>然后通过subscribe将他们关联起来</li></ol></li></ul><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">42.399</span> <span class="token number">2352</span><span class="token operator">-</span><span class="token number">2352</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>observer<span class="token operator">:</span> onSubscribe<span class="token operator">:</span> <span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">42.399</span> <span class="token number">2352</span><span class="token operator">-</span><span class="token number">2352</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>Observable<span class="token operator">:</span> subscribe<span class="token operator">:</span> <span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">42.399</span> <span class="token number">2352</span><span class="token operator">-</span><span class="token number">2352</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>observer<span class="token operator">:</span> onNext<span class="token operator">:</span> hi<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">42.399</span> <span class="token number">2352</span><span class="token operator">-</span><span class="token number">2352</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>observer<span class="token operator">:</span> onComplete<span class="token operator">:</span> </code></pre><p>分析日志</p><ul><li><ol><li>被观察者调用subscribe()方法，相当于被观察说我想跟你关联了，然后观察者通过onSubscribe()回复被观察说行,然后两者就建立了连接</li><li>接着被观察者（发送者）通过onNext()发送数据</li><li>观察者（接收者）通过onNext()方法接收发送者发送过来的数据</li><li>在被观察者调用onComplete()方法时，代表已完成，观察者接着会调用onComplete()将两者之间的连接断开，所以后面的emitter.onNext(“嗨”);这句代码并没有被接收</li></ol></li></ul><blockquote><p>这里我们看到还有一个onError()方法没有被调用，关于onError()跟onComplete()是一对互斥的方法，也就是说当代码执行了onComplete()方法，那么onError()方法就不可能被调用，反之也一样，这里就不代码演示了</p></blockquote><h3 id="Observable几种创建方式"><a href="#Observable几种创建方式" class="headerlink" title="Observable几种创建方式"></a>Observable几种创建方式</h3><blockquote><p>just(T…)：将传入的数据依次发送出去</p><p>fromArray(T… items) 将传入的数组或 <code>Iterable</code> 拆分成具体对象后，依次发送出来：</p></blockquote><pre class=" language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token string">"王五"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span>Disposable d<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"onSubscribe"</span><span class="token punctuation">,</span> <span class="token string">"onNext: "</span><span class="token operator">+</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">38.019</span> <span class="token number">2637</span><span class="token operator">-</span><span class="token number">2637</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 张三<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">38.019</span> <span class="token number">2637</span><span class="token operator">-</span><span class="token number">2637</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 李四<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">38.019</span> <span class="token number">2637</span><span class="token operator">-</span><span class="token number">2637</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 王五</code></pre><pre class=" language-java"><code class="language-java">String<span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span>Disposable d<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"onSubscribe"</span><span class="token punctuation">,</span> <span class="token string">"onNext: "</span><span class="token operator">+</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">47.819</span> <span class="token number">2710</span><span class="token operator">-</span><span class="token number">2710</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 张三<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">47.819</span> <span class="token number">2710</span><span class="token operator">-</span><span class="token number">2710</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 李四<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">47.819</span> <span class="token number">2710</span><span class="token operator">-</span><span class="token number">2710</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 王五</code></pre><h3 id="Consumer-amp-Action"><a href="#Consumer-amp-Action" class="headerlink" title="Consumer&amp;Action"></a>Consumer&amp;Action</h3><blockquote><p><code>Consumer</code>是Rxjava的一个接口，他只有一个方法<code>accept(T t)</code>方法，这个方法无返回值，但有一个参数， 由于<code>onNext(T obj)</code> 和 <code>onError(Throwable error)</code> 也是单参数无返回值的,因此Consumer可以被当着包装对象,当着onNext和onError来使用</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>T t<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>Action也是Rxjava的一个接口，他只有一个方法run，无参数，无返回值，由于onComplete()也是无参无返回值，所以Action可以被当着包装对象，当着onComplete来势</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Action</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>示例代码：</p><pre class=" language-java"><code class="language-java"> Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> observable <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Action onComplete <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Action</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        Consumer<span class="token operator">&lt;</span>String<span class="token operator">></span> onNext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"onNext"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        Consumer<span class="token operator">&lt;</span>Throwable<span class="token operator">></span> onError <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>Throwable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>Throwable throwable<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>onNext<span class="token punctuation">,</span> onError<span class="token punctuation">,</span> onComplete<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>往往我们在写代码中只关注onNext方法，所以上面复杂的代码可以简化：</p><pre class=" language-java"><code class="language-java"> String<span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token string">"王五"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">03.139</span> <span class="token number">3410</span><span class="token operator">-</span><span class="token number">3410</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>accept<span class="token operator">:</span> accept<span class="token operator">:</span> 张三<span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">03.139</span> <span class="token number">3410</span><span class="token operator">-</span><span class="token number">3410</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>accept<span class="token operator">:</span> accept<span class="token operator">:</span> 李四<span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">03.139</span> <span class="token number">3410</span><span class="token operator">-</span><span class="token number">3410</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>accept<span class="token operator">:</span> accept<span class="token operator">:</span> 王五</code></pre><h3 id="线程控制–Scheduler"><a href="#线程控制–Scheduler" class="headerlink" title="线程控制–Scheduler"></a>线程控制–Scheduler</h3><blockquote><p>在不指定线程的情况下，Rxjava在那个线程subscribe()就在那个线程产生事件，在那个线程产生事件，就在那个线程消费事件，如果需要线程切换，就需要用的Scheduler(调度器)</p></blockquote><p>Rxjava内置的几种Scheduler</p><ul><li>Scheduler.immediate()：默认情况下的值，相当于当前线程</li><li>Scheduler.newThread()：开启一个新的线程</li><li>Scheduler.io()：I/O 操作（读写文件、读写数据库、网络信息交互等）所使用的 <code>Scheduler</code>。行为模式和 <code>newThread()</code> 差不多，区别在于 <code>io()</code> 的内部实现是是用一个无数量上限的线程池，可以重用空闲的线程，因此多数情况下 <code>io()</code> 比 <code>newThread()</code> 更有效率。不要把计算工作放在 <code>io()</code> 中，可以避免创建不必要的线程</li><li>Scheduler.computation()：计算所使用的 <code>Scheduler</code>。这个计算指的是 CPU 密集型计算，即不会被 I/O 等操作限制性能的操作，例如图形的计算。这个 <code>Scheduler</code> 使用的固定的线程池，大小为 CPU 核数。不要把 I/O 操作放在 <code>computation()</code> 中，否则 I/O 操作的等待时间会浪费 CPU</li><li>AndroidScheduler.mainThread()：指定的操作将在主线程进行</li></ul><p>通常情况下，我们一般发送一个请求，然后等待后台反馈，等反馈回来后我们在讲反馈回来的数据进行显示，这是我们平时最常见的操作，那么用rxjava怎么实现呢</p><pre class=" language-java"><code class="language-java"> Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> observable <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"subscribe: "</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"111"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        observable<span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">15</span><span class="token operator">:</span><span class="token number">20.559</span> <span class="token number">3749</span><span class="token operator">-</span><span class="token number">3773</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> subscribe<span class="token operator">:</span> RxNewThreadScheduler<span class="token operator">-</span><span class="token number">1</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">15</span><span class="token operator">:</span><span class="token number">20.569</span> <span class="token number">3749</span><span class="token operator">-</span><span class="token number">3749</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> accept<span class="token operator">:</span> main<span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">15</span><span class="token operator">:</span><span class="token number">20.569</span> <span class="token number">3749</span><span class="token operator">-</span><span class="token number">3749</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">111</span></code></pre><p>日志分析：可以看到Observable在一个新的线程发送事件，Consumer在主线程接收事件</p><blockquote><p>subscribeOn()：指定发送事件所在的线程</p><p>observeOn()：指定接收事件所在的线程</p></blockquote><p>==注意：==</p><blockquote><p>多次指定subscribeOn()方法，只有第一次的有效</p><p>多次指定observeOn()方法，每次都有效</p></blockquote><pre class=" language-java"><code class="language-java"> Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> observable <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"subscribe: "</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"111"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        observable<span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">24</span><span class="token operator">:</span><span class="token number">31.459</span> <span class="token number">3867</span><span class="token operator">-</span><span class="token number">3895</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> subscribe<span class="token operator">:</span> RxNewThreadScheduler<span class="token operator">-</span><span class="token number">1</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">24</span><span class="token operator">:</span><span class="token number">31.469</span> <span class="token number">3867</span><span class="token operator">-</span><span class="token number">3896</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> accept<span class="token operator">:</span> RxNewThreadScheduler<span class="token operator">-</span><span class="token number">2</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">24</span><span class="token operator">:</span><span class="token number">31.469</span> <span class="token number">3867</span><span class="token operator">-</span><span class="token number">3896</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">111</span></code></pre><p>日志分析：</p><p>我们可以看到两次调用subscribeOn()方法，但是日志显示还是在新的线程执行，所以只有第一次的有效，两次调用observeOn()方法，显示在主线程，再是在新线程，所以最后执行实在新线程，日志也是如此</p><h3 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h3><blockquote><p>所谓的变换，是将事件序列中的对象或者整个事件序列进行加工处理，转换成不同的事件对象或者事件序列</p></blockquote><h4 id="Map"><a href="#Map" class="headerlink" title="Map():"></a>Map():</h4><p>将传入的数据进行加工，返回加工后的数据，map是一对一转换的</p><pre class=" language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> String <span class="token function">apply</span><span class="token punctuation">(</span>Integer integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"map"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上面的例子，我们传入了一个整形的值，然后通过map方法，将整形的值转换为字符串返回</p><h4 id="fromArray"><a href="#fromArray" class="headerlink" title="fromArray():"></a>fromArray():</h4><pre class=" language-java"><code class="language-java">String<span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token string">"王五"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="filter"><a href="#filter" class="headerlink" title="filter():"></a>filter():</h4><blockquote><p>对数组进行过滤，返回新的数组</p></blockquote><pre class=" language-java"><code class="language-java"> Integer<span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span>Integer integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                <span class="token keyword">return</span> integer <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>Integer integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"filter"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">02</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">20.499</span> <span class="token number">4364</span><span class="token operator">-</span><span class="token number">4364</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>filter<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">6</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">02</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">20.499</span> <span class="token number">4364</span><span class="token operator">-</span><span class="token number">4364</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>filter<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">7</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">02</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">20.499</span> <span class="token number">4364</span><span class="token operator">-</span><span class="token number">4364</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>filter<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">8</span></code></pre><h4 id="take"><a href="#take" class="headerlink" title="take():"></a>take():</h4><blockquote><p>保留事件数</p></blockquote><pre class=" language-java"><code class="language-java"> Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"take"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-log"><code class="language-log">08-26 02:34:55.559 4539-4539/com.rxandroid D/take: accept: 108-26 02:34:55.559 4539-4539/com.rxandroid D/take: accept: 2</code></pre><h4 id="doOnNext"><a href="#doOnNext" class="headerlink" title="doOnNext():"></a>doOnNext():</h4><blockquote><p>在处理事件之前做一些工作，可以放在这个方法中</p></blockquote><h4 id="zip"><a href="#zip" class="headerlink" title="zip():"></a>zip():</h4><blockquote><p>zip通过一个函数将多个Observable发送的事件结合到一起，然后发送这些组合到一起的事件. 它按照严格的顺序应用这个函数。它只发射与发射数据项最少的那个Observable一样多的数据</p></blockquote><pre class=" language-java"><code class="language-java">Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> ob1 <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> ob2 <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span>ob1<span class="token punctuation">,</span> ob2<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BiFunction</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token punctuation">,</span> String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> String <span class="token function">apply</span><span class="token punctuation">(</span>String s<span class="token punctuation">,</span> String s2<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                <span class="token keyword">return</span> s <span class="token operator">+</span> s2<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"zip"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-log"><code class="language-log">08-26 02:42:12.839 4644-4644/com.rxandroid D/zip: accept: 12</code></pre>]]></content>
      
      
      <categories>
          
          <category> rxandroid </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> rxandroid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter学习</title>
      <link href="/2019/08/23/flutter-xue-xi/"/>
      <url>/2019/08/23/flutter-xue-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Text组件"><a href="#1-Text组件" class="headerlink" title="1.    Text组件"></a>1.    Text组件</h3><table><thead><tr><th align="center">名称</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">textAlign</td><td align="center">文本对齐方式（center:居中，left：居左，right:居右，justfy:两端对齐）</td></tr><tr><td align="center">textDirection</td><td align="center">文本方向（ltr：从左到右，rtl:从右到左）</td></tr><tr><td align="center">overflow</td><td align="center">文字超出屏幕之后的处理方式（clip:裁剪，fade:隐藏，ellipsis:省略号）</td></tr><tr><td align="center">textScaleFactor</td><td align="center">文字显示倍率</td></tr><tr><td align="center">maxLines</td><td align="center">文字显示最大行数</td></tr><tr><td align="center">style</td><td align="center">文字的样式设置</td></tr></tbody></table><h4 id="1-1-TextStyle"><a href="#1-1-TextStyle" class="headerlink" title="1.1 TextStyle"></a>1.1 TextStyle</h4><table><thead><tr><th align="center">名称</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">decoration</td><td align="center">文字装饰线（none:没有线，lineThrough：删除线，overline：上划线，underline：下划线）</td></tr><tr><td align="center">decorationColor</td><td align="center">文字装饰线的颜色</td></tr><tr><td align="center">decorationStyle</td><td align="center">文字装饰线风格（[dashed,dotted]）虚线，double两根线，solid一根线，wavy波浪线</td></tr><tr><td align="center">wordSpacing</td><td align="center">单词间隙（如果为负数，会让单词变得更紧凑）</td></tr><tr><td align="center">letterSpacing</td><td align="center">字母间隙（如果是负数，会让字母变得更紧凑）</td></tr><tr><td align="center">fontStyle</td><td align="center">文字样式（italic斜体，normal正常体）</td></tr><tr><td align="center">fontSize</td><td align="center">字体大小</td></tr><tr><td align="center">color</td><td align="center">字体颜色</td></tr><tr><td align="center">fontWeight</td><td align="center">字体粗细（bold粗体，normal正常）</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>            <span class="token string">"造物无言却有情，每于寒尽觉春生。千红万紫安排著，只待新雷第一声"</span><span class="token punctuation">,</span>            textAlign<span class="token operator">:</span> TextAlign<span class="token punctuation">.</span>right<span class="token punctuation">,</span>            maxLines<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            overflow<span class="token operator">:</span> TextOverflow<span class="token punctuation">.</span>ellipsis<span class="token punctuation">,</span>            textDirection<span class="token operator">:</span> TextDirection<span class="token punctuation">.</span>rtl<span class="token punctuation">,</span>            textScaleFactor<span class="token operator">:</span> <span class="token number">1.2</span><span class="token punctuation">,</span>            style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>              textBaseline<span class="token operator">:</span> TextBaseline<span class="token punctuation">.</span>alphabetic<span class="token punctuation">,</span>              fontSize<span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>              letterSpacing<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>              fontWeight<span class="token operator">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>              decoration<span class="token operator">:</span> TextDecoration<span class="token punctuation">.</span>underline<span class="token punctuation">,</span>              decorationColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              decorationStyle<span class="token operator">:</span> TextDecorationStyle<span class="token punctuation">.</span>dashed            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="2-Container组件"><a href="#2-Container组件" class="headerlink" title="2.    Container组件"></a>2.    Container组件</h3><blockquote><p>相当于div使用，在不设置宽高时，由内部孩子撑开</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">alignment</td><td align="center">内部孩子对齐方式；topCenter：顶部居中对齐；topLeft：顶部左对齐；topRight:顶部右对齐；center：水平垂直居中对齐；centerLeft：垂直居中水平居中对齐；centerRight:垂直居中水平居右对齐；bottomCenter:底部居中对齐；bottomLeft：对不局左对齐；bottomRight：底部居右对齐</td></tr><tr><td align="center">decoration</td><td align="center">BoxDecoration,color,border,borderRadius</td></tr><tr><td align="center">margin</td><td align="center">margin属性表示Container与外部其他组件的距离。EdgeInsets.all()</td></tr><tr><td align="center">padding</td><td align="center">padding是Container的内边距，指的是Container边缘与child之间的距离</td></tr><tr><td align="center">transform</td><td align="center">让Container容器进行一些旋转之类的操作；transform:Matrix4.rotationZ(0.2)</td></tr><tr><td align="center">heigth</td><td align="center">Container的高度</td></tr><tr><td align="center">width</td><td align="center">Container宽度</td></tr><tr><td align="center">child</td><td align="center">Container 子元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      theme<span class="token operator">:</span> ThemeData<span class="token punctuation">.</span><span class="token function">light</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是Container标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>          height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//          color: Colors.blue,</span>          alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是内容"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          margin<span class="token operator">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          transform<span class="token operator">:</span> Matrix4<span class="token punctuation">.</span><span class="token function">rotationZ</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          decoration<span class="token operator">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>            color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            borderRadius<span class="token operator">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-Image图片组件"><a href="#3-Image图片组件" class="headerlink" title="3.    Image图片组件"></a>3.    Image图片组件</h3><blockquote><p>image.asset</p><p>image.network</p><p>image.file</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">alignment</td><td align="center">Alignment</td><td align="center">图片对其方式</td></tr><tr><td align="center">color和colorBlendMode</td><td align="center"></td><td align="center">设置图片的背景颜色，通常和colorBlendMode一起使用，这样可以使图片颜色跟背景颜色混合</td></tr><tr><td align="center">fit</td><td align="center">BoxFit</td><td align="center">fit属性用来控制拉伸与挤压，是相对于父容器的。BoxFit.fill:拉伸图片，充满父容器；BoxFit.contain:原比例拉伸，可能用空隙；BoxFit.cover:图片原比例充满父容器，多余的会被裁剪；BoxFit.fitWidth:充满父容器宽度；BoxFit.fitHeight:充满父容器高度；BoxFit.scaleDown:效果跟contain一样，但是此属性不允许显示超过源图片大小，可小不可大</td></tr><tr><td align="center">repeat</td><td align="center">平铺</td><td align="center">ImageRepeat.repeat:原图位置为中心，向其他地方铺满容器；ImageRepeat.repeatX:原图位置为中心，在X轴方向铺满容器；ImageRepeat.repeatY:原图位置为中心，在Y轴方向铺满容器；</td></tr><tr><td align="center">width</td><td align="center"></td><td align="center">宽度 一般结合 ClipOval 才能看到效果</td></tr><tr><td align="center">height</td><td align="center"></td><td align="center">高度 一般结合 ClipOval 才能看到效果</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是Image组件"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>            width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>            decoration<span class="token operator">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                border<span class="token operator">:</span> Border<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>                    color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>black12<span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> style<span class="token operator">:</span> BorderStyle<span class="token punctuation">.</span>solid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            child<span class="token operator">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>              <span class="token string">"http://pic33.nipic.com/20131007/13639685_123501617185_2.jpg"</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              colorBlendMode<span class="token operator">:</span> BlendMode<span class="token punctuation">.</span>color<span class="token punctuation">,</span>              fit<span class="token operator">:</span> BoxFit<span class="token punctuation">.</span>contain<span class="token punctuation">,</span>              repeat<span class="token operator">:</span> ImageRepeat<span class="token punctuation">.</span>repeat<span class="token punctuation">,</span>              width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="4-ListView列表"><a href="#4-ListView列表" class="headerlink" title="4.    ListView列表"></a>4.    ListView列表</h3><ul><li>垂直列表</li><li>水平列表</li><li>垂直图文列表</li><li>动态列表</li><li>矩阵列表</li></ul><table><thead><tr><th align="center">名称</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">scrollDirection</td><td align="center">Axis</td><td align="center">Axis.Vertical:垂直类别；Axis.Horizontal:水平列表</td></tr><tr><td align="center">padding</td><td align="center">EdgetInsetsGeometory</td><td align="center">内边距</td></tr><tr><td align="center">resolve</td><td align="center">bool</td><td align="center">是否倒叙</td></tr><tr><td align="center">children</td><td align="center">List<widget></widget></td><td align="center">列表元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是ListView"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">ListView</span><span class="token punctuation">(</span>          reverse<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是第一条数据"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"第一条数据副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="5-GridView网格"><a href="#5-GridView网格" class="headerlink" title="5.    GridView网格"></a>5.    GridView网格</h3><ul><li>垂直列表</li><li>水平列表</li><li>垂直图文列表</li><li>动态列表</li><li>矩阵列表</li></ul><blockquote><p>GridView.builder</p><p>GridView.count</p></blockquote><table><thead><tr><th>名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>scrollDirection</td><td>Axis</td><td>Axis.Vertical:垂直类别；Axis.Horizontal:水平列表</td></tr><tr><td>padding</td><td>EdgetInsetsGeometory</td><td>内边距</td></tr><tr><td>resolve</td><td>bool</td><td>是否倒叙</td></tr><tr><td>children</td><td>List<widget></widget></td><td>列表元素</td></tr><tr><td>crossAxisSpacing</td><td>double</td><td>水平子widget之间的间距</td></tr><tr><td>mainAxisSpacing</td><td>double</td><td>垂直子widget之间的间距</td></tr><tr><td>crossAxisCount</td><td>int</td><td>一行widget的数量</td></tr><tr><td>childAspectRatio</td><td>double</td><td>子widget宽度比例</td></tr><tr><td>gridDelegate</td><td>SliverGridDelegateWithFixedCrossAxisCount（常用）SliverGridDelegateWithMaxCrossAxisExtent</td><td>控制布局主要用在GridView.builder里面</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>          appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>            title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"GridView"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          body<span class="token operator">:</span> GridView<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>            crossAxisCount<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            crossAxisSpacing<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            mainAxisSpacing<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>              <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                  leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                  title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                  leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                  title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                  leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                  title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                  leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                  title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="6-Padding组件"><a href="#6-Padding组件" class="headerlink" title="6.    Padding组件"></a>6.    Padding组件</h3><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">padding</td><td align="center">padding 值, EdgeInsetss 设置填充的值</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Padding"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Padding</span><span class="token punctuation">(</span>padding<span class="token operator">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是内容"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="7-Row水平布局组件"><a href="#7-Row水平布局组件" class="headerlink" title="7. Row水平布局组件"></a>7. Row水平布局组件</h3><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mainAxisAlignment</td><td align="center">主轴的排序方式</td></tr><tr><td align="center">crossAxisAlignment</td><td align="center">次轴的排序方式</td></tr><tr><td align="center">children</td><td align="center">子元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Row"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Expanded</span><span class="token punctuation">(</span>child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="8-Column垂直布局组件"><a href="#8-Column垂直布局组件" class="headerlink" title="8.    Column垂直布局组件"></a>8.    Column垂直布局组件</h3><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mainAxisAlignment</td><td align="center">主轴的排序方式</td></tr><tr><td align="center">crossAxisAlignment</td><td align="center">次轴的排序方式</td></tr><tr><td align="center">children</td><td align="center">子元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Column"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>          mainAxisAlignment<span class="token operator">:</span> MainAxisAlignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>green<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="9-Expanded"><a href="#9-Expanded" class="headerlink" title="9.    Expanded"></a>9.    Expanded</h3><blockquote><p>类似于web中的flex布局，Expanded可用在Row，Column中</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">flex</td><td align="center">元素占整个Row/Column的比例</td></tr><tr><td align="center">child</td><td align="center">子元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Expanded"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Expanded</span><span class="token punctuation">(</span>              flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>                height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="10-Stack组件"><a href="#10-Stack组件" class="headerlink" title="10.    Stack组件"></a>10.    Stack组件</h3><blockquote><p>Stack栈的意思，用Stack或Stack结合Align或者Stack结合Positiond来实现定位</p></blockquote><h4 id="10-1-Stack"><a href="#10-1-Stack" class="headerlink" title="10.1    Stack"></a>10.1    Stack</h4><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">alignment</td><td align="center">配置所有子元素显示的位置</td></tr><tr><td align="center">children</td><td align="center">子组件</td></tr><tr><td align="center">fit</td><td align="center">用来决定没有Positioned方式时候子Widget的大小，StackFit.loose 指的是子Widget 多大就多大，StackFit.expand使子Widget的大小和父组件一样大</td></tr><tr><td align="center">overflow</td><td align="center">overflow :指子Widget 超出Stack时候如何显示，默认值是Overflow.clip，子Widget超出Stack会被截断;Overflow.visible超出部分还会显示的</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Stack"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Stack</span><span class="token punctuation">(</span>          fit<span class="token operator">:</span> StackFit<span class="token punctuation">.</span>expand<span class="token punctuation">,</span><span class="token comment" spellcheck="true">//这个属性设置后，Container内部设置的宽高不起作用，是以父容器为准</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="10-2-Align"><a href="#10-2-Align" class="headerlink" title="10.2    Align"></a>10.2    Align</h4><blockquote><p>Stack 组件中结合 Align 组件可以控制每个子元素的显示位置</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">alignment</td><td align="center">配置所有子元素显示的位置</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr></tbody></table><h4 id="10-3-Positiond"><a href="#10-3-Positiond" class="headerlink" title="10.3 Positiond"></a>10.3 Positiond</h4><blockquote><p>Stack 组件中结合 Positioned 组件也可以控制每个子元素的显示位置</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">top</td><td align="center">子元素距离顶部的距离</td></tr><tr><td align="center">bottom</td><td align="center">子元素距离底部的距离</td></tr><tr><td align="center">left</td><td align="center">子元素距离左侧的距离</td></tr><tr><td align="center">right</td><td align="center">子元素距离右侧的距离</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Stack"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Stack</span><span class="token punctuation">(</span>            children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>              <span class="token function">Positioned</span><span class="token punctuation">(</span>                left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                  color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>                  height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Positioned</span><span class="token punctuation">(</span>                right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                bottom<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                  color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>                  height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="11-AspeactRatio组件"><a href="#11-AspeactRatio组件" class="headerlink" title="11.    AspeactRatio组件"></a>11.    AspeactRatio组件</h3><ul><li><p>AspectRatio 的作用是根据设置调整子元素 child 的宽高比</p></li><li><p>AspectRatio 首先会在布局限制条件允许的范围内尽可能的扩展，widget 的高度是由宽 </p><p>度和比率决定的，类似于 BoxFit 中的 contain，按照固定比率去尽量占满区域</p></li><li><p>如果在满足所有限制条件过后无法找到一个可行的尺寸，AspectRatio 最终将会去优先 </p><p>适应布局限制条件，而忽略所设置的比率</p></li></ul><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">AspeactRatio</td><td align="center">宽高比，最终可能不会以这个值布局，具体要看综合因素。，外层是否允许按照这种比率进行布局，这只是一个参考值</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr></tbody></table><h3 id="12-Card组件"><a href="#12-Card组件" class="headerlink" title="12.    Card组件"></a>12.    Card组件</h3><blockquote><p>Card 是卡片组件块，内容可以由大多数类型的 Widget 构成，Card 具有圆角和阴影，这让它 </p><p>看起来有立体感</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">margin</td><td align="center">外边距</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr><tr><td align="center">Shape</td><td align="center">Card 的阴影效果，默认的阴影效果为圆角的</td></tr><tr><td align="center">elevation</td><td align="center">外部阴影的偏离值</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>            width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            child<span class="token operator">:</span> <span class="token function">Card</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              elevation<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是卡片的内容"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              shape<span class="token operator">:</span> <span class="token function">RoundedRectangleBorder</span><span class="token punctuation">(</span>                borderRadius<span class="token operator">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="13-RaisedButton组件"><a href="#13-RaisedButton组件" class="headerlink" title="13.    RaisedButton组件"></a>13.    RaisedButton组件</h3><blockquote><p>Flutter通常用RaisedButton定义一个按钮</p><p>Flutter 里有很多的 Button 组件很多，常见的按钮组件有：RaisedButton、FlatButton、 </p><p>IconButton、OutlineButton、ButtonBar、FloatingActionButton 等。 </p><p><strong>RaisedButton</strong> ：凸起的按钮，其实就是 Material Design 风格的 Button </p><p><strong>FlatButton</strong> ：扁平化的按钮 </p><p><strong>OutlineButton</strong>：线框按钮 </p><p><strong>IconButton</strong> ：图标按钮 </p><p><strong>ButtonBar</strong>:按钮组 </p><p><strong>FloatingActionButton:</strong>浮动按钮</p></blockquote><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>onPressed</td><td>VoidCallback ，一般接收一个方法</td><td>必填参数，按下按钮时触发的回调，接收一个方法，传 null 表示按钮禁用，会显示禁用相关样式</td></tr><tr><td>child</td><td>Widget</td><td>文本控件</td></tr><tr><td>textColor</td><td>Color</td><td>文本颜色</td></tr><tr><td>color</td><td>Color</td><td>按钮的颜色</td></tr><tr><td>disabledColor</td><td>Color</td><td>按钮禁用时的颜色</td></tr><tr><td>disabledTextColor</td><td>Color</td><td>按钮禁用时的文本颜色</td></tr><tr><td>splashColor</td><td>Color</td><td>点击按钮时水波纹的颜色</td></tr><tr><td>highlightColor</td><td>Color</td><td>点击（长按）按钮后按钮的颜色</td></tr><tr><td>elevation</td><td>double</td><td>阴影的范围，值越大阴影范围越大</td></tr><tr><td>padding</td><td></td><td>内边距</td></tr><tr><td>shape</td><td></td><td>设置按钮的形状 shape: RoundedRectangleBorder( borderRadius: BorderRadius.circular(10),)</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">RaisedButton</span><span class="token punctuation">(</span>                onPressed<span class="token operator">:</span> null<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"raisedButton"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">IconButton</span><span class="token punctuation">(</span>                icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                tooltip<span class="token operator">:</span> <span class="token string">"IconButton"</span><span class="token punctuation">,</span>                disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">FlatButton</span><span class="token punctuation">(</span>                child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"FlatButton"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="14-Wrap组件"><a href="#14-Wrap组件" class="headerlink" title="14.    Wrap组件"></a>14.    Wrap组件</h3><blockquote><p>Wrap 可以实现流布局，单行的 Wrap 跟 Row 表现几乎一致，单列的 Wrap 则跟 Column 表 </p><p>现几乎一致。但 Row 与 Column 都是单行单列的，Wrap 则突破了这个限制，mainAxis 上空 </p><p>间不足时，则向 crossAxis 上去扩展显示</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">direction</td><td align="center">主轴方向，默认水平</td></tr><tr><td align="center">alignment</td><td align="center">主轴对其方式</td></tr><tr><td align="center">spacing</td><td align="center">主轴方向上的间距</td></tr><tr><td align="center">textDirection</td><td align="center">定义了Dirction的摆放顺序，默认是Down,</td></tr><tr><td align="center">runAlignment</td><td align="center">run 的对齐方式。run 可以理解为新的行或者列，如果是水平方向布局的话，run 可以理解为新的一行</td></tr><tr><td align="center">runSpacing</td><td align="center">run 的间距</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Wrap</span><span class="token punctuation">(</span>          spacing<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>          alignment<span class="token operator">:</span> WrapAlignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="15-自定义组件"><a href="#15-自定义组件" class="headerlink" title="15.    自定义组件"></a>15.    自定义组件</h3><ul><li><p>StatelessWidget:是无状态组件，状态不可变的 widget</p></li><li><p>StatefulWidget:是有状态组件，持有的状态可能在 widget 生命周期改变。通俗的讲：如果我 </p><p>们想改变页面中的数据的话这个时候就需要用到 <strong>StatefulWidget</strong></p></li></ul><h3 id="16-BottomNavigationBar组件"><a href="#16-BottomNavigationBar组件" class="headerlink" title="16.    BottomNavigationBar组件"></a>16.    BottomNavigationBar组件</h3><blockquote><p>BottomNavigationBar 是底部导航条，可以让我们定义底部 Tab 切换，bottomNavigationBar </p><p>是 Scaffold 组件的参数</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">items</td><td align="center">List<bottomnavigationbaritem> 底部导航 条按钮集合</bottomnavigationbaritem></td></tr><tr><td align="center">iconSize</td><td align="center">icon</td></tr><tr><td align="center">currentIndex</td><td align="center">默认选中第几个</td></tr><tr><td align="center">onTap</td><td align="center">选中变化回调函数</td></tr><tr><td align="center">fixedColor</td><td align="center">选中的颜色</td></tr><tr><td align="center">type</td><td align="center">BottomNavigationBarType.fixed  BottomNavigationBarType.shifting</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>   List<span class="token operator">&lt;</span>BottomNavigationBarItem<span class="token operator">></span> items<span class="token operator">=</span><span class="token punctuation">[</span>     <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>home<span class="token punctuation">)</span><span class="token punctuation">,</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"首页"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>home<span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">,</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"搜索"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我的"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        bottomNavigationBar<span class="token operator">:</span> <span class="token function">BottomNavigationBar</span><span class="token punctuation">(</span>items<span class="token operator">:</span> items<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="17-路由"><a href="#17-路由" class="headerlink" title="17.    路由"></a>17.    路由</h3><blockquote><p>Flutter 中的路由通俗的讲就是页面跳转。在 Flutter 中通过 Navigator 组件管理路由导航。 </p><p>并提供了管理堆栈的方法。如：Navigator.push 和 Navigator.pop </p><p>Flutter 中给我们提供了两种配置路由跳转的方式：1、基本路由 2、命名路由</p></blockquote><h4 id="17-1-基本路由"><a href="#17-1-基本路由" class="headerlink" title="17.1    基本路由"></a>17.1    基本路由</h4><blockquote><p>比如我们现在想从 HomePage 组件跳转到 SearchPage 组件</p></blockquote><ul><li><ol><li>需要在 HomPage 中引入 SearchPage.dart</li></ol></li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'../SearchPage.dart'</span><span class="token punctuation">;</span></code></pre><ul><li><ol start="2"><li>在HomePage中通过下面方式调整</li></ol></li></ul><pre class=" language-java"><code class="language-java"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>    child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"跳转到搜索页面"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>            <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                builder<span class="token operator">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token function">SearchPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>accentColor<span class="token punctuation">,</span>    textTheme<span class="token operator">:</span> ButtonTextTheme<span class="token punctuation">.</span>primary<span class="token punctuation">)</span></code></pre><ul><li><ol start="3"><li>中的基本路由跳转传值</li></ol></li></ul><blockquote><p>比如我们现在想从 HomePage 组件跳转到 SearchPage 组件传值</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>    child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"跳转到搜索页面"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>            <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                builder<span class="token operator">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token function">SearchPage</span><span class="token punctuation">(</span>title<span class="token operator">:</span><span class="token string">"表单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//传值</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>accentColor<span class="token punctuation">,</span>    textTheme<span class="token operator">:</span> ButtonTextTheme<span class="token punctuation">.</span>primary<span class="token punctuation">)</span></code></pre><h4 id="17-2-命名路由"><a href="#17-2-命名路由" class="headerlink" title="17.2    命名路由"></a>17.2    命名路由</h4><h5 id="17-2-1-配置路由"><a href="#17-2-1-配置路由" class="headerlink" title="17.2.1    配置路由"></a>17.2.1    配置路由</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Tabs.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'pages/Search.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Form.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@override</span> Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>             <span class="token comment" spellcheck="true">// home:Tabs(), </span>            initialRoute<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>            routes<span class="token operator">:</span> <span class="token punctuation">{</span>                 <span class="token string">'/'</span><span class="token operator">:</span><span class="token punctuation">(</span>contxt<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                 <span class="token string">'/search'</span><span class="token operator">:</span><span class="token punctuation">(</span>contxt<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token function">SearchPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                 <span class="token string">'/form'</span><span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">FormPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h5 id="17-2-2-路由跳转"><a href="#17-2-2-路由跳转" class="headerlink" title="17.2.2    路由跳转"></a>17.2.2    路由跳转</h5><pre class=" language-java"><code class="language-java"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>     child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"跳转到搜索页面"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         Navigator<span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">'/search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>accentColor<span class="token punctuation">,</span>     textTheme<span class="token operator">:</span> ButtonTextTheme<span class="token punctuation">.</span>primary<span class="token punctuation">)</span></code></pre><h4 id="17-3-命名路由传值"><a href="#17-3-命名路由传值" class="headerlink" title="17.3    命名路由传值"></a>17.3    命名路由传值</h4><h5 id="17-3-1-配置路由"><a href="#17-3-1-配置路由" class="headerlink" title="17.3.1    配置路由"></a>17.3.1    配置路由</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Tabs.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Search.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Form.dart'</span><span class="token punctuation">;</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>     <span class="token keyword">final</span> routes <span class="token operator">=</span> <span class="token punctuation">{</span>         <span class="token string">'/'</span><span class="token operator">:</span> <span class="token punctuation">(</span>contxt<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token string">'/search'</span><span class="token operator">:</span> <span class="token punctuation">(</span>contxt<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">SearchPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token string">'/form'</span><span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token punctuation">{</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">FormPage</span><span class="token punctuation">(</span>arguments<span class="token operator">:</span> arguments<span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token punctuation">}</span>    <span class="token annotation punctuation">@override</span> Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>            home<span class="token operator">:</span> <span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             onGenerateRoute<span class="token operator">:</span> <span class="token punctuation">(</span>RouteSettings settings<span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token comment" spellcheck="true">// 统一处理 </span>                <span class="token keyword">final</span> String name <span class="token operator">=</span> settings<span class="token punctuation">.</span>name<span class="token punctuation">;</span>                 <span class="token keyword">final</span> Function pageContentBuilder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>pageContentBuilder <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                     <span class="token keyword">if</span> <span class="token punctuation">(</span>settings<span class="token punctuation">.</span>arguments <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                         <span class="token keyword">final</span> Route route <span class="token operator">=</span> <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                             builder<span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">pageContentBuilder</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arguments<span class="token operator">:</span> settings<span class="token punctuation">.</span>arguments<span class="token punctuation">)</span>                        <span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token keyword">return</span> route<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                         <span class="token keyword">final</span> Route route <span class="token operator">=</span> <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                             builder<span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">pageContentBuilder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> route<span class="token punctuation">;</span>                     <span class="token punctuation">}</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h5 id="17-3-2-跳转传值"><a href="#17-3-2-跳转传值" class="headerlink" title="17.3.2    跳转传值"></a>17.3.2    跳转传值</h5><pre class=" language-java"><code class="language-java"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>     child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"跳转到表单演示页面"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         Navigator<span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>                             <span class="token string">'/form'</span><span class="token punctuation">,</span>arguments<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string">"id"</span><span class="token operator">:</span><span class="token number">20</span> <span class="token punctuation">}</span>                           <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>accentColor<span class="token punctuation">,</span>    textTheme<span class="token operator">:</span> ButtonTextTheme<span class="token punctuation">.</span>primary<span class="token punctuation">)</span></code></pre><h5 id="17-3-3-接收参数"><a href="#17-3-3-接收参数" class="headerlink" title="17.3.3    接收参数"></a>17.3.3    <strong>接收参数</strong></h5><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">class</span> <span class="token class-name">FormPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>     <span class="token keyword">final</span> Map arguments<span class="token punctuation">;</span>     <span class="token function">FormPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token annotation punctuation">@override</span> Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>             appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span> title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"搜索"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                           <span class="token punctuation">)</span><span class="token punctuation">,</span>            body<span class="token operator">:</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是一个表单页面 ${arguments != null ? arguments['id'] : '0'}"</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h4 id="17-4-命名路单独抽离到一-个文件"><a href="#17-4-命名路单独抽离到一-个文件" class="headerlink" title="17.4    命名路单独抽离到一 个文件"></a>17.4    <strong>命名路单独抽离到一</strong> 个文件</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'../pages/Tabs.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'../pages/Search.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'../pages/Form.dart'</span><span class="token punctuation">;</span> <span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Function<span class="token operator">></span> routes <span class="token operator">=</span> <span class="token punctuation">{</span>     <span class="token string">'/'</span><span class="token operator">:</span><span class="token punctuation">(</span>contxt<span class="token punctuation">,</span><span class="token punctuation">{</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token string">'/search'</span><span class="token operator">:</span><span class="token punctuation">(</span>contxt<span class="token punctuation">,</span><span class="token punctuation">{</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token function">SearchPage</span><span class="token punctuation">(</span>arguments<span class="token operator">:</span> arguments<span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token string">'/form'</span><span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token punctuation">{</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token function">FormPage</span><span class="token punctuation">(</span>arguments<span class="token operator">:</span> arguments<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>var onGenerateRoute<span class="token operator">=</span><span class="token punctuation">(</span>RouteSettings settings<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">// 统一处理 </span>    <span class="token keyword">final</span> String name <span class="token operator">=</span> settings<span class="token punctuation">.</span>name<span class="token punctuation">;</span>     <span class="token keyword">final</span> Function pageContentBuilder <span class="token operator">=</span> routes<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>pageContentBuilder <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">final</span> Route route <span class="token operator">=</span> <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>             builder<span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">pageContentBuilder</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arguments<span class="token operator">:</span> settings<span class="token punctuation">.</span>arguments<span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> route<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'routes/Routes.dart'</span><span class="token punctuation">;</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@override</span>    Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>             <span class="token comment" spellcheck="true">// home:Tabs(), </span>            initialRoute<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>             onGenerateRoute<span class="token operator">:</span> onGenerateRoute         <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h4 id="17-5-路由-路由替换-返回到根路由"><a href="#17-5-路由-路由替换-返回到根路由" class="headerlink" title="17.5    路由 路由替换 返回到根路由"></a>17.5    路由 路由替换 返回到根路由</h4><h5 id="17-5-1-返回到上一页"><a href="#17-5-1-返回到上一页" class="headerlink" title="17.5.1    返回到上一页"></a>17.5.1    返回到上一页</h5><pre class=" language-java"><code class="language-java">Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="17-5-2-替换路由"><a href="#17-5-2-替换路由" class="headerlink" title="17.5.2    替换路由"></a>17.5.2    替换路由</h5><blockquote><p>比如我们从用户中心页面跳转到了 registerFirst 页面，然后从 registerFirst 页面通过 </p><p>pushReplacementNamed 跳转到了 registerSecond 页面。这个时候当我们点击 registerSecond </p><p>的返回按钮的时候它会直接返回到用户中心</p></blockquote><pre class=" language-java"><code class="language-java">Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushReplacementNamed</span><span class="token punctuation">(</span><span class="token string">'/registerSecond'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="17-5-3-返回到根路由"><a href="#17-5-3-返回到根路由" class="headerlink" title="17.5.3    返回到根路由"></a>17.5.3    返回到根路由</h5><blockquote><p>比如我们从用户中心跳转到 registerFirst 页面，然后从 registerFirst 页面跳转到 registerSecond </p><p>页面，然后从 registerSecond 跳转到了 registerThird 页面。这个时候我们想的是 registerThird </p><p>注册成功后返回到用户中心。 这个时候就用到了返回到根路由的方法。</p></blockquote><pre class=" language-java"><code class="language-java">Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushAndRemoveUntil</span><span class="token punctuation">(</span>     <span class="token keyword">new</span> <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>builder<span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Tabs</span><span class="token punctuation">(</span>index<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>                         <span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> route <span class="token operator">==</span> null <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="18-Appbar组件"><a href="#18-Appbar组件" class="headerlink" title="18.    Appbar组件"></a>18.    Appbar组件</h3><blockquote><p>自定义顶部导航按钮图标、颜色 以及TabBar定义顶部 Tab</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">leading</td><td align="center">在标题前面显示的一个控件，在首页通常显示应用的 logo；在其他界面通常显示为返回按钮</td></tr><tr><td align="center">title</td><td align="center">标题，通常显示为当前界面的标题文字，可以放组件</td></tr><tr><td align="center">actions</td><td align="center">通常使用 IconButton 来表示，可以放按钮组</td></tr><tr><td align="center">bottom</td><td align="center">通常放 tabBar，标题下面显示一个 Tab 导航栏</td></tr><tr><td align="center">backgroundColor</td><td align="center">导航背景颜色</td></tr><tr><td align="center">iconTheme</td><td align="center">图标样式</td></tr><tr><td align="center">textTheme</td><td align="center">文字样式</td></tr><tr><td align="center">centerTitle</td><td align="center">标题是否居中显示</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>backgroundColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="19-TabBar-常见属性"><a href="#19-TabBar-常见属性" class="headerlink" title="19.    TabBar 常见属性"></a>19.    TabBar <strong>常见属性</strong></h3><blockquote><p>AppBar 中自定义 TabBar 实现顶部 Tab 切换</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">tabs</td><td align="center">显示的标签内容，一般使用 Tab 对象,也可以是其他的 Widget</td></tr><tr><td align="center">controller</td><td align="center">TabController 对象</td></tr><tr><td align="center">isScrollable</td><td align="center">是否可滚动</td></tr><tr><td align="center">indicatorColor</td><td align="center">指示器颜色</td></tr><tr><td align="center">indicatorWeight</td><td align="center">指示器高度</td></tr><tr><td align="center">indicatorPadding</td><td align="center">底部指示器的 Padding</td></tr><tr><td align="center">indicator</td><td align="center">指示器 decoration，例如边框等</td></tr><tr><td align="center">indicatorSize</td><td align="center">指示器大小计算方式，TabBarIndicatorSize.label 跟文字等宽,TabBarIndicatorSize.tab 跟每个 tab 等宽</td></tr><tr><td align="center">labelColor</td><td align="center">选中 label 颜色</td></tr><tr><td align="center">labelStyle</td><td align="center">选中 label 的 Style</td></tr><tr><td align="center">labelPadding</td><td align="center">每个 label 的 padding 值</td></tr><tr><td align="center">unselectedLabelColor</td><td align="center">未选中 label 颜色</td></tr><tr><td align="center">unselectedLabelStyle</td><td align="center">未选中 label 的 Style</td></tr></tbody></table><h3 id="20-Drawer侧边栏"><a href="#20-Drawer侧边栏" class="headerlink" title="20.    Drawer侧边栏"></a>20.    Drawer侧边栏</h3><blockquote><p>在 Scaffold 组件里面传入 drawer 参数可以定义左侧边栏，传入 endDrawer 可以定义右侧边 </p><p>栏。侧边栏默认是隐藏的，我们可以通过手指滑动显示侧边栏，也可以通过点击按钮显示侧 </p><p>边栏。</p></blockquote><p><strong>DrawerHeader</strong></p><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">decoration</td><td align="center">设置顶部背景颜色</td></tr><tr><td align="center">child</td><td align="center">配置子元素</td></tr><tr><td align="center">padding</td><td align="center">内边距</td></tr><tr><td align="center">margin</td><td align="center">外边距</td></tr></tbody></table><p><strong>UserAccountsDrawerHeader</strong></p><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">decoration</td><td align="center">设置顶部背景颜色</td></tr><tr><td align="center">accountName</td><td align="center">账户名称</td></tr><tr><td align="center">accountEmail</td><td align="center">账户邮箱</td></tr><tr><td align="center">currentAccountPicture</td><td align="center">用户头像</td></tr><tr><td align="center">otherAccountsPictures</td><td align="center">用来设置当前账户其他账户头像</td></tr><tr><td align="center">margin</td><td align="center">外边距</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// TODO: implement build</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        drawer<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>          color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>            children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>             <span class="token function">UserAccountsDrawerHeader</span><span class="token punctuation">(</span>                 accountName<span class="token operator">:</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong>侧边栏路由跳转</strong></p><pre class=" language-java"><code class="language-java">onTap<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     Navigator<span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">'/search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><h3 id="21-FloatingActionButton"><a href="#21-FloatingActionButton" class="headerlink" title="21.    FloatingActionButton"></a>21.    FloatingActionButton</h3><blockquote><p><strong>FloatingActionButton 简称 FAB ,</strong>可以实现浮动按钮，也可以实现类似闲鱼 app 的地步凸 </p><p>起导航 </p></blockquote><table><thead><tr><th align="center">*<em>属性名称 *</em></th><th align="center">属性值</th></tr></thead><tbody><tr><td align="center">child</td><td align="center">子视图，一般为 Icon，不推荐使用文字</td></tr><tr><td align="center">tooltip</td><td align="center">FAB 被长按时显示，也是无障碍功能</td></tr><tr><td align="center">backgroundColor</td><td align="center">背景颜色</td></tr><tr><td align="center">elevation</td><td align="center">未点击的时候的阴影</td></tr><tr><td align="center">hignlightElevation</td><td align="center">点击时阴影值，默认 12.0</td></tr><tr><td align="center">onPressed</td><td align="center">点击事件回调</td></tr><tr><td align="center">shape</td><td align="center">可以定义 FAB 的形状等</td></tr><tr><td align="center">mini</td><td align="center">是否是 mini 类型默认 false</td></tr></tbody></table><h3 id="22-表单"><a href="#22-表单" class="headerlink" title="22.    表单"></a>22.    表单</h3><blockquote><p>Flutter 中常见的表单有 TextField 单行文本框，TextField 多行文本框、CheckBox、Radio、Switch </p><p>CheckboxListTile、RadioListTile、SwitchListTile、Slide</p></blockquote><h4 id="22-1-TextField"><a href="#22-1-TextField" class="headerlink" title="22.1    TextField"></a>22.1    TextField</h4><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">maxLines</td><td align="center">设置此参数可以把文本框改为多行文本框</td></tr><tr><td align="center">onChanged</td><td align="center">文本框改变的时候触发的事件</td></tr><tr><td align="center">decoration</td><td align="center"><strong>hintText</strong> 类似 html 中的 placeholder；<strong>border</strong> 配置文本框边框 OutlineInputBorder 配合使用；<strong>labelText</strong> lable 的名称；<strong>labelStyle</strong> 配置 lable 的样式</td></tr><tr><td align="center">obscureText</td><td align="center">把文本框框改为密码框</td></tr><tr><td align="center">controller</td><td align="center"><strong>controller</strong> 结合 TextEditingController()可以配置表单默认显示的内容</td></tr></tbody></table><h4 id="22-2-CheckBox，CheckBoxListTitle"><a href="#22-2-CheckBox，CheckBoxListTitle" class="headerlink" title="22.2    CheckBox，CheckBoxListTitle"></a>22.2    CheckBox，CheckBoxListTitle</h4><p><strong>Checkbox</strong> <strong>常见属性</strong></p><table><thead><tr><th>*<em>属性 *</em></th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>true 或者 false</td></tr><tr><td>onChanged</td><td>改变的时候触发的事件</td></tr><tr><td>activeColor</td><td>选中的颜色、背景颜色</td></tr><tr><td>checkColor</td><td>选中的颜色、Checkbox 里面对号的颜色</td></tr></tbody></table><p><strong>CheckboxListTile</strong> <strong>常见属性</strong></p><table><thead><tr><th align="center">*<em>属性 *</em></th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">true 或者 false</td></tr><tr><td align="center">onChanged</td><td align="center">改变的时候触发的事件</td></tr><tr><td align="center">activeColor</td><td align="center">选中的颜色、背景颜色</td></tr><tr><td align="center">title</td><td align="center">标题</td></tr><tr><td align="center">subtitle</td><td align="center">二级标题</td></tr><tr><td align="center">secondary</td><td align="center">配置图标或者图片</td></tr><tr><td align="center">selected</td><td align="center">选中的时候文字颜色是否跟着改变</td></tr></tbody></table><h4 id="22-3-Radio、RadioListTile"><a href="#22-3-Radio、RadioListTile" class="headerlink" title="22.3    Radio、RadioListTile"></a>22.3    Radio、RadioListTile</h4><p><strong>Radio</strong> <strong>常用属性</strong></p><table><thead><tr><th align="center">*<em>属性 *</em></th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">单选的值</td></tr><tr><td align="center">onChanged</td><td align="center">改变时触发</td></tr><tr><td align="center">activeColor</td><td align="center">选中的颜色、背景颜色</td></tr><tr><td align="center">groupValue</td><td align="center">选择组的值</td></tr></tbody></table><p><strong>RadioListTile</strong> <strong>常用属性</strong></p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">true 或者 false</td></tr><tr><td align="center">onChanged</td><td align="center">改变的时候触发的事件</td></tr><tr><td align="center">activeColor</td><td align="center">选中的颜色、背景颜色</td></tr><tr><td align="center">title</td><td align="center">标题</td></tr><tr><td align="center">subtitle</td><td align="center">二级标题</td></tr><tr><td align="center">secondary</td><td align="center">配置图标或者图片</td></tr><tr><td align="center">groupValue</td><td align="center">选择组的值</td></tr></tbody></table><h4 id="22-4-Switch开关"><a href="#22-4-Switch开关" class="headerlink" title="22.4    Switch开关"></a>22.4    Switch开关</h4><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">单选的值</td></tr><tr><td align="center">onChanged</td><td align="center">改变时触发</td></tr><tr><td align="center">activeColor</td><td align="center">选中的颜色、背景颜色</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora基本使用</title>
      <link href="/2019/08/23/typora-ji-ben-shi-yong/"/>
      <url>/2019/08/23/typora-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><code>Ctrl 0</code>到 <code>Ctrl4</code> : 普通文本一级~四级标题</p><p><code>Ctrl B</code> :加粗</p><p><strong>我是加粗的文字</strong></p><p><code>Ctrl I</code> :斜体</p><p><em>我是斜体的文字</em></p><p><code>Ctrl U</code> :下划线</p><p><u>我是带下划线的文字</u></p><p><code>Ctrl K</code>:超链接</p><p><a href www.baidu.com"">我是超链接</a></p><p><code>Ctrl T</code>:表格</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p><code>shift+ctrl+Q</code>:引用</p><blockquote><p>我是引用的一段话</p></blockquote><p><code>shift+ctrl+I</code>:插入图片</p><p><img src="https://www.baidu.com/img/baidu_jgylogo3.gif" alt="baidu"></p><p>三个飘号：代码块</p><pre class=" language-javascript"><code class="language-javascript">我是代码块</code></pre><p>有序，无序列表：<code>*</code>，<code>+</code>，<code>-</code>，按<code>tab</code>键可以切换二级列表</p><ul><li>一级列表1</li><li>一级列表2<ul><li>二级列表1</li><li>二级列表2</li></ul></li></ul><p>上标：<code>^上标^</code></p><p>​    2^2^</p><p>下标：<code>~下标~</code></p><p>​    H<del>2</del>O</p><p>高亮：<code>==高亮字==</code></p><p>​    ==我是高亮的字==</p><p>分割线：<code>---</code></p><hr><p>emoji图片：<code>:</code></p><p>​    :arrow_up:</p><p>目录生成：<code>[toc]</code></p><p>[TOC]</p><p>流程图：<code>Flowchart</code>，<code>Mermaid</code></p><ul><li><p>流程图：Flowchart</p><pre class=" language-flow"><code class="language-flow"></code></pre></li></ul><ul><li><p>流程图：Mermaid</p><pre class=" language-mermaid"><code class="language-mermaid"></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
