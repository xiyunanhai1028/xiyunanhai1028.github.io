<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>&#39;es6学习&#39;</title>
      <link href="/2019/09/26/es6-xue-xi/"/>
      <url>/2019/09/26/es6-xue-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="1-babel安装："><a href="#1-babel安装：" class="headerlink" title="1.    babel安装："></a>1.    babel安装：</h3><ul><li><p>全局安装：npm install -g babel-cli</p></li><li><p>本地安装：npm install –save-dev babel-preset-es2015 babel-cli</p></li><li><p>创建.babelrc文件</p><ul><li><pre class=" language-js"><code class="language-js"><span class="token punctuation">{</span>  <span class="token string">"presets"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token string">"es2015"</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token string">"plugins"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre></li></ul></li><li><p>转换: babel src/index.js -o dist/index.js</p><ul><li>-o：转换  </li><li>意思：将src下的index.js文件转化为dis文件下的index.js文件</li></ul></li><li><p>配置package.json </p><ul><li><pre class=" language-js"><code class="language-js"><span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token string">"build"</span><span class="token punctuation">:</span><span class="token string">"babel src/index.js -o dist/index.js"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre></li></ul></li><li><p>npm run build</p></li></ul><h3 id="2-var-let-const区别"><a href="#2-var-let-const区别" class="headerlink" title="2.    var,let,const区别"></a>2.    var,let,const区别</h3><blockquote><p>var:全局变量，容易被污染<br>let:局部变量<br>const：常量</p></blockquote><h3 id="3-null-undefined区别"><a href="#3-null-undefined区别" class="headerlink" title="3.    null,undefined区别"></a>3.    null,undefined区别</h3><blockquote><p>null:有值，但是为空</p><p>undefined：没有值，未定义</p></blockquote><h3 id="4-解构"><a href="#4-解构" class="headerlink" title="4.    解构"></a>4.    解构</h3><h4 id="4-1-数组解构"><a href="#4-1-数组解构" class="headerlink" title="4.1    数组解构"></a>4.1    数组解构</h4><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span></code></pre><h4 id="4-2-对象解构"><a href="#4-2-对象解构" class="headerlink" title="4.2    对象解构"></a>4.2    对象解构</h4><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> <span class="token punctuation">{</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token operator">=</span><span class="token punctuation">{</span>a<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span>c<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>如果先定义了需要加括号：    <span class="token keyword">let</span> a    <span class="token punctuation">(</span><span class="token punctuation">{</span>a<span class="token punctuation">}</span><span class="token operator">=</span><span class="token punctuation">{</span>a<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><h4 id="4-3-字符串解构"><a href="#4-3-字符串解构" class="headerlink" title="4.3    字符串解构"></a>4.3    字符串解构</h4><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'abc'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span></code></pre><h3 id="5-扩展运算符和rest运算符"><a href="#5-扩展运算符和rest运算符" class="headerlink" title="5.    扩展运算符和rest运算符"></a>5.    扩展运算符和rest运算符</h3><h4 id="5-1-扩展运算符"><a href="#5-1-扩展运算符" class="headerlink" title="5.1    扩展运算符"></a>5.1    扩展运算符</h4><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span>b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></code></pre><h4 id="5-2-rest运算符"><a href="#5-2-rest运算符" class="headerlink" title="5.2    rest运算符"></a>5.2    rest运算符</h4><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>args<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span></code></pre><h3 id="6-字符串模版"><a href="#6-字符串模版" class="headerlink" title="6.    字符串模版"></a>6.    字符串模版</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token string">'疑是地上霜'</span><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token template-string"><span class="token string">`床前明月光，</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.举头望明月，低头思故乡`</span></span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></code></pre><h3 id="7-indexOf-includes-startsWith-endtsWith-repeat"><a href="#7-indexOf-includes-startsWith-endtsWith-repeat" class="headerlink" title="7.    indexOf ,includes, startsWith, endtsWith, repeat"></a>7.    indexOf ,includes, startsWith, endtsWith, repeat</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token string">'23'</span><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token string">'123456789'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//2323</span></code></pre><h3 id="8-ES6数字操作"><a href="#8-ES6数字操作" class="headerlink" title="8.    ES6数字操作"></a>8.    ES6数字操作</h3><pre class=" language-js"><code class="language-js">Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>是否位数字Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>是否不是数字Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>是否是整数Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>转化为整数Number<span class="token punctuation">.</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>转为浮点型Number<span class="token punctuation">.</span>MAX_SAFE_INTEGER：最大安全数Number<span class="token punctuation">.</span>MIN_SAFE_INTEGER：最小安全数Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>安全整数判断</code></pre><h3 id="9-ES6中新增的数组知识"><a href="#9-ES6中新增的数组知识" class="headerlink" title="9.    ES6中新增的数组知识"></a>9.    ES6中新增的数组知识</h3><h4 id="9-1-Array-of"><a href="#9-1-Array-of" class="headerlink" title="9.1    Array.of()"></a>9.1    Array.of()</h4><pre class=" language-js"><code class="language-js"> <span class="token keyword">const</span> arr<span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token keyword">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></code></pre><h4 id="9-2-find"><a href="#9-2-find" class="headerlink" title="9.2    find()"></a>9.2    find()</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">const</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token keyword">const</span> b<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>val<span class="token operator">==</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></code></pre><h4 id="9-3-fill"><a href="#9-3-fill" class="headerlink" title="9.3    fill()"></a>9.3    fill()</h4><pre class=" language-js"><code class="language-js">    <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span>    a<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><h4 id="9-4-for-of"><a href="#9-4-for-of" class="headerlink" title="9.4    for  of"></a>9.4    for  of</h4><pre class=" language-js"><code class="language-js">    <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">let</span> item <span class="token keyword">of</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> a<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> a<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>index<span class="token punctuation">,</span>item<span class="token punctuation">]</span> <span class="token keyword">of</span> a<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    <span class="token punctuation">}</span></code></pre><h4 id="9-5-Array-from"><a href="#9-5-Array-from" class="headerlink" title="9.5    Array.from()"></a>9.5    Array.from()</h4><blockquote><p> json转数组，必须有length</p></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> json<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">"0"</span><span class="token punctuation">:</span><span class="token string">"张三"</span><span class="token punctuation">,</span>    <span class="token string">"1"</span><span class="token punctuation">:</span><span class="token string">"男"</span><span class="token punctuation">,</span>    <span class="token string">"2"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span>    length<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token keyword">let</span> arr<span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></code></pre><h3 id="10-ES6中的箭头函数和扩展"><a href="#10-ES6中的箭头函数和扩展" class="headerlink" title="10.    ES6中的箭头函数和扩展"></a>10.    ES6中的箭头函数和扩展</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> add<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>x<span class="token operator">+</span>y<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h3 id="11-in的用法"><a href="#11-in的用法" class="headerlink" title="11.    in的用法"></a>11.    in的用法</h3><blockquote><p>用来判断对象或者数组中是否存在某个值的</p></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">in</span> a<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//true</span></code></pre><h3 id="12-forEach-filter-some-map-join"><a href="#12-forEach-filter-some-map-join" class="headerlink" title="12.    forEach(),filter(),some(),map(),join()"></a>12.    forEach(),filter(),some(),map(),join()</h3><h3 id="13-ES6中对象"><a href="#13-ES6中对象" class="headerlink" title="13.    ES6中对象"></a>13.    ES6中对象</h3><h4 id="13-1-对象赋值"><a href="#13-1-对象赋值" class="headerlink" title="13.1    对象赋值"></a>13.1    对象赋值</h4><pre class=" language-js"><code class="language-js">    <span class="token keyword">const</span> a<span class="token operator">=</span><span class="token string">"jack"</span>    <span class="token keyword">const</span> b<span class="token operator">=</span><span class="token string">'tom'</span>    <span class="token keyword">const</span> c<span class="token operator">=</span><span class="token punctuation">{</span>a<span class="token punctuation">,</span>b<span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//{a: "jack", b: "tom"}</span></code></pre><h4 id="13-2-对象Key值构建"><a href="#13-2-对象Key值构建" class="headerlink" title="13.2    对象Key值构建"></a>13.2    对象Key值构建</h4><pre class=" language-js"><code class="language-js">    <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token string">'name'</span>    <span class="token keyword">const</span> b<span class="token operator">=</span><span class="token punctuation">{</span>        <span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string">'zhangsan'</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//{name: "zhangsan"}</span></code></pre><h4 id="13-3-Object-is-对象比较"><a href="#13-3-Object-is-对象比较" class="headerlink" title="13.3    Object.is() 对象比较"></a>13.3    Object.is() 对象比较</h4><blockquote><p>===:同值相等  is:严格相等</p></blockquote><pre class=" language-js"><code class="language-js">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">0</span><span class="token operator">===</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//true</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token operator">===</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//false</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//false</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//true</span></code></pre><h4 id="13-4-Object-assign-合并对象"><a href="#13-4-Object-assign-合并对象" class="headerlink" title="13.4    Object.assign( )合并对象"></a>13.4    Object.assign( )合并对象</h4><pre class=" language-js"><code class="language-js">    <span class="token keyword">const</span> a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"张三"</span><span class="token punctuation">}</span>    <span class="token keyword">const</span> b<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"sex"</span><span class="token punctuation">:</span><span class="token string">"男"</span><span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//{name: "张三", sex: "男"}</span></code></pre><h3 id="14-Set-amp-WeakSet"><a href="#14-Set-amp-WeakSet" class="headerlink" title="14.    Set &amp; WeakSet"></a>14.    Set &amp; WeakSet</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">set</span><span class="token punctuation">:</span>集合    <span class="token keyword">let</span> s<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>vale<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vale<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h3 id="15-Map"><a href="#15-Map" class="headerlink" title="15.    Map"></a>15.    Map</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> json1<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'张三'</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token keyword">let</span> json2<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">'salary'</span><span class="token punctuation">:</span><span class="token number">30000</span><span class="token punctuation">,</span>    <span class="token string">'job'</span><span class="token punctuation">:</span><span class="token string">'manager'</span><span class="token punctuation">}</span><span class="token keyword">let</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'userInfo'</span><span class="token punctuation">,</span>json1<span class="token punctuation">)</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'work'</span><span class="token punctuation">,</span>json2<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">"userInfo"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                       <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'张三'</span><span class="token punctuation">,</span>                       <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span>                   <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"work"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                   <span class="token string">'salary'</span><span class="token punctuation">:</span><span class="token number">30000</span><span class="token punctuation">,</span>                   <span class="token string">'job'</span><span class="token punctuation">:</span><span class="token string">'manager'</span>               <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="16-Proxy-预处理"><a href="#16-Proxy-预处理" class="headerlink" title="16.    Proxy:预处理"></a>16.    Proxy:预处理</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> pro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'张三'</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token keyword">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> property<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token keyword">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">apply</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>pro<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">'Jack'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pro<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//Jack</span></code></pre><h3 id="17-promise对象的使用"><a href="#17-promise对象的使用" class="headerlink" title="17.    promise对象的使用"></a>17.    promise对象的使用</h3><blockquote><p>es6中的promise的出现给我们很好的解决了回调地狱的问题</p></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> step1 <span class="token operator">=</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"打开冰箱门"</span><span class="token punctuation">)</span><span class="token keyword">let</span> step2 <span class="token operator">=</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"把大象放冰箱"</span><span class="token punctuation">)</span><span class="token keyword">let</span> step3 <span class="token operator">=</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"关冰箱门"</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>step1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>step2<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>step3<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>        <span class="token keyword">return</span> val    <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> es6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es6 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PMP错题</title>
      <link href="/2019/09/14/pmp-cuo-ti/"/>
      <url>/2019/09/14/pmp-cuo-ti/</url>
      
        <content type="html"><![CDATA[<p>1、 <em>[单选]</em> 某家公司把项目分为A，B，C三组。A组项目将为公司开拓新的业务领域，B组项目非常成熟，是公司利润主要来源，C组项目所处行业正在萎缩，公司给三组项目设定不同的优先级，并按这个优先级分配资源。这是什么管理活动？<br>A company divides projects into three groups: A, B, and C. The A group will open new business areas for the company. B group is very mature. It is the main source of company profits. The industry of C group is shrinking. The company set different priorities for the three groups of projects and allocate resources according to this priority. What is this management activity?</p><ul><li>A：项目管理<br>Project Management</li><li>B：项目集管理<br>Program Management</li><li>C：项目组合管理<br>Portfolio Management</li><li>D：项目治理<br>Project Governance</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568448455174.png" alt="1568448455174"></p><p>==C==：解析：根据题干中的描述，企业按照不同战略目标为项目分组并设定优先级，按照优先级配置资源就是项目组合管理的涵义。见 1.2.3.3。A 是单项目管理；B 项目集应突出项目之间的联系，实现 1+1&gt;2；D 项目治理是项目管理应依据的规则、制度、流程等的管理框架。</p><p>13、 <em>[单选]</em> 项目团队包括来自不同国家不同公司的多个专业小组，有成员问项目经理工作邮件应该用什么语言，计划用哪个公司的模板，评审按哪个公司的流程等一系列问题，项目经理回答这些问题应该参照以下哪一个？<br>The project team includes several professional groups from different companies in different countries. A member asked the project manager a series of questions，such as what language the work email should use, which company’s template to refer for plan, and which company’s process to use for review. Which of the following documents should be referred to by the project manager?</p><ul><li>A：项目章程<br>Project charter</li><li>B：项目沟通管理计划<br>Project communication management plan.</li><li>C：组织治理框架<br>Organizational governance framework.</li><li>D：项目治理框架<br>Project governance framework.</li></ul><p>解析：项目治理框架为项目相关方提供管理项目的结构、过程、角色、职责、终责和决策模型。 见1.3。D</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568448530276.png" alt="1568448530276"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568448499086.png" alt="1568448499086"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569140594645.png" alt="1569140594645"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569140613916.png" alt="1569140613916"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569409658930.png" alt="1569409658930"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569409668052.png" alt="1569409668052"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569409677730.png" alt="1569409677730"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569409691470.png" alt="1569409691470"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569409704270.png" alt="1569409704270"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569473780400.png" alt="1569473780400"></p><h3 id="【每日练习-9-17】"><a href="#【每日练习-9-17】" class="headerlink" title="【每日练习-9.17】"></a>【每日练习-9.17】</h3><blockquote><p>1.项目经理发现由于现有立法，一项功能不能按计划实施。这将严重影响项目基准。若要避免这个问题，项目经理应该事先做什么？</p></blockquote><p>A.花更多的时间创建项目的沟通管理计划</p><p>B.实行更严格的变更请求控制</p><p>C.聘用经验更丰富的供应商团队</p><p>D.在项目启动期间识别假设条件和制约因素</p><blockquote><p>2.一家组织的战略是拓展新兴市场。项目发起人正在准备一次为管理层召开的演示会,演示内容包括项目的社会经济附加值及其对拟议地区生态影响的相关信息。拓展建议书中应包含哪些内容? </p></blockquote><p>A.项目设计、施工和实施的风险分析和风险应对策略</p><p>B.详细的成本分解和应急需求</p><p>C.市场渗透、盈利能力和投资回报率的机会</p><p>D.详细的工作范围和项目实施时间表</p><blockquote><p>3.一家公司正在制定项目管理计划。项目经理希望通过评估员工之前的绩效评审,来组建一支高效率的项目团队。项目经理应该查阅哪一项规划过程输入? </p></blockquote><p>A.人力资源管理计划</p><p>B.事业环境因素</p><p>C.组织过程资产</p><p>D.项目章程</p><blockquote><p>4.由于产品技术规格不完整且不断发生变化,一个创新项目失败了,为确保项目成功交付,本应在哪一个阶段澄清项目生命周期?    </p></blockquote><p>A.启动阶段</p><p>B.执行阶段</p><p>C.监控阶段</p><p>D.规划阶段</p><blockquote><p>5.项目经理发现项目相关方对新项目的期望不高,生产部副主管希望改进制造水平,而财务负责人则期望增加利润。谁能够对期望的项目目标做出最终决定? </p></blockquote><p>A.项目经理</p><p>B.项目群经理</p><p>C.项目发起人</p><p>D.项目客户</p><h3 id="【每日练习-9-18】"><a href="#【每日练习-9-18】" class="headerlink" title="【每日练习-9.18】"></a>【每日练习-9.18】</h3><blockquote><p>1.—名新项目经理收到一份项目章程草案，哪些信息将帮助项目经理参与完成这份文件？</p></blockquote><p>A.商业论证</p><p>B.项目进度计划</p><p>C.成本基准</p><p>D.项目管理系统(PMIS）</p><blockquote><p>2.项目经理在两个期限紧迫的项目之间轮替。尽管时间有限，但他决定从这两个项目中收集经验教训。项目经理应该如何收集经验教训？</p></blockquote><p>A.在每个项目完成时记录经验教训</p><p>B.请求知识管理部门的帮助</p><p>C.存档项目会议的所有会议记录</p><p>D.从启动阶段开始，定期记录经验教训</p><blockquote><p>3.—个项目团队成功实现了一个关键里程碑。为此，团队满足了一个新工艺的关键技术需求，然后使用该工艺开发了几个类似可交付成果的第一个。项目经理下一步应该怎么做？</p></blockquote><p>A.开展绩效评估 </p><p>B.将该项目移交给运营团队</p><p>C.记录经验教训</p><p>D.确保已记录最终成本</p><blockquote><p>4.项目收尾时，项目经理审查上一个阶段收尾信息，以验证所有项目工作是否完成。项目经理应该做什么？</p></blockquote><p>A.集合团队，认可她们对项目付出的努力</p><p>B.通知项目发起人项目已收尾</p><p>C.在组织过程资产中更新经验教训.</p><p>D.执行偏差分析</p><blockquote><p>5.在一个为期两年的新高速公路建设项目的前八个月中,由于缺乏一种机械，项目落后于 进度计划。这属于哪一种事业环境因素？</p></blockquote><p>A.组织结构</p><p>B.基础设施</p><p>C.相关方风险界值</p><p>D.可持续性</p><h3 id="【每日习题-9-19】"><a href="#【每日习题-9-19】" class="headerlink" title="【每日习题-9.19】"></a>【每日习题-9.19】</h3><blockquote><p>1.为了增加销售量，销售部门需要开发一个新项目，项目团队之前没有执行过类似项目。项目经理首先应该做什么？ </p></blockquote><p>A.审查其他公司类似项目的经验教训</p><p>B.为销售部门开会讨论需求</p><p>C.定义项目的主要可交付成果</p><p>D.参与制定项目章程</p><blockquote><p>2.为了扩大客户群，一家公司考虑设立海外分支机构。项目发起人希望得到这项投资的论证。项目经理应该怎么做？</p></blockquote><p>A.与项目相关方开会</p><p>B.制定商业论证</p><p>C.进行成本效益分析</p><p>D.起草项目管理计划</p><blockquote><p>3.项目团队完成了一个从旧数据库转变到新数据库的项目。在经验教训方面，项目经理下一步该怎么做？</p></blockquote><p>A.在相关方收尾会议上提交给发起人</p><p>B.提交给客户确保协议</p><p>C.确保信息储存在项目文件中</p><p>D.确保信息储存在公司知识库中</p><blockquote><p>4.业务开发经理识别到一个机会，通过向现有产品添加一个新功能来扩大市场份额。下一步应该怎么做？</p></blockquote><p>A.任命一名项目经理让项目正式化</p><p>B.开展成本效益分析</p><p>C.开展优势、劣势、机会与威胁（SWOT）分析</p><p>D.制定项目章程</p><blockquote><p>5.在项目启动阶段，项目发起人得知一项新的政府规定可能要求更改项目的现有采购计 划。项目发起人要求项目经理提供能够说服高级管理层继续该项目的相关信息。项目经理可以从哪里找到这个信息？</p></blockquote><p>A.商业论证</p><p>B.项目章程</p><p>C.项目批准要求</p><p>D.组织过程资产</p><p><strong>==项目商业论证：==</strong></p><blockquote><p>项目商业论证指文档化的经济可行性研究报告，用来对尚缺乏充分定义的所选方案的收益进行有效性论证，是启动后续项目管理活动的依据。商业论证列出了项目启动的目标和理由。它有助于在项目结束时根据项目目标衡量项目是否成功。商业论证是一种项目商业文件，可在整个项目生命周期中使用。在项目启动之前通过商业论证，可能会做出继续/终止项目的决策。</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568884771972.png" alt="1568884771972"></p><h3 id="【每日习题-9-23】"><a href="#【每日习题-9-23】" class="headerlink" title="【每日习题-9.23】"></a>【每日习题-9.23】</h3><blockquote><p>1.预防措施已经获得变更控制委员会(CCB)的批准,项目经理下一步应该怎么做？             </p></blockquote><p>A.实施该措施。</p><p>B.为风险添加应急储备</p><p>C.请求项目发起人的授权</p><p>D.签发变更请求</p><blockquote><p>2.为减少成本,一家公司考虑仅保留其项目组合中表现最好的项目。项目经理X和项目经理Y希望确保他们的项目被保留下来。<br>为确保他们的项目被纳入考虑范围,项目经理应该怎么做?  C</p></blockquote><p>A.积极争取支持</p><p>B.影响一名关键资源</p><p>C.提交项目绩效记录</p><p>D.与团队成员头脑风暴</p><blockquote><p>3.项目经理被任命管理一个处于多个时区的全球项目。项目经理希望确保所有团队成员都能及时访问项目文档。项目经理应创建什么? D</p></blockquote><p>A.资源管理计划</p><p>B.项目管理计划</p><p>C.相关方管理计划</p><p>D.项目管理信息系统(PMIS)</p><blockquote><p>4.为工期紧张的并行项目工作的团队了解到其中一个项目将被取消。团队感到松了一口气,因为将不再需要加班了，项目经理下一步该怎么做? B</p></blockquote><p>A.与项目团队开会,说明情况,并收集经验教训。</p><p>B.与项目团队开会,审查问题日志。</p><p>C.立即解散项目团队,让他们能够专注于其他项目</p><p>D.承担项目取消的全部责任</p><blockquote><p>5.项目经理和项目团队已经在公司成功实施一个新的产品线,目前正处于收尾过程。项目经理已经获得内部客户的验收,并开展审查和记录经验教训。<br>为完成该项目,应创建哪一份文件? C</p></blockquote><p>A.项目管理计划更新和最终产品</p><p>B.范围基准和最终产品</p><p>C.最终产品和组织过程资产更新</p><p>D.成本绩效基准和最终产品</p><h3 id="【每日习题-9-24】"><a href="#【每日习题-9-24】" class="headerlink" title="【每日习题-9.24】"></a>【每日习题-9.24】</h3><blockquote><p>1.为了保证成功开始一个涉及交叉型组织团队的项目,项目经理何时应该安排项目启动大会?                                                                   </p></blockquote><p>A.完成项目管理计划时</p><p>B.项目获得批准和资金时</p><p>C.完成项目范围时</p><p>D.项目章程完成75%时</p><blockquote><p>2.监控过程将向项目提供什么好处?  </p></blockquote><p>A.通过观察和衡量项目绩效来识别偏差</p><p>B.通过观察和衡量项目绩效向变更控制委员会(CCB)识别输入</p><p>C.通过观察和衡量项目绩效来更新过程改进计划。</p><p>D.通过观察和衡量项目绩效来更新项目管理计划。</p><p>==4.5监控项目工作引言部分：监控项目工作过程关注把项目的实际绩效和项目管理计划进行比较，监控的主要作用是让相关方了解项目的当前状态并认可为处理问题而采取的行动，BCD皆是在A的基础上进行的改进计划.==</p><blockquote><p>3.一个项目处于执行阶段，由于人力资源团队引入额外的报告需求，发生成本超支。若要避免成本超支，项目经理应该事先做什么？ </p></blockquote><p>A.为新需求增加资源</p><p>B.为新需求增加预算</p><p>C.执行新需求的变更请求</p><p>D.减少交付新需求的测试时间表</p><p>==新报告需求属于变更，应该事先走变更流程，修改成本基准就不会导致成本超支.==</p><blockquote><ol start="4"><li>完成工作之后，卖方请求签署同意合同正式收尾。在接受并批准收尾之前应完成什么? B</li></ol></blockquote><p>A. 确认卖方满足采购管理计划和合同文件中所述的进度计划和预算。</p><p>B. 执行检查和审计，检查卖方工作流程和可交付成果的合规性。</p><p>C. 编制一套完整的文件集，让其能够与最终项目文件一起包含在内。</p><p>D. 调查客户对已完成工作的满意度。</p><blockquote><p>5.谁可以请求与项目预算大幅超支有关的项目变更？ </p></blockquote><p>A. 只有项目发起人</p><p>B. 任何项目相关方</p><p>C. 只有项目经理</p><p>D. 支付额外成本的组织</p><p>==变更请求可由任何项目相关方提出，需经CCB审批。预算大幅超支为干扰项==</p><h3 id="【每日习题-9-25】"><a href="#【每日习题-9-25】" class="headerlink" title="【每日习题-9.25】"></a>【每日习题-9.25】</h3><blockquote><p>1.项目发起人向项目经理提出高层级项目需求。然后项目经理在制定项目管理计划之前，要求与一名主题专家(SME)进行访谈。根据这些信息，项目发起人使用的文件是什么？D</p></blockquote><p>A. 项目工作说明书(SOW)</p><p>B.项目战略计划</p><p>C.项目商业论证</p><p>D.项目章程</p><blockquote><p>2.为了确保成功交付产品，客户要求对需求进行重要更新。项目经理应该怎么做?  A</p></blockquote><p>A.分析该请求</p><p>B.与团队开会</p><p>C.更新问题日志</p><p>D.审查项目管理计划</p><blockquote><p>3.在一个项目的最终阶段，一位关键相关方提出对主要可交付成果的新改进意见。团队不同意进行改进。项目经理应该怎么做？D</p></blockquote><p>A.将该情况记录在风险登记册中</p><p>B.提交变更请求</p><p>C.审查沟通管理计划</p><p>D.审查变更管理计划</p><p>==变更全流程七字口决：提记评，批更通，行！团队虽不同意，但暗示团队已评估，因为审批权不在团队，所以下一步，提交CCB审批，选B。题目强调变更，所以A，C排除了。D不能选，因为题目没说变更流程有问题。本题干扰信息多，注意分离==</p><blockquote><p>4.首席执行官要求项目经理提供绩效报告。项自经理应该在这份报告中包含哪些内容？D</p></blockquote><p>A.己完成百分比和经验教训</p><p>B.问题的当前状态以及更新后的相关方参与评估矩阵</p><p>C.项目风险的绩效测量指标</p><p>D.己完成的工作和关键缋效指标</p><blockquote><p>5.—家公司已经为项目经理设计了一份指南，以便在每个项目结束时举行审查会议。其目的是收集项目的负面和正面影响。刚开始一个项目的项目经理发现，这份指南中没有考虑过往项目中获得的经验教训。这份指南应包含什么内容？ B</p></blockquote><p>A.头脑风暴</p><p>B.对组织过程资产的审查</p><p>C.执行摘要数据表</p><p>D.事业环境因素研究</p><p>【历史群公告】<br>《1912班-群公告汇总》：<br><a href="https://shimo.im/docs/yPCdXtwkrJjQ8hD9/" target="_blank" rel="noopener">https://shimo.im/docs/yPCdXtwkrJjQ8hD9/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java8</title>
      <link href="/2019/09/12/java8/"/>
      <url>/2019/09/12/java8/</url>
      
        <content type="html"><![CDATA[<h4 id="1-Lambda"><a href="#1-Lambda" class="headerlink" title="1.    Lambda"></a>1.    Lambda</h4><h5 id="1-1-基本语法："><a href="#1-1-基本语法：" class="headerlink" title="1.1    基本语法："></a>1.1    基本语法：</h5><blockquote><p>Java8中引入了一个新的操作符<code>-&gt;</code>  该操作符称为箭头操作符或Lambda操作符</p></blockquote><p>箭头操作符将Lambda表达式拆分成两部分：左侧：Lambda表达式的参数列表；右侧：Lambda表达式中所需执行的功能，即Lambda体</p><h5 id="1-2-语法格式："><a href="#1-2-语法格式：" class="headerlink" title="1.2    语法格式："></a>1.2    语法格式：</h5><ul><li><p>语法格式一：无参数，无返回值</p><blockquote><p>() -&gt; System.out.println(“Lambda!”)</p></blockquote></li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Runnable r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Lambda!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    r<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li><p>语法格式二：有一个参数，无返回值</p><blockquote><p>(x) -&gt; System.out.println(“Lambda!”)</p></blockquote></li><li><p>语法格式三：如只有一个参数，小括号可以省</p><blockquote><p>x -&gt; System.out.println(“Lambda!”)</p></blockquote></li><li><p>语法格式四：有两个及以上的参数，有返回值</p><blockquote><p>Comparator<integer> c = (x, y) -&gt; x + y;</integer></p></blockquote><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Comparator<span class="token operator">&lt;</span>Integer<span class="token operator">></span> c <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>    <span class="token keyword">int</span> compare <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>compare<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>语法格式五：有两个及以上的参数，有返回值，且有多条语句</p><blockquote><p> Comparator<integer> c = (x, y) -&gt; {</integer></p><pre><code>    System.out.println(&quot;Lambda&quot;);    return x + y;};</code></pre></blockquote><pre><code>@Testpublic void test3() {    Comparator&lt;Integer&gt; c = (x, y) -&gt; {        System.out.println(&quot;Lambda&quot;);        return x + y;    };    int compare = c.compare(1, 2);    System.out.println(compare);}</code></pre></li></ul><p>实例：</p><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>Person<span class="token operator">></span> personList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>        <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小花"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小芳"</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小张"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小刘"</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小李"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Collections<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>personList<span class="token punctuation">,</span> <span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>p1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> p2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> p1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token operator">-</span>Integer<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> p2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>Person p <span class="token operator">:</span> personList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>案例 ：声明函数式接口，接口中声明抽象方法，public String getValue(String str)；实现对字符串的操作</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StringFunction</span> <span class="token punctuation">{</span>    String <span class="token function">getValue</span><span class="token punctuation">(</span>String str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> String <span class="token function">strHandler</span><span class="token punctuation">(</span>String str<span class="token punctuation">,</span> StringFunction sft<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> sft<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//转为大写</span>    String a <span class="token operator">=</span> <span class="token function">strHandler</span><span class="token punctuation">(</span><span class="token string">"abcd"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//ABCD</span>    <span class="token comment" spellcheck="true">//字符串截取</span>    String b <span class="token operator">=</span> <span class="token function">strHandler</span><span class="token punctuation">(</span><span class="token string">"abcd"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> x<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//bcd</span><span class="token punctuation">}</span></code></pre><p>案例：</p><p>①声明一个带两个泛型的函数式接口，泛型类型为&lt;T,R&gt; T为参数，R 为返回值</p><p>②接口中声明对应抽象方法</p><p>③在TestLambda类中声明的方法，使用接口作为参数，计算两个Long型参数的和</p><p>④再计算两个long型参数的乘积</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Function2</span><span class="token operator">&lt;</span>T<span class="token punctuation">,</span> R<span class="token operator">></span> <span class="token punctuation">{</span>    R <span class="token function">getValue</span><span class="token punctuation">(</span>T t1<span class="token punctuation">,</span> T t2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">op</span><span class="token punctuation">(</span>Long l1<span class="token punctuation">,</span> Long l2<span class="token punctuation">,</span> Function2<span class="token operator">&lt;</span>Long<span class="token punctuation">,</span> Long<span class="token operator">></span> f2<span class="token punctuation">)</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>l1<span class="token punctuation">,</span> l2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">op</span><span class="token punctuation">(</span>100L<span class="token punctuation">,</span> 100L<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> x <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//10000</span>    <span class="token function">op</span><span class="token punctuation">(</span>100L<span class="token punctuation">,</span>100L<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//200</span><span class="token punctuation">}</span></code></pre><h5 id="1-3-Java8四大核心函数式接口"><a href="#1-3-Java8四大核心函数式接口" class="headerlink" title="1.3    Java8四大核心函数式接口"></a>1.3    Java8四大核心函数式接口</h5><blockquote><p>Consumer<t>：消费型接口</t></p><p>​    viod accept(T t)</p><p>Supplier<t>：供给型接口</t></p><p>​    T get()</p><p>Function&lt;T,R&gt;：函数型接口</p><p>​    R apply(T t)</p><p>Predicate<t>：断言型接口</t></p><p>boolean test(T t)</p></blockquote><ul><li><p>Consumer<t>：消费型接口</t></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">consumerTest</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//ABC</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">consumerTest</span><span class="token punctuation">(</span>String str<span class="token punctuation">,</span> Consumer<span class="token operator">&lt;</span>String<span class="token operator">></span> consumer<span class="token punctuation">)</span> <span class="token punctuation">{</span>    consumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>Supplier<t>：供给型接口</t></p></li></ul><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>Person<span class="token operator">></span> personList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小花"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小芳"</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小张"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小刘"</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小李"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test8</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> personList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Person p <span class="token operator">=</span> personList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        String name <span class="token operator">=</span> <span class="token function">supplierTest</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> String <span class="token function">supplierTest</span><span class="token punctuation">(</span>Supplier<span class="token operator">&lt;</span>String<span class="token operator">></span> supplier<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> supplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li><p>Function&lt;T,R&gt;：函数型接口</p><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>Person<span class="token operator">></span> personList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小花"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小芳"</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小张"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小刘"</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小李"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test9</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> nameList <span class="token operator">=</span> <span class="token function">functionTest</span><span class="token punctuation">(</span>personList<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> names <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Person p <span class="token operator">:</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>            names<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> names<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nameList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>nameList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">functionTest</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Person<span class="token operator">></span> list<span class="token punctuation">,</span> Function<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Person<span class="token operator">></span><span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">>></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> fn<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li></ul><ul><li><p>Predicate<t>：断言型接口</t></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 获取性别是男的人 */</span>List<span class="token operator">&lt;</span>Person<span class="token operator">></span> personList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小花"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小芳"</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小张"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小刘"</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"小李"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test10</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Person<span class="token operator">></span> people <span class="token operator">=</span> <span class="token function">predicateTest</span><span class="token punctuation">(</span>personList<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token string">"男"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> people<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>people<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>Person<span class="token operator">></span> <span class="token function">predicateTest</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Person<span class="token operator">></span> p<span class="token punctuation">,</span> Predicate<span class="token operator">&lt;</span>String<span class="token operator">></span> predicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Person<span class="token operator">></span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> p<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>predicate<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            item<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> item<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li></ul><p>其他接口：</p><table><thead><tr><th>函数式接口</th><th>参数类型</th><th>返回类型</th><th>用途</th></tr></thead><tbody><tr><td>BiFunction&lt;T,U,R&gt;</td><td>T,U</td><td>R</td><td>对类型为T,U参数应用操作，返回R类型的结果。包含方法为R  apply(T t,U u);</td></tr><tr><td>UnaryOperator<t>        (Function子接口)</t></td><td>T</td><td>T</td><td>对类型为T的对象进行一元运算，并返回T类型的结果。包含方法为T  apply(T t);</td></tr><tr><td>BinaryOperator<t>       (BiFunction子接口)</t></td><td>T,T</td><td>T</td><td>对类型为T的对象进行二元计算，并返回T类型的结果。包含方法为T apply(T t1,T t2)</td></tr><tr><td>ToIntFunction<t>, ToLongFunction<t>, ToDoubleFunction<t></t></t></t></td><td>T</td><td>int long    double</td><td>分别计算int,long,double值得函数</td></tr><tr><td>BiConsumer&lt;T,U&gt;</td><td>T,U</td><td>void</td><td>对类型为T,U参数应用操作。包含方法为void accept(T t,U u)</td></tr><tr><td>IntFunction<r>      LongFunction<r>      DoubleFunction<r></r></r></r></td><td>int    long  double</td><td>R</td><td>参数分类为int,long,double类型的函数</td></tr></tbody></table><h5 id="1-4-方法引用："><a href="#1-4-方法引用：" class="headerlink" title="1.4    方法引用："></a>1.4    方法引用：</h5><blockquote><p>如Lambda体中的内容有方法已经实现了，我们可以使用<code>方法引用</code>(可以理解为方法引用是Lambda表达式的另一种表现形式)</p></blockquote><p><strong>主要有三种格式：</strong></p><ul><li>对象：：实例方法名</li><li>类：：静态方法名</li><li>类：：实例方法名</li></ul><p>==注意：==</p><ul><li>Lambda体中调用方法的参数列表与返回值类型，要与函数式接口中抽象方法的函数列表与返回值类型保持一致</li><li>若Lambda参数列表中的第一个参数是实例方法的调用者，而第二个参数是实例方法的参数时，可以使用ClassName：：method</li></ul><h6 id="案例一：对象：：实例方法名"><a href="#案例一：对象：：实例方法名" class="headerlink" title="案例一：对象：：实例方法名"></a>案例一：对象：：实例方法名</h6><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//没有使用方法引用</span>    Consumer<span class="token operator">&lt;</span>String<span class="token operator">></span> c<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span>person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//张三</span>    <span class="token comment" spellcheck="true">//使用方法引用</span>    Consumer<span class="token operator">&lt;</span>String<span class="token operator">></span> c1<span class="token operator">=</span>person<span class="token operator">:</span><span class="token operator">:</span>setName<span class="token punctuation">;</span>    c1<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//李四</span><span class="token punctuation">}</span></code></pre><blockquote><p>通过上面的例子，我们可以看出我们可以把Consumer<string> c=(x)-&gt;person.setName(x);简化为 Consumer<string> c1=person::setName;通过<code>对象：：实例方法名称</code>，省去了不少代码</string></string></p></blockquote><p>方法引用我们需要注意的是</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>T var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>这个接口的方法accept(T var1)是一个参数，且无返回值</p><p>我们再来看看person的setName方法</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>同样是一个参数，且无返回值</p><h6 id="案例二：类：：静态方法名"><a href="#案例二：类：：静态方法名" class="headerlink" title="案例二：类：：静态方法名"></a>案例二：类：：静态方法名</h6><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Function<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span>String<span class="token operator">></span> fn2<span class="token operator">=</span>String<span class="token operator">:</span><span class="token operator">:</span>valueOf<span class="token punctuation">;</span>    String apply1 <span class="token operator">=</span> fn2<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>apply1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//12</span><span class="token punctuation">}</span></code></pre><p>我们来看一下valueOf方法的代码</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RecentlyNullable</span> Object obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Stub!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>通过代码我们知道valueOf方法是一个参数，且带返回值的静态方法</p><p>再来看看apply方法</p><pre class=" language-java"><code class="language-java">R <span class="token function">apply</span><span class="token punctuation">(</span>T var1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>同样是一个参数，且带返回值</p><h6 id="案例三：类：：实例方法名"><a href="#案例三：类：：实例方法名" class="headerlink" title="案例三：类：：实例方法名"></a>案例三：类：：实例方法名</h6><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    BiPredicate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> bp <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">boolean</span> test <span class="token operator">=</span> bp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//使用方法引用</span>    BiPredicate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> bp1 <span class="token operator">=</span> String<span class="token operator">:</span><span class="token operator">:</span>equals<span class="token punctuation">;</span>    <span class="token keyword">boolean</span> test1 <span class="token operator">=</span> bp1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>test1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>上面实例中方式列表中第一个参数x,是实例方法的调用者，第二个参数是y是实例方法的参数</p></blockquote><p>我们再来看一下equals方法的代码</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RecentlyNullable</span> Object anObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Stub!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>他既不是静态方法，调用它时也不是实例对象调用</p><h5 id="1-5-构造器引用"><a href="#1-5-构造器引用" class="headerlink" title="1.5    构造器引用"></a>1.5    构造器引用</h5><ul><li>格式：ClassName:：new</li></ul><p>==注意：==</p><p>需要调用构造器的参数列表要与函数式接口中的抽象方法的参数列表保持一致</p><p>案例：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Supplier<span class="token operator">&lt;</span>Person<span class="token operator">></span> supplier<span class="token operator">=</span>Person<span class="token operator">:</span><span class="token operator">:</span><span class="token keyword">new</span><span class="token punctuation">;</span>    Person person <span class="token operator">=</span> supplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"zhangsan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//zhangsan</span><span class="token punctuation">}</span></code></pre><blockquote><p>上面的案例中，Person的构造方法为无参构造，get方法也为无参</p></blockquote><h5 id="1-6-数组引用"><a href="#1-6-数组引用" class="headerlink" title="1.6    数组引用"></a>1.6    数组引用</h5><ul><li>格式：类型[]::new</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Function<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> fn<span class="token operator">=</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token operator">:</span><span class="token keyword">new</span><span class="token punctuation">;</span>    String<span class="token punctuation">[</span><span class="token punctuation">]</span> apply <span class="token operator">=</span> fn<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="2-Stream流"><a href="#2-Stream流" class="headerlink" title="2.    Stream流"></a>2.    Stream流</h4><h5 id="2-1-什么是Steam"><a href="#2-1-什么是Steam" class="headerlink" title="2.1.    什么是Steam?"></a>2.1.    什么是Steam?</h5><ul><li>是数据渠道，用于操作数据源（集合，数组等）所生成的元素序列</li><li>集合讲的是数据，流讲的是计算</li></ul><p>==注意：==</p><p>①Stream自己不会存储元素</p><p>②Stream不会改变源对象。相反，他们会返回一个特有结果的新Stream</p><p>③Stream操作是延迟执行的。这意味着他们会等到需要结果的时候才执行</p><h5 id="2-2-Stream三步操作："><a href="#2-2-Stream三步操作：" class="headerlink" title="2.2.    Stream三步操作："></a>2.2.    Stream三步操作：</h5><ul><li><ol><li>创建Stream</li><li>中间操作</li><li>终止操作</li></ol></li></ul><h5 id="2-3-创建Stream有四种方式"><a href="#2-3-创建Stream有四种方式" class="headerlink" title="2.3.    创建Stream有四种方式"></a>2.3.    创建Stream有四种方式</h5><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//1，通过集合创建Stream</span>List<span class="token operator">&lt;</span>String<span class="token operator">></span> list<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Stream<span class="token operator">&lt;</span>String<span class="token operator">></span> stream <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//2，通过Arrays中的静态方法</span>Person<span class="token punctuation">[</span><span class="token punctuation">]</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Stream<span class="token operator">&lt;</span>Person<span class="token operator">></span> personStream <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3，通过Stream中的静态方法of</span>Stream<span class="token operator">&lt;</span>String<span class="token operator">></span> stringStream <span class="token operator">=</span> Stream<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4，创建无限流</span><span class="token comment" spellcheck="true">//迭代</span>Stream<span class="token operator">&lt;</span>Integer<span class="token operator">></span> iterate <span class="token operator">=</span> Stream<span class="token punctuation">.</span><span class="token function">iterate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//生成</span>Stream<span class="token operator">&lt;</span>Double<span class="token operator">></span> generate <span class="token operator">=</span> Stream<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="2-4-Stream中间操作"><a href="#2-4-Stream中间操作" class="headerlink" title="2.4    Stream中间操作"></a>2.4    Stream中间操作</h5><blockquote><p>多个中间操作可以连接起来形成一个流水线，除非流水线上触发终止操作，否则中间操作不会执行热河的处理。而在终止操作时一次性全部处理，称为“惰性求值”</p></blockquote><p>筛选与切片：</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>filter(Predicate p)</td><td>接收Lambda，从流中排除某些元素</td></tr><tr><td>disinct()</td><td>筛选，通过流所生成元素的hashCode()和equals()去除重复元素</td></tr><tr><td>limit(long maxSize)</td><td>截断流，使其元素不超过给定数量</td></tr><tr><td>skip(long n)</td><td>跳过元素，返回一个扔掉了前n个元素的流。若流中元素不足n个，则返回一个空流。与limit(n)互补</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> Java8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>底部导航</title>
      <link href="/2019/09/10/di-bu-dao-hang/"/>
      <url>/2019/09/10/di-bu-dao-hang/</url>
      
        <content type="html"><![CDATA[<h4 id="案例一：底部导航"><a href="#案例一：底部导航" class="headerlink" title="案例一：底部导航"></a>案例一：底部导航</h4><p><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190911/1568192332559.gif?Expires=1883552332&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=GkecXzD%2B5foWhkzo8aGuo%2FRI3Bc%3D" alt="bottomNavigationBar"></p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'widget/bottom_navigation_bar.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">BottomNavigationBarWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">HomePage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"首页"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>          <span class="token string">"首页"</span><span class="token punctuation">,</span>          style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SearchPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"搜索"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>          <span class="token string">"搜索"</span><span class="token punctuation">,</span>          style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MePage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我的"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>          <span class="token string">"我的"</span><span class="token punctuation">,</span>          style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../pages/home_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../pages/search_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../pages/me_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">BottomNavigationBarWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  _BottomNavigationBarWidgetState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>      <span class="token function">_BottomNavigationBarWidgetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_BottomNavigationBarWidgetState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>BottomNavigationBarWidget<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">int</span> _currentIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  Color actionColor <span class="token operator">=</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">;</span>  List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> _lists <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@override</span>  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    _lists<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">SearchPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">MePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      body<span class="token operator">:</span> _lists<span class="token punctuation">[</span>_currentIndex<span class="token punctuation">]</span><span class="token punctuation">,</span>      bottomNavigationBar<span class="token operator">:</span> <span class="token function">BottomNavigationBar</span><span class="token punctuation">(</span>        type<span class="token operator">:</span> BottomNavigationBarType<span class="token punctuation">.</span>fixed<span class="token punctuation">,</span>        onTap<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            _currentIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        currentIndex<span class="token operator">:</span> _currentIndex<span class="token punctuation">,</span>        items<span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>              icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>home<span class="token punctuation">)</span><span class="token punctuation">,</span>              title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"首页"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>home<span class="token punctuation">,</span> color<span class="token operator">:</span> actionColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>              icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">,</span>              title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"搜索"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">,</span> color<span class="token operator">:</span> actionColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>              icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>              title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我的"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">,</span> color<span class="token operator">:</span> actionColor<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="案例二：Tab栏切换"><a href="#案例二：Tab栏切换" class="headerlink" title="案例二：Tab栏切换"></a>案例二：Tab栏切换</h4><p><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190911/1568191847646.gif?Expires=1883551847&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=6G%2FstGLtsJBG1g827ZQoUyKVd8k%3D" alt="tabBar"></p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'widget/tab_widget.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">TabWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TabWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  _TabWidgetState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">_TabWidgetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_TabWidgetState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>TabWidget<span class="token operator">></span>    with SingleTickerProviderStateMixin <span class="token punctuation">{</span>  TabController _controller<span class="token punctuation">;</span>  <span class="token annotation punctuation">@override</span>  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    _controller <span class="token operator">=</span> <span class="token function">TabController</span><span class="token punctuation">(</span>length<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> vsync<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@override</span>  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    _controller<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"tabBar"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        bottom<span class="token operator">:</span> <span class="token function">TabBar</span><span class="token punctuation">(</span>controller<span class="token operator">:</span> _controller<span class="token punctuation">,</span> tabs<span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token function">Tab</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>accessible<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">Tab</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>airplanemode_active<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">Tab</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>motorcycle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">TabBarView</span><span class="token punctuation">(</span>controller<span class="token operator">:</span> _controller<span class="token punctuation">,</span> children<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"111"</span><span class="token punctuation">,</span>style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>redAccent<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"222"</span><span class="token punctuation">,</span>style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"333"</span><span class="token punctuation">,</span>style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="案例三：页面进出场"><a href="#案例三：页面进出场" class="headerlink" title="案例三：页面进出场"></a>案例三：页面进出场</h4><p><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190911/1568192627033.gif?Expires=1883552627&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=q%2BfPb3FCafNlENFQ6G7wZfg9Ym4%3D" alt="router"></p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'pages/first_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">FirstPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'send_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../widget/custom_route.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">FirstPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      backgroundColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>redAccent<span class="token punctuation">,</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"页面一"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        elevation<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token operator">:</span> <span class="token function">RaisedButton</span><span class="token punctuation">(</span>          onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">CustomRoute</span><span class="token punctuation">(</span><span class="token function">SendPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>            <span class="token string">"我是第一个页面"</span><span class="token punctuation">,</span>            style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>fontSize<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SendPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      backgroundColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"页面二"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        elevation<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token operator">:</span> <span class="token function">RaisedButton</span><span class="token punctuation">(</span>          onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>            <span class="token string">"我是第二个页面"</span><span class="token punctuation">,</span>            style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>fontSize<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">CustomRoute</span> <span class="token keyword">extends</span> <span class="token class-name">PageRouteBuilder</span> <span class="token punctuation">{</span>  <span class="token keyword">final</span> Widget widget<span class="token punctuation">;</span>  <span class="token function">CustomRoute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>widget<span class="token punctuation">)</span>      <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>            pageBuilder<span class="token operator">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">,</span> Animation<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">></span> animation<span class="token punctuation">,</span>                Animation<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">></span> secondaryAnimation<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> widget<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//            transitionDuration: const Duration(seconds: 2),</span>            transitionsBuilder<span class="token operator">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">,</span>                Animation<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">></span> animation<span class="token punctuation">,</span>                Animation<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">></span> secondaryAnimation<span class="token punctuation">,</span>                Widget child<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">//渐变</span><span class="token comment" spellcheck="true">//              return FadeTransition(</span><span class="token comment" spellcheck="true">//                  opacity: Tween(begin: 0.0, end: 1.0).animate(CurvedAnimation(</span><span class="token comment" spellcheck="true">//                      parent: animation, curve: Curves.fastOutSlowIn)),</span><span class="token comment" spellcheck="true">//                  child: child);</span>              <span class="token comment" spellcheck="true">//缩放+旋转</span><span class="token comment" spellcheck="true">//              return ScaleTransition(</span><span class="token comment" spellcheck="true">//                scale: Tween(begin: 0.0, end: 1.0).animate(CurvedAnimation(</span><span class="token comment" spellcheck="true">//                    parent: animation, curve: Curves.fastOutSlowIn)),</span><span class="token comment" spellcheck="true">//                child: RotationTransition(</span><span class="token comment" spellcheck="true">//                  turns: Tween(begin: 0.0, end: 1.0).animate(CurvedAnimation(</span><span class="token comment" spellcheck="true">//                      parent: animation, curve: Curves.fastOutSlowIn)),</span><span class="token comment" spellcheck="true">//                  child: child,</span><span class="token comment" spellcheck="true">//                ),</span><span class="token comment" spellcheck="true">//              );</span>              <span class="token comment" spellcheck="true">//平移</span>              <span class="token keyword">return</span> <span class="token function">SlideTransition</span><span class="token punctuation">(</span>                position<span class="token operator">:</span> Tween<span class="token operator">&lt;</span>Offset<span class="token operator">></span><span class="token punctuation">(</span>                        begin<span class="token operator">:</span> <span class="token function">Offset</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">:</span> <span class="token function">Offset</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token function">CurvedAnimation</span><span class="token punctuation">(</span>                        parent<span class="token operator">:</span> animation<span class="token punctuation">,</span> curve<span class="token operator">:</span> Curves<span class="token punctuation">.</span>fastOutSlowIn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                child<span class="token operator">:</span> child<span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="案例四：搜索"><a href="#案例四：搜索" class="headerlink" title="案例四：搜索"></a>案例四：搜索</h4><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>String<span class="token operator">></span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"张可欣"</span><span class="token punctuation">,</span> <span class="token string">"张无忌"</span><span class="token punctuation">,</span> <span class="token string">"张翠山"</span><span class="token punctuation">,</span> <span class="token string">"宋远桥"</span><span class="token punctuation">,</span> <span class="token string">"宋青书"</span><span class="token punctuation">,</span> <span class="token string">"王鸥"</span><span class="token punctuation">,</span> <span class="token string">"王健林"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> defaultData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"帅哥"</span><span class="token punctuation">,</span> <span class="token string">"靓妹"</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'widget/search_bar_widget.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">SearchBarWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'../data/search_data.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SearchBarWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  _SearchBarWidgetState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">_SearchBarWidgetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_SearchBarWidgetState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"search"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        actions<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>          <span class="token function">IconButton</span><span class="token punctuation">(</span>              icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">,</span>              onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"张可欣"</span><span class="token punctuation">,</span> <span class="token string">"张无忌"</span><span class="token punctuation">,</span> <span class="token string">"张翠山"</span><span class="token punctuation">,</span> <span class="token string">"宋远桥"</span><span class="token punctuation">,</span> <span class="token string">"宋青书"</span><span class="token punctuation">,</span> <span class="token string">"王鸥"</span><span class="token punctuation">,</span> <span class="token string">"王健林"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token function">showSearch</span><span class="token punctuation">(</span>context<span class="token operator">:</span> context<span class="token punctuation">,</span> delegate<span class="token operator">:</span> <span class="token function">_SearchBarDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">ListView</span><span class="token punctuation">(</span>        children<span class="token operator">:</span> <span class="token function">_ListItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> <span class="token function">_ListItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> items <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">ListTile</span><span class="token punctuation">(</span>            title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> items<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_SearchBarDelegate</span> <span class="token keyword">extends</span> <span class="token class-name">SearchDelegate</span><span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> <span class="token function">buildActions</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>      <span class="token function">IconButton</span><span class="token punctuation">(</span>          icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>clear<span class="token punctuation">)</span><span class="token punctuation">,</span>          onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            query <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>            <span class="token function">close</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">buildLeading</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">IconButton</span><span class="token punctuation">(</span>        icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>arrow_back<span class="token punctuation">)</span><span class="token punctuation">,</span>        onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">close</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">buildResults</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">close</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>      title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">buildSuggestions</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">final</span> data <span class="token operator">=</span> query<span class="token punctuation">.</span>isEmpty        <span class="token operator">?</span> defaultData        <span class="token operator">:</span> list<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">ListView</span><span class="token punctuation">(</span>      children<span class="token operator">:</span> <span class="token function">_ListItems</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> <span class="token function">_ListItems</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>String<span class="token operator">></span> data<span class="token punctuation">,</span> BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> items <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">ListTile</span><span class="token punctuation">(</span>            onTap<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>              query <span class="token operator">=</span> item<span class="token punctuation">;</span>              list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token function">close</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            title<span class="token operator">:</span> <span class="token function">RichText</span><span class="token punctuation">(</span>                text<span class="token operator">:</span> <span class="token function">TextSpan</span><span class="token punctuation">(</span>                    text<span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span>                    style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                        color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span> fontWeight<span class="token operator">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">)</span><span class="token punctuation">,</span>                    children<span class="token operator">:</span> <span class="token punctuation">[</span>                  <span class="token function">TextSpan</span><span class="token punctuation">(</span>                      text<span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span>                      style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>grey<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> items<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="案例五：ExpansionTitle"><a href="#案例五：ExpansionTitle" class="headerlink" title="案例五：ExpansionTitle"></a>案例五：ExpansionTitle</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'widget/expansion_widget.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">ExpansionWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">ExpansionWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Expansion"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">ListView</span><span class="token punctuation">(</span>        children<span class="token operator">:</span> <span class="token function">_listViewItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> <span class="token function">_listViewItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> items <span class="token operator">=</span> List<span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">ExpansionTile</span><span class="token punctuation">(</span>            leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>airplanemode_active<span class="token punctuation">)</span><span class="token punctuation">,</span>            title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>              <span class="token function">ListTile</span><span class="token punctuation">(</span>                title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">"sex"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> items<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="案例六：贝瑟尔曲线使用"><a href="#案例六：贝瑟尔曲线使用" class="headerlink" title="案例六：贝瑟尔曲线使用"></a>案例六：贝瑟尔曲线使用</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'widget/clipper_widget.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">ClipperWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">ClipperWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"贝瑟尔曲线一"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token operator">:</span> <span class="token function">ClipPath</span><span class="token punctuation">(</span>        clipper<span class="token operator">:</span> <span class="token function">BottomClipper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>height<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">BottomClipper</span> <span class="token keyword">extends</span> <span class="token class-name">CustomClipper</span><span class="token operator">&lt;</span>Path<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Path <span class="token function">getClip</span><span class="token punctuation">(</span>Size size<span class="token punctuation">)</span> <span class="token punctuation">{</span>    var path <span class="token operator">=</span> <span class="token function">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    path<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    path<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> size<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    var firstControlPath <span class="token operator">=</span> <span class="token function">Offset</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">,</span> size<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    var firstEndPath <span class="token operator">=</span> <span class="token function">Offset</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> size<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    path<span class="token punctuation">.</span><span class="token function">quadraticBezierTo</span><span class="token punctuation">(</span>firstControlPath<span class="token punctuation">.</span>dx<span class="token punctuation">,</span> firstControlPath<span class="token punctuation">.</span>dy<span class="token punctuation">,</span>        firstEndPath<span class="token punctuation">.</span>dx<span class="token punctuation">,</span> firstEndPath<span class="token punctuation">.</span>dy<span class="token punctuation">)</span><span class="token punctuation">;</span>    var secondControlPath <span class="token operator">=</span> <span class="token function">Offset</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">4</span><span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">,</span> size<span class="token punctuation">.</span>height<span class="token operator">-</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    var secondEndPath <span class="token operator">=</span> <span class="token function">Offset</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> size<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    path<span class="token punctuation">.</span><span class="token function">quadraticBezierTo</span><span class="token punctuation">(</span>secondControlPath<span class="token punctuation">.</span>dx<span class="token punctuation">,</span> secondControlPath<span class="token punctuation">.</span>dy<span class="token punctuation">,</span>        secondEndPath<span class="token punctuation">.</span>dx<span class="token punctuation">,</span> secondEndPath<span class="token punctuation">.</span>dy<span class="token punctuation">)</span><span class="token punctuation">;</span>    path<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> size<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    path<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> path<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@override</span>  bool <span class="token function">shouldReclip</span><span class="token punctuation">(</span>CustomClipper<span class="token operator">&lt;</span>Path<span class="token operator">></span> oldClipper<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// TODO: implement shouldReclip</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="案例七：启动页"><a href="#案例七：启动页" class="headerlink" title="案例七：启动页"></a>案例七：启动页</h4>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/09/09/pmp-xue-xi/"/>
      <url>/2019/09/09/pmp-xue-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="1-引论"><a href="#1-引论" class="headerlink" title="1.    引论"></a>1.    引论</h3><h4 id="1-1-项目定义："><a href="#1-1-项目定义：" class="headerlink" title="1.1    项目定义："></a>1.1    项目定义：</h4><blockquote><p>为创造独特的产品，服务或成果而进行的临时性工作</p></blockquote><h4 id="1-2-项目的类别："><a href="#1-2-项目的类别：" class="headerlink" title="1.2    项目的类别："></a>1.2    项目的类别：</h4><blockquote><p>研发类项目，交付类项目，变革类项目</p></blockquote><h4 id="1-3-企业分类："><a href="#1-3-企业分类：" class="headerlink" title="1.3    企业分类："></a>1.3    企业分类：</h4><blockquote><p>甲方，乙方</p></blockquote><h4 id="1-4-管路分类："><a href="#1-4-管路分类：" class="headerlink" title="1.4    管路分类："></a>1.4    管路分类：</h4><blockquote><p>项目，运营</p></blockquote><h4 id="1-5-项目的三个特征："><a href="#1-5-项目的三个特征：" class="headerlink" title="1.5    项目的三个特征："></a>1.5    项目的三个特征：</h4><blockquote><p>独特性，临时性，不确定性</p></blockquote><h4 id="1-6-项目管理的基本目标："><a href="#1-6-项目管理的基本目标：" class="headerlink" title="1.6    项目管理的基本目标："></a>1.6    项目管理的基本目标：</h4><blockquote><p>进度，成本，质量</p></blockquote><h4 id="1-7-成本和进度的关系："><a href="#1-7-成本和进度的关系：" class="headerlink" title="1.7    成本和进度的关系："></a>1.7    成本和进度的关系：</h4><blockquote><p>微笑曲线</p></blockquote><p><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190911/1568184816706.png?Expires=1883544816&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=CuF%2BxGdpQHWOGeahHrcJRUAng0g%3D" alt="1568024181593"></p><h4 id="1-8-项目管理高层次目标："><a href="#1-8-项目管理高层次目标：" class="headerlink" title="1.8    项目管理高层次目标："></a>1.8    项目管理高层次目标：</h4><ul><li>实现组织（企业）战略目标</li><li>项目相关方满意</li><li>项目团队成员满意</li><li>HSE( Health健康，safety安全，environment环保 )</li></ul><h4 id="1-9-项目管理的主要角色："><a href="#1-9-项目管理的主要角色：" class="headerlink" title="1.9    项目管理的主要角色："></a>1.9    项目管理的主要角色：</h4><ul><li>高级管理层</li><li>CCB：change contol boy 变更控制委员会</li><li>PMO：项目管理办公司，支持服务于公司里的很多项目</li><li>职能经理</li><li>发起人</li><li>项目经理</li><li>项目团队</li><li>项目相关方</li></ul><blockquote><p>CCB（变更控制委员会）与PM（项目经理）：需求的变更与否是用PM跟CCB来决策的。在项目订制的基准之内（范围基准，进度基准，成本基准）的变更一般由PM来决定是否变更，在基准在外的变更一般交由CCB来决策。但是考试中的变更基本都是由CCB来决策的</p></blockquote><h4 id="1-10-项目集管理"><a href="#1-10-项目集管理" class="headerlink" title="1.10    项目集管理"></a>1.10    项目集管理</h4><blockquote><p>项目集管理实现1+1&gt;2，</p><p>一组相互关联且被协调管理的项目、子项目集和项目集活动，以便获得分别管理所无法获取的利益</p><p>理解：开发商建房子，项目集经理管理项目经理，项目经理管理各个房屋的建设，项目集经理负责协调项目经理之间活动造成工程的阻塞，已经各个项目之间共性事务的统一处理</p></blockquote><h4 id="1-11-项目组合管理"><a href="#1-11-项目组合管理" class="headerlink" title="1.11    项目组合管理"></a>1.11    项目组合管理</h4><blockquote><p>为了实现战略目标而组合在一起管理的项目、项目集、子项目组合和运营工作。项目组合中的项目或项目集不一定彼此依赖或直接相关</p><p>理解：一带一路项目上的铁路项目，石油项目属于不同的项目但是都是相应一带一路的政策，这类项目就是项目组合</p></blockquote><p>波士顿矩阵：</p><p><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190911/1568185498645.png?Expires=1883545498&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=t1tRYO%2FrCAhu39G6711PL%2BHaWiA%3D" alt="1568112544598"></p><h4 id="1-12-项目集和项目组合的区分"><a href="#1-12-项目集和项目组合的区分" class="headerlink" title="1.12    项目集和项目组合的区分"></a>1.12    项目集和项目组合的区分</h4><blockquote><p>项目集：项目集之间的项目有一定的依赖关系，彼此直接与一定的关系</p><p>项目组合：项目之间可能没有依赖关系，但是战略目标一致</p></blockquote><table><thead><tr><th align="center">理论</th><th align="center">范围</th><th align="center">目的</th><th align="center">管理要点</th><th align="center">成功标准</th></tr></thead><tbody><tr><td align="center">项目管理</td><td align="center">但项目</td><td align="center">产品实现</td><td align="center">目标管理</td><td align="center">成本，进度，质量</td></tr><tr><td align="center">项目集管理</td><td align="center">多项目</td><td align="center">能力管理</td><td align="center">逻辑管理</td><td align="center">需求利息</td></tr><tr><td align="center">项目组合管理</td><td align="center">项目+项目集+运营</td><td align="center">健康发展</td><td align="center">优先级</td><td align="center">投资效益</td></tr><tr><td align="center"></td><td align="center">制度+流程+文化</td><td align="center">管理环境</td><td align="center">制度流程建设</td><td align="center">企业成熟度</td></tr></tbody></table><blockquote><p>蚂蚁金服：项目集管理</p><p>腾讯四款吃鸡游戏：项目组合管理</p></blockquote><h4 id="1-13-项目与运营的区别"><a href="#1-13-项目与运营的区别" class="headerlink" title="1.13    项目与运营的区别"></a>1.13    项目与运营的区别</h4><table><thead><tr><th align="center">项目</th><th align="center">运营</th></tr></thead><tbody><tr><td align="center">独一无二</td><td align="center">重复多次</td></tr><tr><td align="center">时间限制</td><td align="center">持续不断</td></tr><tr><td align="center">革命性</td><td align="center">渐进性</td></tr><tr><td align="center">责权不均</td><td align="center">责权均衡</td></tr><tr><td align="center">临时性组织</td><td align="center">稳定性组织</td></tr><tr><td align="center">效果向导</td><td align="center">效率向导</td></tr><tr><td align="center">风险（不确定）</td><td align="center">经验（确定）</td></tr><tr><td align="center"></td><td align="center">标准化规范</td></tr></tbody></table><h4 id="1-14-项目经理与智能主管的区别"><a href="#1-14-项目经理与智能主管的区别" class="headerlink" title="1.14    项目经理与智能主管的区别"></a>1.14    项目经理与智能主管的区别</h4><table><thead><tr><th align="center">项目经理</th><th align="center">vs</th><th align="center">职能主管</th></tr></thead><tbody><tr><td align="center">帅才</td><td align="center">扮演角色</td><td align="center">将才</td></tr><tr><td align="center">通才</td><td align="center">组织结构</td><td align="center">专才</td></tr><tr><td align="center">目标管理</td><td align="center">管理方式</td><td align="center">过程管理</td></tr><tr><td align="center">系统发</td><td align="center">工作方式</td><td align="center">分析法</td></tr><tr><td align="center">责权不均衡</td><td align="center">责权</td><td align="center">责权均衡</td></tr><tr><td align="center">计划，组织，协调，指导</td><td align="center">主要任务</td><td align="center">技术，流程，标准，规范</td></tr></tbody></table><h4 id="1-15-项目是战略落地"><a href="#1-15-项目是战略落地" class="headerlink" title="1.15    项目是战略落地"></a>1.15    项目是战略落地</h4><ul><li>项目是企业战略落地的单元</li><li>项目是企业利润的来源</li><li>项目是企业跨部门的载体</li></ul><h4 id="1-16-企业管理金字塔"><a href="#1-16-企业管理金字塔" class="headerlink" title="1.16    企业管理金字塔"></a>1.16    企业管理金字塔</h4><blockquote><p>项目—&gt;战略—&gt;愿景使命</p></blockquote><h4 id="1-17-项目管理成熟度模型中的五个层级"><a href="#1-17-项目管理成熟度模型中的五个层级" class="headerlink" title="1.17    项目管理成熟度模型中的五个层级"></a>1.17    项目管理成熟度模型中的五个层级</h4><h5 id="1-科兹纳模型"><a href="#1-科兹纳模型" class="headerlink" title="1.    科兹纳模型"></a>1.    科兹纳模型</h5><ul><li><ol><li>通用术语</li><li>通用过程</li><li>单一方法</li><li>基准比较</li><li>持续改进</li></ol></li></ul><h4 id="1-18-组织集项目管理"><a href="#1-18-组织集项目管理" class="headerlink" title="1.18   组织集项目管理"></a>1.18   组织集项目管理</h4><p><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190911/1568198089974.png?Expires=1883558090&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=arApNP1dPkQoxlozpxeDPoAHC9o%3D" alt="origin·"></p><h4 id="1-16-组织集项目管理成熟度三部曲"><a href="#1-16-组织集项目管理成熟度三部曲" class="headerlink" title="1.16    组织集项目管理成熟度三部曲"></a>1.16    组织集项目管理成熟度三部曲</h4><blockquote><p>知识：企业在项目管理中总结的模板，案例，经验教训</p><p>评估：由专业的评估师对公司的项目管理现状进行评估</p><p>改进：按计划进行改进获得更高的项目管理成熟度</p></blockquote><h4 id="1-17-PMP十句话"><a href="#1-17-PMP十句话" class="headerlink" title="1.17    PMP十句话"></a>1.17    PMP十句话</h4><ul><li>未雨绸缪（计划，风险）</li><li>防微杜渐（监控，纠正）</li><li>资源集成（整合，采购）</li><li>恰到好处（范围，质量）</li><li>循规蹈矩（过程，制度）</li><li>锲而不舍（目标，变更）</li><li>积微成著（组织过程资产）</li><li>公开透明（沟通，参与）</li><li>同舟共济（共赢，诚信）</li><li>各司其职（授权，平等）</li></ul><h4 id="1-18-一般项目的4个阶段"><a href="#1-18-一般项目的4个阶段" class="headerlink" title="1.18    一般项目的4个阶段"></a>1.18    一般项目的4个阶段</h4><ul><li><p>概念阶段</p><ul><li>需求识别</li><li>可行性调研</li><li>商业分析</li></ul></li><li><p>规划阶段</p><ul><li>解决方案</li><li>规划设计</li><li>预算编制</li></ul></li><li><p>实施阶段</p><ul><li>开发/施工</li><li>需求实现</li><li>执行与控制</li></ul></li><li><p>收尾阶段</p><ul><li><p>交付验收</p></li><li><p>总结经验</p></li><li><p>收尾款</p></li></ul></li></ul><h4 id="1-19-项目不同阶段资源投入强度"><a href="#1-19-项目不同阶段资源投入强度" class="headerlink" title="1.19   项目不同阶段资源投入强度"></a>1.19   项目不同阶段资源投入强度</h4><p><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190913/1568352416018.png?Expires=1883712416&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=f8%2FFp2lgU6efDmXGNWBUf9HLb8I%3D" alt="1568352313193"></p><h4 id="1-20-项目的生命周期分类"><a href="#1-20-项目的生命周期分类" class="headerlink" title="1.20    项目的生命周期分类"></a>1.20    项目的生命周期分类</h4><ul><li>预测型生命周期</li><li>迭代型生命周期</li><li>增量型生命周期</li><li>适应性生命周期（敏捷）</li></ul><h4 id="1-21-生命周期与资源投入强度"><a href="#1-21-生命周期与资源投入强度" class="headerlink" title="1.21    生命周期与资源投入强度"></a>1.21    生命周期与资源投入强度</h4><p><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190913/1568352483545.png?Expires=1883712483&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=cRv2t7zLlkmV2wQIehqUvEv6KzI%3D" alt></p><h4 id="1-22-增量与迭代区别"><a href="#1-22-增量与迭代区别" class="headerlink" title="1.22    增量与迭代区别"></a>1.22    增量与迭代区别</h4><p><strong><img src="https://strs-uat.oss-cn-hangzhou.aliyuncs.com/20190913/1568352757214.png?Expires=1883712757&OSSAccessKeyId=LTAIrG3euwQPOIaA&Signature=eZ53PEjAN93N37uURvCujt05HVM%3D" alt></strong></p><h4 id="1-23-不同类型生命周期对比"><a href="#1-23-不同类型生命周期对比" class="headerlink" title="1.23    不同类型生命周期对比"></a>1.23    不同类型生命周期对比</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568352896309.png" alt="1568352896309"></p><h4 id="1-24-STACEY矩阵"><a href="#1-24-STACEY矩阵" class="headerlink" title="1.24    STACEY矩阵"></a>1.24    STACEY矩阵</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568352932340.png" alt="1568352932340"></p><h4 id="1-25-项目的五大过程组"><a href="#1-25-项目的五大过程组" class="headerlink" title="1.25    项目的五大过程组"></a>1.25    项目的五大过程组</h4><ul><li>启动过程</li><li>规划过程</li><li>执行过程</li><li>监控过程</li><li>收尾过程</li></ul><h4 id="1-26-过程与阶段区分"><a href="#1-26-过程与阶段区分" class="headerlink" title="1.26    过程与阶段区分"></a>1.26    过程与阶段区分</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568353594853.png" alt="1568353594853"></p><h4 id="1-27-PMP需要学习内容的划分"><a href="#1-27-PMP需要学习内容的划分" class="headerlink" title="1.27    PMP需要学习内容的划分"></a>1.27    PMP需要学习内容的划分</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568437404445.png" alt="1568437404445"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568437471311.png" alt="1568437471311"></p><h4 id="1-28-项目的裁剪"><a href="#1-28-项目的裁剪" class="headerlink" title="1.28    项目的裁剪"></a>1.28    项目的裁剪</h4><ul><li>裁剪什么？<ul><li>49个过程</li><li>过程的输入，工具技术，输出</li><li>生命周期的：阶段划分</li><li>开发方式：预测，增量，迭代，敏捷</li></ul></li><li>考虑什么？<ul><li>范围</li><li>进度</li><li>成本</li><li>资源</li><li>风险</li><li>质量</li><li>项目环境</li><li>组织文化</li><li>相关方需求</li></ul></li></ul><h4 id="1-29-项目商业文件"><a href="#1-29-项目商业文件" class="headerlink" title="1.29   项目商业文件"></a>1.29   项目商业文件</h4><table><thead><tr><th>项目商业文件</th><th>定义</th></tr></thead><tbody><tr><td>项目商业论证</td><td>文档化的经济可行性研究报告，用来对尚缺乏充分定义的所选方案的收益进行有效性论证，是启动后续项目管理活动的依据</td></tr><tr><td>项目效益管理计划</td><td>对创造，提高和保持项目效益的过程进行定义的书面文件</td></tr></tbody></table><blockquote><p>项目负责人：组织目标（战略）</p><p>项目发起人：项目商业论证，项目章程</p><p>项目经理：项目效益管理计划，项目计划</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568440112712.png" alt="1568440112712"></p><ul><li>项目可行性研究包括的内容：<ul><li>市场研究</li><li>技术研究</li><li>效益研究</li></ul></li></ul><h4 id="1-30-商业论证中的财务测量指标"><a href="#1-30-商业论证中的财务测量指标" class="headerlink" title="1.30   商业论证中的财务测量指标"></a>1.30   商业论证中的财务测量指标</h4><ul><li>投资回报率   ROI</li><li>投资回收期   PBP</li><li>净现值           NPV</li><li>内部收益率   IRR</li><li>效益成本比率  BCR</li></ul><h5 id="1-静态评价法：投资回报率（ROI），投资回收期（PBP）"><a href="#1-静态评价法：投资回报率（ROI），投资回收期（PBP）" class="headerlink" title="1.    静态评价法：投资回报率（ROI），投资回收期（PBP）"></a>1.    静态评价法：投资回报率（ROI），投资回收期（PBP）</h5><p>投资回报率（ROI）=年均利润/投资额</p><p>投资回收期（PBP）=1/POI </p><p>==注意：==当各年的净现金流（利润）相等时才可以使用上面的回收期公式</p><blockquote><p>案例一：600万买了个房子，出租，每个月租金收入1万元，问：</p><p>1，投资回报率（ROI）是多少？</p><p>2，一直租下去，投资回收期（PBP）几年？</p></blockquote><p>ROI=12/600=2%</p><p>PBP=1/2%=50年</p><blockquote><p>案例二：600万买了个房子，出租，每个月租金收入1万元，5年后房价翻了一番，卖掉！问：</p><p>1，投资回报率（ROI）是多少？</p><p>2，一直租下去，投资回收期（PBP）几年？</p></blockquote><p>ROI=(600/5+12)/600=22%</p><p>PBP: (5-x)/(x-4)=660/552—–&gt;x=4.46年</p><p>PBP公式：</p><p>PBP=5-1+(552/1212)=4.46年</p><p>累计净现金流位置的年份-1+（累计净现金流上一年/为正年的净现金流)</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568442235252.png" alt="1568442235252"></p><h5 id="2-复利-amp-折现"><a href="#2-复利-amp-折现" class="headerlink" title="2.    复利&amp;折现"></a>2.    复利&amp;折现</h5><blockquote><p>复利计算：终值=现值*(1+i)^n^</p></blockquote><blockquote><p>折现计算：现值=终值/(1+i)^n^</p></blockquote><p>#### </p><h5 id="3-动态评价法"><a href="#3-动态评价法" class="headerlink" title="3.    动态评价法"></a>3.    动态评价法</h5><blockquote><p>净现值（NPV）：偿还完银行的本金加利息后所剩的钱</p><p>内部收益率（IRR）</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568446988068.png" alt="1568446988068"></p><p>内部收益率（IRR）：公司所能承受的对大风险</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568444376160.png" alt="1568444376160"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568444391890.png" alt="1568444391890"></p><p>净现值与内部收益率比对（多项目比较）</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568444797208.png" alt="1568444797208"></p><blockquote><p>上图中，A和B比较，A跟比的内部收益率（IRR）一样，也就是说两个项目的抗风险能力一直，但是A项目的净现值（NPV）比B的高，所以A比B好；B和C比较，B和C的净现值（NPV）一致，但是C的内部收益率（IRR）比B高，说明C的抗风险能力强，所以选C，A和C比较，其实这两个选择是无法直接进行比较的，要根据公司老板具体的情况而定，如果公司追求高风险，高收益的话，那就可以选择C，如果公司比较保守，则可以选A</p></blockquote><h5 id="4-效益成本比率（BCR）"><a href="#4-效益成本比率（BCR）" class="headerlink" title="4.    效益成本比率（BCR）"></a>4.    效益成本比率（BCR）</h5><blockquote><p>效益成本比率是指在增加成本后，所能带了的收益率</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568445513205.png" alt="1568445513205"></p><blockquote><p>通过上图，我们发现，在买车是，在增加10万元购买油电混合车后，10万公里的效率成本比率（BCR）小于1，说明不好算，而纯电动车，10万公里节油效益大于购买成本的5万，比较划算</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568445729954.png" alt="1568445729954"></p><blockquote><p>通过上图，可以看出在C<del>0</del>:后增加成本，其实带来的收益比较小</p></blockquote><h3 id="2-项目管理标准"><a href="#2-项目管理标准" class="headerlink" title="2.    项目管理标准"></a>2.    项目管理标准</h3><h4 id="2-1-组织运行环境："><a href="#2-1-组织运行环境：" class="headerlink" title="2.1    组织运行环境："></a>2.1    组织运行环境：</h4><ul><li>事业环境因素EEFs</li><li>组织过程资产OPA</li><li>组织系统OS</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568608884053.png" alt="1568608884053"></p><h5 id="2-1-1-事业环境因素"><a href="#2-1-1-事业环境因素" class="headerlink" title="2.1.1    事业环境因素"></a>2.1.1    事业环境因素</h5><blockquote><p>内部：愿景，使命，价值观，企业内部软硬件</p><p>外部：法律，法规，标准，规范，市场，经济，自然环境</p></blockquote><h5 id="2-1-2-组织过程资产"><a href="#2-1-2-组织过程资产" class="headerlink" title="2.1.2    组织过程资产"></a>2.1.2    组织过程资产</h5><ul><li>模板，手册，指南，流程，政策，程序</li><li>知识，经验，教训，数据，信息，资料</li></ul><h5 id="2-1-3-事业环境因素与组织过程资产对比"><a href="#2-1-3-事业环境因素与组织过程资产对比" class="headerlink" title="2.1.3   事业环境因素与组织过程资产对比"></a>2.1.3   事业环境因素与组织过程资产对比</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568609196049.png" alt="1568609196049"></p><h5 id="2-1-4-组织治理框架"><a href="#2-1-4-组织治理框架" class="headerlink" title="2.1.4    组织治理框架"></a>2.1.4    组织治理框架</h5><ul><li>规程，程序，政策</li><li>项目，项目集，项目组合</li></ul><h4 id="2-2-组织结构"><a href="#2-2-组织结构" class="headerlink" title="2.2    组织结构"></a>2.2    组织结构</h4><ul><li>系统型&amp;简单型：创业团队</li><li>职能型（集中式）：按职能划分部门</li><li>多部门（非集中）：事业部，产品事业群，地区公司</li><li>弱矩阵：项目经理&lt;职能经理</li><li>平衡矩阵：项目经理=职能经理</li><li>强矩阵：项目经理&gt;职能经理</li><li>项目型：项目公司</li><li>虚拟组织：通过网络协作</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568609614275.png" alt="1568609614275"></p><h5 id="2-2-1-职能型组织"><a href="#2-2-1-职能型组织" class="headerlink" title="2.2.1    职能型组织"></a>2.2.1    职能型组织</h5><blockquote><p>项目按照职能划分，但是存在的问题就是，在一个部门需要另一个部门同志配合时会存在请不动，往往需要上报到总经理，通过总经理来调度</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568610031483.png" alt="1568610031483"></p><h5 id="2-2-2-项目型组织"><a href="#2-2-2-项目型组织" class="headerlink" title="2.2.2     项目型组织"></a>2.2.2     项目型组织</h5><blockquote><p>项目型组织人员配置比较高，麻雀虽然五脏俱全，什么样的人员都得配置，成本高。</p><p>存在的问题：员工是以项目为核心的，项目结束项目团队就会解散，人员归属感不强。员工可能存在空档期，并且相互学习的人员比较少</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568611616214.png" alt="1568611616214"></p><h5 id="2-2-3-矩阵型组织"><a href="#2-2-3-矩阵型组织" class="headerlink" title="2.2.3    矩阵型组织"></a>2.2.3    矩阵型组织</h5><blockquote><p>平衡矩阵：项目经理和职能经理权利一样大，员工容易不知道听谁的</p><p>强矩阵：项目经理权利比职能经理大，适用于以项目为导向的项目</p><p>弱矩阵：职能经理权利比项目经理大</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568629840958.png" alt="1568629840958"></p><h5 id="2-2-4-项目组织结构分析"><a href="#2-2-4-项目组织结构分析" class="headerlink" title="2.2.4    项目组织结构分析"></a>2.2.4    项目组织结构分析</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568631481230.png" alt="1568631481230"></p><h4 id="2-3-项目管理办公室（PMO）"><a href="#2-3-项目管理办公室（PMO）" class="headerlink" title="2.3    项目管理办公室（PMO）"></a>2.3    项目管理办公室（PMO）</h4><h5 id="2-3-1-项目管理办公室的（PMO）职责"><a href="#2-3-1-项目管理办公室的（PMO）职责" class="headerlink" title="2.3.1    项目管理办公室的（PMO）职责"></a>2.3.1    项目管理办公室的（PMO）职责</h5><ul><li>模板支持</li><li>流程优化</li><li>资源协调</li><li>跟踪预警</li><li>绩效评估</li></ul><h5 id="2-3-2-PMO的三种类型"><a href="#2-3-2-PMO的三种类型" class="headerlink" title="2.3.2    PMO的三种类型"></a>2.3.2    PMO的三种类型</h5><ul><li>支持型：模板，工具等支持；培训，顾问等服务</li><li>控制型：不仅支持服务，还提管控要求</li><li>指令型：完全控制，直接领导</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568632705266.png" alt="1568632705266"></p><h3 id="3-项目管理知识领域指南"><a href="#3-项目管理知识领域指南" class="headerlink" title="3.    项目管理知识领域指南"></a>3.    项目管理知识领域指南</h3><blockquote><p>项目经理需要组织，协调项目</p></blockquote><ul><li><p>围腰项目经理的人：</p><ul><li>项目管理团队，</li><li>项目团队，</li><li>职能经理，</li><li>客户</li><li>相关方</li></ul></li><li><p>项目经理影响的范围：</p><ul><li>项目</li><li>组织</li><li>行业</li><li>跨领域</li><li>专业学科</li></ul></li><li><p>项目经理影响的维度：</p><ul><li>向前看：更新计划</li><li>往后看：总结经验</li><li>往外看：客户/供应商</li><li>往里看：职能部门</li><li>往上看：公司领导</li><li>往下看：团队成员</li></ul></li><li><p>项目经理的能力：</p><ul><li>技术项目管理</li><li>领导力</li><li>战略和商务管理</li></ul></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568680322274.png" alt="1568680322274"></p><blockquote><p>项目经理=科学+艺术</p></blockquote><ul><li>项目管理科学：<ul><li>工具，技术</li><li>计划，控制</li><li>分析，预测</li><li>流程，制度</li></ul></li><li>项目管理艺术：<ul><li>领导力</li><li>沟通能力</li><li>团队协作</li><li>价值观与文化</li></ul></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568680432733.png" alt="1568680432733"></p><ul><li>项目经理的领导力风格：<ul><li>放任型领导：无为而治</li><li>交易型领导：赏罚分明</li><li>服务型领导：无微不至</li><li>变革型领导：情怀至上</li><li>魅力型领导：活力四射</li><li>交互型领导：全面均衡</li></ul></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568680878009.png" alt="1568680878009"></p><h5 id="项目经理的主要角色："><a href="#项目经理的主要角色：" class="headerlink" title="项目经理的主要角色："></a>项目经理的主要角色：</h5><ul><li>执行整合<ul><li>过程层面整合</li><li>认知层面整合</li><li>背景层面整合</li></ul></li><li>复杂性的三个维度：<ul><li>人类行为：不同个体和群体之间的相互作用</li><li>系统行为：组织部分与系统之间的依赖关系</li><li>不明确性：出现问题，缺乏理解，造成困惑引起的不确定性</li></ul></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568681862300.png" alt="1568681862300"></p><ul><li>整合与复杂性：<ul><li>构成复杂</li><li>内在连接</li><li>相互影响</li><li>指数上升</li></ul></li></ul><h3 id="4-整合管理"><a href="#4-整合管理" class="headerlink" title="4.  整合管理"></a>4.  整合管理</h3><h4 id="4-1-整合什么？"><a href="#4-1-整合什么？" class="headerlink" title="4.1    整合什么？"></a>4.1    整合什么？</h4><ul><li>资源分配：搭团队，分工</li><li>平衡竞争性需求：摆平冲突，矛盾</li><li>研究各种备选方案：收益，风险整合</li><li>为项目目标裁剪过程：49个过程取舍，怎么搭</li><li>知识领域之间的关系：进度，成本</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568692757756.png" alt="1568692757756"></p><h4 id="4-2-整个管理的过程："><a href="#4-2-整个管理的过程：" class="headerlink" title="4.2    整个管理的过程："></a>4.2    整个管理的过程：</h4><ul><li>制定项目章程</li><li>制定项目管理计划</li><li>指导和管理项目工作</li><li>管理项目知识</li><li>监控项目工作</li><li>实施整体变更控制</li><li>结束项目或阶段</li></ul><h4 id="4-3-项目章程："><a href="#4-3-项目章程：" class="headerlink" title="4.3   项目章程："></a>4.3   项目章程：</h4><ul><li><ol><li>由项目启动着或发起人发布的</li><li>正式比准项目成立</li><li>授权项目经理动用组织资源开展项目活动的文件</li></ol></li></ul><h4 id="4-4-项目章程3个标志意义："><a href="#4-4-项目章程3个标志意义：" class="headerlink" title="4.4   项目章程3个标志意义："></a>4.4   项目章程3个标志意义：</h4><ul><li><ol><li>项目执行组织与发起组织之间建立起伙伴关系</li><li>项目的正式启动</li><li>给项目经理正式授权</li></ol></li></ul><h4 id="4-5-指定项目章程："><a href="#4-5-指定项目章程：" class="headerlink" title="4.5  指定项目章程："></a>4.5  指定项目章程：</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568693448962.png" alt="1568693448962"></p><h4 id="4-6-任命项目经理的时机："><a href="#4-6-任命项目经理的时机：" class="headerlink" title="4.6    任命项目经理的时机："></a>4.6    任命项目经理的时机：</h4><ul><li>应尽早确认并任命项目经理</li><li>最好指定项目章程时就任命</li><li>最晚也必须在规划开始之前</li></ul><h4 id="4-7-项目章程对项目经理的意思："><a href="#4-7-项目章程对项目经理的意思：" class="headerlink" title="4.7   项目章程对项目经理的意思："></a>4.7   项目章程对项目经理的意思：</h4><ul><li><ol><li>看清方向</li><li>认清形势</li><li>分清责任</li></ol></li></ul><h4 id="4-8-协议："><a href="#4-8-协议：" class="headerlink" title="4.8  协议："></a>4.8  协议：</h4><blockquote><p>定义了启动项目的初衷。</p><p>协议有多种形式，包括：合同、谅解备忘录，服务品质协议，协议书，意向书，口头协议，电子邮件或其他书面协议</p></blockquote><h4 id="4-9-专家判断：专家来源"><a href="#4-9-专家判断：专家来源" class="headerlink" title="4.9  专家判断：专家来源"></a>4.9  专家判断：专家来源</h4><blockquote><p>组织内部的其他部门；顾问；干系人，包括客户或发起人；专业与技术协会；</p><p>行业团体；主题专家；项目管理办公室</p></blockquote><h4 id="4-10-项目计划："><a href="#4-10-项目计划：" class="headerlink" title="4.10  项目计划："></a>4.10  项目计划：</h4><blockquote><p>一出去旅游为例</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568695236703.png" alt="1568695236703"></p><h4 id="4-11-项目管理计划和项目文件"><a href="#4-11-项目管理计划和项目文件" class="headerlink" title="4.11    项目管理计划和项目文件"></a>4.11    项目管理计划和项目文件</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568716994390.png" alt="1568716994390"></p><h4 id="4-12-范围与需求"><a href="#4-12-范围与需求" class="headerlink" title="4.12    范围与需求"></a>4.12    范围与需求</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568716853858.png" alt="1568716853858"></p><h4 id="4-13-配置管理计划："><a href="#4-13-配置管理计划：" class="headerlink" title="4.13    配置管理计划："></a>4.13    配置管理计划：</h4><p>内容：</p><ul><li>产品的功能，组件，文件</li><li>项目的基准，计划，文件</li><li>组织过程资产（知识，经验，教训）</li></ul><p>目标：</p><ul><li>完整性</li><li>一致性</li><li>可控性</li><li>追溯性</li></ul><p>软件配置管理：</p><ul><li>版本管理</li><li>变更管理</li><li>过程管理</li><li>文档管理</li></ul><p>软件开发的三种状态：</p><ul><li>草稿</li><li>正式发布</li><li>正在修改</li></ul><h4 id="4-14-知识管理"><a href="#4-14-知识管理" class="headerlink" title="4.14  知识管理"></a>4.14  知识管理</h4><p><strong>显示知识：</strong></p><ul><li>可以编辑，易于表达</li></ul><p><strong>隐性知识：</strong></p><ul><li>无法编辑，难于表达</li></ul><h4 id="4-15-整天变更控制"><a href="#4-15-整天变更控制" class="headerlink" title="4.15  整天变更控制"></a>4.15  整天变更控制</h4><p><strong>变更请求：</strong></p><ul><li>修改项目政策或程序</li><li>修改项目范围</li><li>修改项目预算</li><li>修改项目进度</li><li>想改质量要求</li><li>预防和纠正措施</li></ul><p><strong>项目计划更新：</strong></p><blockquote><p>对基准的变更，只能针对今后的情况，而不能变更以往的绩效。</p><p>这有助于保护基准和历史绩效数据的严肃性</p></blockquote><p><strong>CCB：</strong></p><p>有项目发起人组成的一个<code>常设</code>但<code>非固定</code>的<code>正式</code>团体</p><p>==注意：==</p><p>CCB一旦裁决的事情，就不能在变更了</p><p><strong>变更控制流程图（重点）：</strong></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568719648958.png" alt="1568719648958"></p><p><strong>固定搭配词：</strong></p><ul><li>通知——-相关方</li><li>变更请求—–评估影响</li><li>书面报告—–CCB</li></ul><h3 id="5-项目范围管理"><a href="#5-项目范围管理" class="headerlink" title="5.    项目范围管理"></a>5.    项目范围管理</h3><h4 id="5-1-范围管理的目标："><a href="#5-1-范围管理的目标：" class="headerlink" title="5.1    范围管理的目标："></a>5.1    范围管理的目标：</h4><ul><li><ol><li>要做什么</li><li>只做什么</li></ol></li></ul><h4 id="5-2-范围管理包括什么："><a href="#5-2-范围管理包括什么：" class="headerlink" title="5.2    范围管理包括什么："></a>5.2    范围管理包括什么：</h4><ul><li><ol><li>产品范围：产品，服务或成果所具有的特性和功能</li><li>项目范围：为交付产品，服务或成果而必须完成的工作</li></ol></li></ul><h4 id="5-3-范围管理过程："><a href="#5-3-范围管理过程：" class="headerlink" title="5.3   范围管理过程："></a>5.3   范围管理过程：</h4><blockquote><p>确保：</p><p>​        项目团队，项目发起人和项目相关方</p><p>​        对项目的可交付成果，以及对形成这些可交付成果所进行的工作达成共识 </p></blockquote><h4 id="5-4-不同生命周期的范围管理比较"><a href="#5-4-不同生命周期的范围管理比较" class="headerlink" title="5.4   不同生命周期的范围管理比较"></a>5.4   不同生命周期的范围管理比较</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568721706396.png" alt="1568721706396"></p><h4 id="5-5-范围与需求"><a href="#5-5-范围与需求" class="headerlink" title="5.5    范围与需求"></a>5.5    范围与需求</h4><blockquote><p>范围：客户想要实现的内容</p><p>需求：项目所能实现的内容</p><p>范围与需求不对等，存在客户有些需求是无法实现的现</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568764598641.png" alt="1568764598641"></p><h4 id="5-6-需求收集的几种方法："><a href="#5-6-需求收集的几种方法：" class="headerlink" title="5.6    需求收集的几种方法："></a>5.6    需求收集的几种方法：</h4><ul><li>头脑风暴</li><li>访谈</li><li>焦点小组</li><li>标杆对照</li><li>问卷调查</li></ul><h4 id="5-7-需求决策的方式："><a href="#5-7-需求决策的方式：" class="headerlink" title="5.7    需求决策的方式："></a>5.7    需求决策的方式：</h4><ul><li>投票</li><li>独裁</li><li>多标准决策</li><li>亲和图</li><li>思维导图</li></ul><h4 id="5-8-需求识别的几种方法："><a href="#5-8-需求识别的几种方法：" class="headerlink" title="5.8    需求识别的几种方法："></a>5.8    需求识别的几种方法：</h4><ul><li>名义小组</li><li>观察法（富士康跳楼）</li><li>引导式研讨会（会诊，跨领域，跨部门，有一个领导者组织大家研讨，避免责任由一人承担）</li></ul><blockquote><p>名义小组：</p><ul><li><ol><li>小组成员先不通气，独立思考</li><li>各自写下备选方案和意见</li><li>轮流陈述自己的方案和意见</li><li>小组成员对全部备选方案投票</li><li>得票最多的备选方案入选</li><li>当然，管理者仍有权否决这一方案</li></ol></li></ul></blockquote><h4 id="5-9-需求呈现方式："><a href="#5-9-需求呈现方式：" class="headerlink" title="5.9    需求呈现方式："></a>5.9    需求呈现方式：</h4><ul><li>用户故事（作为一个&lt;角色&gt;，我想要&lt;活动&gt;，以便于&lt;商业价值&gt;）</li><li>系统交互图（招聘网站，要跟外部数据对接，内部数据对接）</li><li>原型图</li><li>故事板（导演画的漫画）</li></ul><h4 id="5-10-需求跟踪矩阵："><a href="#5-10-需求跟踪矩阵：" class="headerlink" title="5.10   需求跟踪矩阵："></a>5.10   需求跟踪矩阵：<img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568767910831.png" alt="1568767910831"></h4><h4 id="5-11-跟需求相关的知识点："><a href="#5-11-跟需求相关的知识点：" class="headerlink" title="5.11    跟需求相关的知识点："></a>5.11    跟需求相关的知识点：</h4><ul><li>收集需求</li><li>需求决策与表现</li><li>需求的呈现</li><li>人际关系与团队技能</li><li>需求跟踪矩阵</li></ul><h4 id="5-11-范围管理说明书"><a href="#5-11-范围管理说明书" class="headerlink" title="5.11    范围管理说明书"></a>5.11    范围管理说明书</h4><blockquote><p>项目章程，关键词，<code>高层级</code>;项目章程是对项目粗略的概括</p><p>项目范围说明书是对项目更加明确的说明</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568768280596.png" alt="1568768280596"></p><p><strong>高层级：</strong></p><blockquote><p>高层级是项目的根节点，是下图中的项目，下图为方面分解结构</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568778922031.png" alt="1568778922031"></p><p><strong>范围基准：</strong></p><ul><li>项目范围说明书</li><li>工作分解结构WBS</li><li>WBS词典</li></ul><h4 id="5-12-工作分解结构WBS："><a href="#5-12-工作分解结构WBS：" class="headerlink" title="5.12    工作分解结构WBS："></a>5.12    工作分解结构WBS：</h4><blockquote><p>项目经理管理划分项目的最小单元工作包</p></blockquote><p><strong>WBS分解：</strong></p><ul><li>子项目</li><li>控制账户</li><li>工作包</li><li>规划包</li><li>活动</li><li>任务</li></ul><p><strong>两种工作分解结构：</strong></p><ul><li>树状分解</li><li>目录式分解</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568779941068.png" alt="1568779941068"></p><h4 id="5-13-WBS词典："><a href="#5-13-WBS词典：" class="headerlink" title="5.13    WBS词典："></a>5.13    WBS词典：</h4><blockquote><p>针对每个WBS组件，详细描述可交付成果活动和进度信息的文件</p></blockquote><p><strong>样式：</strong></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568780156373.png" alt="1568780156373"></p><h4 id="5-14-责任分配矩阵RAM："><a href="#5-14-责任分配矩阵RAM：" class="headerlink" title="5.14    责任分配矩阵RAM："></a>5.14    责任分配矩阵RAM：</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568780352158.png" alt="1568780352158"></p><h4 id="5-16-WBS工作分解结构的价值："><a href="#5-16-WBS工作分解结构的价值：" class="headerlink" title="5.16    WBS工作分解结构的价值："></a>5.16    WBS工作分解结构的价值：</h4><ul><li>基准的来源<ul><li><ol><li>范围</li><li>进度</li><li>成本</li></ol></li></ul></li><li>计划的基础</li><li>工作的展现</li><li>控制的依据</li><li>团队的指南</li></ul><h4 id="5-17-确认范围："><a href="#5-17-确认范围：" class="headerlink" title="5.17   确认范围："></a>5.17   确认范围：</h4><blockquote><p>项目在完成某项功能后要及时去确认质量是否达标，或者完成的东西是否跟客户的想法一直</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568781825076.png" alt="1568781825076"></p><h4 id="5-18-范围蔓延："><a href="#5-18-范围蔓延：" class="headerlink" title="5.18    范围蔓延："></a>5.18    范围蔓延：</h4><p><strong>产生的原因：</strong></p><ul><li>镀金</li><li>爬行</li></ul><h4 id="5-19-范围管理学习要点："><a href="#5-19-范围管理学习要点：" class="headerlink" title="5.19    范围管理学习要点："></a>5.19    范围管理学习要点：</h4><ul><li>不同类型生命周期范围管理的区别</li><li>需求识别的工具与技术</li><li>WBS分解的原则和逻辑</li><li>确认范围的时间（不同生命周期类型）</li><li>范围蔓延（镀金，爬行）</li></ul><h3 id="6-进度管理"><a href="#6-进度管理" class="headerlink" title="6   进度管理"></a>6   进度管理</h3><h4 id="6-1-时间特征："><a href="#6-1-时间特征：" class="headerlink" title="6.1    时间特征："></a>6.1    时间特征：</h4><ul><li>时间不等人</li><li>投入有上限</li><li>对谁都公平</li></ul><h4 id="6-2-时间管理的过程："><a href="#6-2-时间管理的过程：" class="headerlink" title="6.2    时间管理的过程："></a>6.2    时间管理的过程：</h4><ul><li>规划进度管理</li><li>定义活动</li><li>排列活动顺序</li><li>估算活动持续时间</li><li>制定进度计划</li><li>控制进度</li></ul><h4 id="6-3-开发规划"><a href="#6-3-开发规划" class="headerlink" title="6.3    开发规划"></a>6.3    开发规划</h4><p><strong>敏捷开发：</strong></p><p>具有未完成项的迭代进度计划</p><p><strong>滚动式规划：</strong></p><ul><li>近期：对近期要完成的工作详细规划</li><li>中期：渐进明细，从粗到细</li><li>远期：对远期工作只做概要性规划（规划包）</li></ul><h4 id="6-4-紧前关系绘图法PDM"><a href="#6-4-紧前关系绘图法PDM" class="headerlink" title="6.4    紧前关系绘图法PDM"></a>6.4    紧前关系绘图法PDM</h4><h5 id="6-4-1-四种逻辑关系："><a href="#6-4-1-四种逻辑关系：" class="headerlink" title="6.4.1    四种逻辑关系："></a>6.4.1    四种逻辑关系：</h5><ul><li>FS(Finish-Start)</li><li>SS(Start-Start)</li><li>FF(Finish-Finish)</li><li>SF(Start-Finish)</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568852405041.png" alt="1568852405041"></p><h5 id="6-4-2-依赖关系："><a href="#6-4-2-依赖关系：" class="headerlink" title="6.4.2    依赖关系："></a>6.4.2    依赖关系：</h5><ul><li>内部依赖（上面四种逻辑关系）</li><li>外部依赖（法律条文，环境因素…）</li><li>选择性依赖</li><li>强制性依赖</li></ul><h4 id="6-5-提前量（Lead）-amp-滞后了（Lag）"><a href="#6-5-提前量（Lead）-amp-滞后了（Lag）" class="headerlink" title="6.5    提前量（Lead）&amp;滞后了（Lag）:"></a>6.5    提前量（Lead）&amp;滞后了（Lag）:</h4><blockquote><p>滞后：等待时间</p><p>提前量：与紧前工作并行的时间</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568853033544.png" alt="1568853033544"></p><p><strong>前导图PDM：</strong></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568853128476.png" alt="1568853128476"></p><h4 id="6-6-估算资源："><a href="#6-6-估算资源：" class="headerlink" title="6.6    估算资源："></a>6.6    估算资源：</h4><h5 id="6-6-1-学习曲线："><a href="#6-6-1-学习曲线：" class="headerlink" title="6.6.1    学习曲线："></a>6.6.1    学习曲线：</h5><blockquote><p>随着产出数量增多，单位产出所需劳动时间减少，单位生产成本会降低。</p><p>有经验的人完成一项工作需要的时间和新手是不一样的</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568853991939.png" alt="1568853991939"></p><h5 id="6-6-2-边际效益递减规律："><a href="#6-6-2-边际效益递减规律：" class="headerlink" title="6.6.2    边际效益递减规律："></a>6.6.2    边际效益递减规律：</h5><blockquote><p>随着 成本的增加，效益不但没有增加反而减少</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568854029744.png" alt="1568854029744"></p><h4 id="6-7-专家判断-amp-类比估算-amp-参数估算"><a href="#6-7-专家判断-amp-类比估算-amp-参数估算" class="headerlink" title="6.7    专家判断&amp;类比估算&amp;参数估算"></a>6.7    专家判断&amp;类比估算&amp;参数估算</h4><h5 id="6-7-1-专家判断"><a href="#6-7-1-专家判断" class="headerlink" title="6.7.1    专家判断"></a>6.7.1    专家判断</h5><blockquote><p>请有经验的人来帮忙估算</p></blockquote><ul><li>可能存在偏见</li><li>可能判断失误</li></ul><h5 id="6-7-2-类比估算"><a href="#6-7-2-类比估算" class="headerlink" title="6.7.2    类比估算"></a>6.7.2    类比估算</h5><blockquote><p>用类似的项目估算现有项目</p></blockquote><p>优点：经济高效</p><p>缺点：可能不准</p><h5 id="6-7-3-参数估算"><a href="#6-7-3-参数估算" class="headerlink" title="6.7.3    参数估算"></a>6.7.3    参数估算</h5><blockquote><p>如模型成熟，参数准确，参数估算价值很大</p></blockquote><h4 id="6-8-三点估算法："><a href="#6-8-三点估算法：" class="headerlink" title="6.8    三点估算法："></a>6.8    三点估算法：</h4><h5 id="6-8-1-期望值："><a href="#6-8-1-期望值：" class="headerlink" title="6.8.1    期望值："></a>6.8.1    期望值：</h5><blockquote><p>期望值T<del>e</del>=(O+4M+P)/6</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568868225463.png" alt="1568868225463"></p><h5 id="6-8-2-标准差："><a href="#6-8-2-标准差：" class="headerlink" title="6.8.2    标准差："></a>6.8.2    标准差：</h5><blockquote><p>标准差=（P-O）/6</p><p>曲线特点：值越小，越稳定</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568869063646.png" alt="1568869063646"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568869129874.png" alt="1568869129874"></p><h5 id="6-8-3-三角估算："><a href="#6-8-3-三角估算：" class="headerlink" title="6.8.3    三角估算："></a>6.8.3    三角估算：</h5><blockquote><p>期望值=（O+M+P）/3</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568869885969.png" alt="1568869885969"></p><h5 id="6-8-4-正态分布："><a href="#6-8-4-正态分布：" class="headerlink" title="6.8.4    正态分布："></a>6.8.4    正态分布：</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568869994608.png" alt="1568869994608"></p><blockquote><p>期望值T<del>e</del>=6d    标准差 =1d    7天完成项目的概率</p></blockquote><p>P<del>(7d)</del>=50%+68.26%/2=84.13%</p><blockquote><p>期望值T<del>e</del>=6d    标准差 =1d    5天完成项目的概率</p></blockquote><p>P<del>(5d)</del>=50%-68.26%/2=15.87%</p><blockquote><p>期望值T<del>e</del>=6d    标准差 =0.5d    5天完成项目的概率</p></blockquote><p>P<del>(5d)</del>=50%-95.46%/2=2.27%</p><h5 id="6-8-5-自下而上估算"><a href="#6-8-5-自下而上估算" class="headerlink" title="6.8.5    自下而上估算"></a>6.8.5    自下而上估算</h5><blockquote><p>有点：估算精确度高</p><p>缺点：周期成本高</p></blockquote><h5 id="6-8-6-五种估算比较："><a href="#6-8-6-五种估算比较：" class="headerlink" title="6.8.6    五种估算比较："></a>6.8.6    五种估算比较：</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568888739565.png" alt="1568888739565"></p><h4 id="6-9-储备分析"><a href="#6-9-储备分析" class="headerlink" title="6.9    储备分析"></a>6.9    储备分析</h4><blockquote><p>储备是用来应对风险的</p></blockquote><blockquote><p>进度储备：安全事件，缓冲Buff</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568889249362.png" alt="1568889249362"></p><h5 id="6-9-1-项目的三种风险："><a href="#6-9-1-项目的三种风险：" class="headerlink" title="6.9.1    项目的三种风险："></a>6.9.1    项目的三种风险：</h5><ul><li>已知风险（优盘会坏案例）</li><li>已知-未知风险（飞机晚点案例）</li><li>未知-未知风险（飞机坠机案例）</li></ul><h5 id="6-9-2-管理储备-amp-应急储备"><a href="#6-9-2-管理储备-amp-应急储备" class="headerlink" title="6.9.2    管理储备&amp;应急储备"></a>6.9.2    管理储备&amp;应急储备</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568890152284.png" alt="1568890152284"></p><h4 id="6-10-关键路径法："><a href="#6-10-关键路径法：" class="headerlink" title="6.10    关键路径法："></a>6.10    关键路径法：</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568890858979.png" alt="1568890858979"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568891157427.png" alt="1568891157427"></p><h5 id="6-10-1-关键路径法案例推算"><a href="#6-10-1-关键路径法案例推算" class="headerlink" title="6.10.1    关键路径法案例推算"></a>6.10.1    关键路径法案例推算</h5><blockquote><p>红颜色标准的就是关键路径</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568939342721.png" alt="1568939342721"></p><blockquote><p>具备什么特征的活动在关键路径上？ D</p></blockquote><p>A.    浮动时间=0的活动</p><p>B.    浮动时间&lt;=0的活动</p><p>C.    浮动时间&gt;0的活动</p><p>D.    以上均有可能</p><blockquote><p>以下关于“关键路径”的表述是正确的吗？</p></blockquote><ul><li><ol><li>关键路径决定了项目的总工期；  正确</li><li>关键路径所需要的时间最长；      正确</li><li>关键路径上的浮动时间最少；      正确</li><li>一个项目关键路径只能有一条；   错误</li><li>关键路径上的活动技术含量高；   错误</li><li>活动延误可能导致关键路径变化   正确</li><li>关键路径上活动的工期无法压缩   错误</li></ol></li></ul><h4 id="6-11-资源优化"><a href="#6-11-资源优化" class="headerlink" title="6.11    资源优化"></a>6.11    资源优化</h4><blockquote><p>资源平衡（resourse leve）:解决某个时间段资源过载的问题，过载的问题解决了，通常会带来项目delay</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568953233896.png" alt="1568953233896"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568953131766.png" alt="1568953131766"></p><blockquote><p>资源平滑(resource smonth)：解决资源数量波动的问题，尽量让资源的数量保持稳定，减少大起大落，一般不会影响工期</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568953266683.png" alt="1568953266683"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568953282686.png" alt="1568953282686"></p><h4 id="6-12-进度压缩技术"><a href="#6-12-进度压缩技术" class="headerlink" title="6.12    进度压缩技术"></a>6.12    进度压缩技术</h4><blockquote><p>有且只有两个：快熟跟进（Fash Tracking）,赶工（Tracking）</p></blockquote><p>快速跟进：是在FS型项目中，前面一个项目没有结束就可开始第二个项目，可能造成的代价是，前面的项目如果出现了质量问题，后面的项目也要跟着返工</p><p>赶工：增加成本，多派人手，或者让员工多加班，需要付出的代价就是要成本增加</p><p><strong>压缩工期的代价：</strong></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568954044818.png" alt="1568954044818"></p><h4 id="6-13-进度计划"><a href="#6-13-进度计划" class="headerlink" title="6.13    进度计划"></a>6.13    进度计划</h4><h5 id="6-13-1-进度计划展示工具之里程碑计划"><a href="#6-13-1-进度计划展示工具之里程碑计划" class="headerlink" title="6.13.1    进度计划展示工具之里程碑计划"></a>6.13.1    进度计划展示工具之里程碑计划</h5><ul><li>计划：分解为阶段性目标</li><li>控制：强制约束，控制各阶段目标实现</li><li>沟通：与管理层，干系人良好沟通</li><li>责任：明确规定了项目各方的责任义务</li><li>报告：简明，生动，通俗，使用</li></ul><h5 id="6-13-2-进度计划展示工具之甘特图"><a href="#6-13-2-进度计划展示工具之甘特图" class="headerlink" title="6.13.2    进度计划展示工具之甘特图"></a>6.13.2    进度计划展示工具之甘特图</h5><h5 id><a href="#" class="headerlink" title></a><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569028887549.png" alt="1569028887549"></h5><blockquote><p>存在的缺点，那些工作有浮动时间，那些工作是关键路径上的工作，不能直观的看出来，不利于把控项目</p></blockquote><h5 id="6-13-3-项目的3种网络图"><a href="#6-13-3-项目的3种网络图" class="headerlink" title="6.13.3    项目的3种网络图"></a>6.13.3    项目的3种网络图</h5><p><strong>单代号网络图：</strong></p><blockquote><p>单代号网络图（AON），4（FS,SS,SF,FF）种逻辑关系</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569031983573.png" alt="1569031983573"></p><p><strong>双代号网络图：</strong></p><blockquote><p>圆圈不代表工作，只代表工作的连接点，比如3–&gt;4 代表F工作</p><p>双代号网络图（AOA），近FS一种逻辑关系</p><p>虚工作：不耗时间，不占资源，仅表示逻辑关系</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569032018989.png" alt="1569032018989"></p><p><strong>时标网格图：</strong></p><blockquote><p>既有甘特图的特点，又有双代号网络图的特点</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569032342491.png" alt="1569032342491"></p><h4 id="6-14-项目的3种浮动时间"><a href="#6-14-项目的3种浮动时间" class="headerlink" title="6.14    项目的3种浮动时间"></a>6.14    项目的3种浮动时间</h4><ul><li>自由浮动时间</li><li>总浮动时间</li><li>项目浮动时间</li></ul><h5 id="6-14-1-自由浮动时间"><a href="#6-14-1-自由浮动时间" class="headerlink" title="6.14.1    自由浮动时间"></a>6.14.1    自由浮动时间</h5><blockquote><p>不影响后续工作最早可以开始时间的前提下，这项工作可以拖延的时间</p></blockquote><p>A工作给的工期是9天，实际需要5天就可以干完，有四天的富裕时间，B工作给的是6天工期，实际需要4天时间，B工作需要在A工作结束后开始（FS），所以A工作在这9天的时间里面，任何5天内完成自己的工作，都不会影响的B工作的开始时间，所以A工作多出来的这4天时间就是自由浮动时间</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569033470192.png" alt="1569033470192"></p><h5 id="6-14-2-总浮动时间"><a href="#6-14-2-总浮动时间" class="headerlink" title="6.14.2    总浮动时间"></a>6.14.2    总浮动时间</h5><blockquote><p>不影响项目总工期的前提下，活动可以拖延的总时间</p></blockquote><p>A工作给的工期是9天，但是A用了11天完成自己的工作，B工作给的是6天工期，实际需要4天时间，但是由于A工作的延误，用掉了B工作的2天时间，但是总工期还是没有延误的，这2天时间就是总浮动时间</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569033375872.png" alt="1569033375872"></p><h5 id="6-14-3-项目浮动时间"><a href="#6-14-3-项目浮动时间" class="headerlink" title="6.14.3    项目浮动时间"></a>6.14.3    项目浮动时间</h5><blockquote><p>一个项目本来需要10天时间完成，结果甲方又多余给了3天的时间，多出来的这3天时间就是项目浮动时间</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569034034074.png" alt="1569034034074"></p><h4 id="6-15-关键链法CCM"><a href="#6-15-关键链法CCM" class="headerlink" title="6.15    关键链法CCM"></a>6.15    关键链法CCM</h4><ul><li>学生综合征    </li><li>估算安全时间</li><li>墨菲定律</li><li>路径汇聚</li></ul><blockquote><p>在路径汇聚前给活动加缓冲，每个活动按照三点估算法（O+4M+D）/6,算出来的50%汇报工期</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569035253955.png" alt="1569035253955"></p><h4 id="6-16-关键路径法-amp-关键链法区分"><a href="#6-16-关键路径法-amp-关键链法区分" class="headerlink" title="6.16 关键路径法&amp;关键链法区分"></a>6.16 关键路径法&amp;关键链法区分</h4><blockquote><p>关键路径法，是将所有的时间，资源都分配到项目上去，项目经理手上没有多余的时间跟资源</p></blockquote><blockquote><p>关键链法，是项目经理将多余的资源，时间掌握在自己的手里，在项目中那个活动只出现问题的时候，项目经理再将自己手上掌握的多余资源分配上去</p></blockquote><blockquote><p>应急储备：项目经理手里掌握的资源是应急储备</p></blockquote><blockquote><p>管理储备：管理层手里掌握的资源是管理储备</p></blockquote><h4 id="6-17-燃尽图"><a href="#6-17-燃尽图" class="headerlink" title="6.17    燃尽图"></a>6.17    燃尽图</h4><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569036860870.png" alt="1569036860870"></p><h4 id="6-19-滚动式规划"><a href="#6-19-滚动式规划" class="headerlink" title="6.19    滚动式规划"></a>6.19    滚动式规划</h4><p>滚动式规划是一种迭代式的规划技术，即详细规划近期要完成的工作，同事在较高层次上粗略规划远期工作。它是一种渐进明细的规划方式，适用于工作包，规划包以及采用敏捷或瀑布式方法的发布规划。因此，在项目生命周期的不同阶段，工作的详细程度会有所不同。在早期的战略规划阶段，信息尚不够明确，工作包只能分解到已知的详细水平；然后，随着了解到更多的信息，近期即将实施的工作包就可以分解到具体的活动</p><h4 id="6-18-本节知识点"><a href="#6-18-本节知识点" class="headerlink" title="6.18    本节知识点"></a>6.18    本节知识点</h4><ul><li>三点估算法（PERT计算评审技术）</li><li>正态分布的3个百分比</li><li>活动之间的依赖关系</li><li>2种进度压缩技术以及代价</li><li>关键路径法CPM的参数计算</li><li>自由浮动的时间和总浮动时间</li><li>资源优化的2种思路</li><li>应急储备，管理储备对应的风险和负责人</li><li>关键链法CCM</li></ul><h3 id="7-成本管理"><a href="#7-成本管理" class="headerlink" title="7.    成本管理"></a>7.    成本管理</h3><h4 id="7-1-成本管理的过程"><a href="#7-1-成本管理的过程" class="headerlink" title="7.1    成本管理的过程"></a>7.1    成本管理的过程</h4><ul><li>规划成本管理：目的为了生成一个成本管理计划</li><li>估算成本管理</li><li>指定预算</li><li>控制成本</li></ul><h4 id="7-2-成本管理计划"><a href="#7-2-成本管理计划" class="headerlink" title="7.2    成本管理计划"></a>7.2    成本管理计划</h4><ul><li>不包含具体的成本信息</li><li>规定管理成本的方法，规则，单位等，如美元，人民币</li></ul><h4 id="7-3-成本管理的目标"><a href="#7-3-成本管理的目标" class="headerlink" title="7.3    成本管理的目标"></a>7.3    成本管理的目标</h4><p>在批准的预算内完成项目的工作</p><h4 id="7-4-成本管理的分类"><a href="#7-4-成本管理的分类" class="headerlink" title="7.4    成本管理的分类"></a>7.4    成本管理的分类</h4><ul><li>直接成本&amp;间接成本</li><li>固定成本&amp;可变成本</li><li>沉没成本</li><li>机会成本</li><li>全生命周期成本</li></ul><h5 id="7-4-1-直接成本-amp-间接成本"><a href="#7-4-1-直接成本-amp-间接成本" class="headerlink" title="7.4.1    直接成本&amp;间接成本"></a>7.4.1    直接成本&amp;间接成本</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569125293440.png" alt="1569125293440"></p><h5 id="7-4-2-固定成本-amp-可变成本"><a href="#7-4-2-固定成本-amp-可变成本" class="headerlink" title="7.4.2    固定成本&amp;可变成本"></a>7.4.2    固定成本&amp;可变成本</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569125419113.png" alt="1569125419113"></p><h5 id="7-4-3-机会成本"><a href="#7-4-3-机会成本" class="headerlink" title="7.4.3    机会成本"></a>7.4.3    机会成本</h5><blockquote><p>在若干个项目中，经过最终考虑，选择了一个项目，其他为选择的项目中，利润最大的那个就是机会成本</p></blockquote><p>案例：下面三个项目中，如果根据公司的现有人员配置，只能选择项目B，剩下的未选的项目A和项目C，项目C的收益比较高，所以失去的机会成本就是250万收益</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569126038257.png" alt="1569126038257"></p><h5 id="7-4-4-沉默成本"><a href="#7-4-4-沉默成本" class="headerlink" title="7.4.4    沉默成本"></a>7.4.4    沉默成本</h5><blockquote><p>已经投资出去的成本，不管项目下一步进展如何，成功或失败，投资出去的成本都不能再回来，这部分成本就是沉默成本，例如，考PMP，我们给培训机构交的3000元，这部分钱，不管你日后是否能坚持下去继续考试，这部分钱不可能在拿回来，这部分投资就是沉默成本</p></blockquote><h5 id="7-4-5-全生命周期成本"><a href="#7-4-5-全生命周期成本" class="headerlink" title="7.4.5    全生命周期成本"></a>7.4.5    全生命周期成本</h5><blockquote><p>全生命周期成本不是一个成本，而是一个理念，我们在规划设计阶段，就要考虑在未来全生命周期当中包括运营维护，包括最后的报废拆除整个全过程的成本，实现整个项目的成本最优</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569127080022.png" alt="1569127080022"></p><h4 id="7-5-成本估算与预算"><a href="#7-5-成本估算与预算" class="headerlink" title="7.5    成本估算与预算"></a>7.5    成本估算与预算</h4><h5 id="7-5-1-成本估算精确度等级"><a href="#7-5-1-成本估算精确度等级" class="headerlink" title="7.5.1    成本估算精确度等级"></a>7.5.1    成本估算精确度等级</h5><blockquote><p>①在项目的不同阶段，对精确度的要求是逐级递增的，越来越细，越来越准</p><p>②估算的精确度不是左右平衡的，估多省钱的可以日后再用，如果估少可能造成项目失败</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569127812236.png" alt="1569127812236"></p><h5 id="7-5-2-资金限制平衡"><a href="#7-5-2-资金限制平衡" class="headerlink" title="7.5.2    资金限制平衡"></a>7.5.2    资金限制平衡</h5><blockquote><p>把项目资金支出计划与项目资金到位承诺进行对比，识别资金限制与计划支出之间的差异，必要时调整工期，减少资源投入强度，以避免资金链断裂而导致项目失败</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569128232940.png" alt="1569128232940"></p><h5 id="7-5-3-项目预算组成"><a href="#7-5-3-项目预算组成" class="headerlink" title="7.5.3    项目预算组成"></a>7.5.3    项目预算组成</h5><ul><li>成本基准不包括管理储备</li><li>成本基准包括应急储备</li><li>成本基准=项目完工预算</li><li>应急储备应该包括在成本基准里</li><li>项目预算=管理储备+成本基准</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569128715720.png" alt="1569128715720"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569128774975.png" alt="1569128774975"></p><h4 id="7-6-挣值分析-三个指标"><a href="#7-6-挣值分析-三个指标" class="headerlink" title="7.6    挣值分析-三个指标"></a>7.6    挣值分析-三个指标</h4><blockquote><p>挣值说的都是成本，并且是累计成本</p></blockquote><h5 id="7-6-1-概念理解"><a href="#7-6-1-概念理解" class="headerlink" title="7.6.1    概念理解"></a>7.6.1    概念理解</h5><ul><li>PV（计划值）=计划单价*计划工作量</li><li>AC（实际成本）=实际单价*实际工作量</li><li>EV（挣得值）=计划单价*实际工作量</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569130496026.png" alt="1569130496026"></p><blockquote><p>案例：加工20000元土豆，10天切完，按照计划5天应该切10000元土豆，实际员工5天切了15000元土豆，麦当劳验货，这15000元土豆中只有7500元土豆合格</p></blockquote><p>分析：第五天各项的值为：</p><ul><li>PV=10000</li><li>AC=15000</li><li>EV=7500</li><li>进度偏差(SV)=EV-PV=7500-10000=-2500</li><li>成本偏差(CV)=EV-AC=7500-15000=-7500</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569130052425.png" alt="1569130052425"></p><h5 id="7-6-2-挣值曲线-amp-6种情况"><a href="#7-6-2-挣值曲线-amp-6种情况" class="headerlink" title="7.6.2    挣值曲线&amp;6种情况"></a>7.6.2    挣值曲线&amp;6种情况</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569131453803.png" alt="1569131453803"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569131492088.png" alt="1569131492088"></p><p>最好的情况，下面的香蕉越瘦越好，最好的情况是三条重合</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569131515464.png" alt="1569131515464"></p><h5 id="7-6-3-两个指数CPI，SPI"><a href="#7-6-3-两个指数CPI，SPI" class="headerlink" title="7.6.3    两个指数CPI，SPI"></a>7.6.3    两个指数CPI，SPI</h5><ul><li>CPI（成本绩效指数）=EV/AC</li><li>SPC（进度绩效指数）=EV/PV</li></ul><p>==注意：==</p><p>CPI(成本绩效指数)：越接近1越好，大于1比小于1好</p><p>CPI和SPC必须同时出现去评估一个项目，不能拿一个去评估一个项目，没有意义</p><h5 id="7-6-4-完工估算EAC"><a href="#7-6-4-完工估算EAC" class="headerlink" title="7.6.4    完工估算EAC"></a>7.6.4    完工估算EAC</h5><blockquote><p>EAC（完工估算）：项目实际完成需要花的钱</p><p>PB(项目预算)：完工预算+管理储备</p><p>ETC（完工尚需估算）：完工估算（EAC）-目前实际成本（AC）</p><p>BAC（完工预算）：计划完成项目需要花的成本</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569132758961.png" alt="1569132758961"></p><h5 id="7-6-5-完工估算（EAC）的3种计算公式"><a href="#7-6-5-完工估算（EAC）的3种计算公式" class="headerlink" title="7.6.5    完工估算（EAC）的3种计算公式"></a>7.6.5    完工估算（EAC）的3种计算公式</h5><ul><li>EAC=BAC/CPI                                            </li><li>EAC=AC+(BAC-EV)        </li><li>EAC=AC+(BAC-EV)/(CPI*SPI)</li></ul><blockquote><p>案例：10天需要切20000土豆，第5天实际切了15000土豆，经过验收只有7500达标，按照计划5天应该切10000土豆</p></blockquote><p>AC=15000</p><p>PV=10000</p><p>EV=7500</p><p>CPI=EV/AC=7500/15000=0.5</p><p>SPI=EV/PV=7500/10000=0.75</p><p>BAC=20000</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569133730880.png" alt="1569133730880"></p><h5 id="7-6-6-完工尚需绩效指数（TCPI）"><a href="#7-6-6-完工尚需绩效指数（TCPI）" class="headerlink" title="7.6.6    完工尚需绩效指数（TCPI）"></a>7.6.6    完工尚需绩效指数（TCPI）</h5><ul><li>TCPI=(BAC-EV)/(BAC-AC)</li><li>TCPI=(BAC-EV)/(EVC-AC)</li></ul><h5 id="7-6-7-完工偏差VAC"><a href="#7-6-7-完工偏差VAC" class="headerlink" title="7.6.7    完工偏差VAC"></a>7.6.7    完工偏差VAC</h5><blockquote><p>VAC=BAC-EAC</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569134687463.png" alt="1569134687463"></p><h5 id="7-6-8-挣值分析-案例"><a href="#7-6-8-挣值分析-案例" class="headerlink" title="7.6.8    挣值分析-案例"></a>7.6.8    挣值分析-案例</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569135432095.png" alt="1569135432095"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569135549154.png" alt="1569135549154"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569135675475.png" alt="1569135675475"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569135708318.png" alt="1569135708318"></p><h5 id="7-6-9-挣值分析的应用难点"><a href="#7-6-9-挣值分析的应用难点" class="headerlink" title="7.6.9    挣值分析的应用难点"></a>7.6.9    挣值分析的应用难点</h5><ul><li>百分比法<ul><li>零一百法</li><li>二十八十法</li><li>五十五十法</li></ul></li><li>里程碑法</li><li>主材消耗法：道路画白线，根据剩余油漆桶数，应对的是成线性的项目</li></ul><h5 id="7-6-10-挣得进度ES"><a href="#7-6-10-挣得进度ES" class="headerlink" title="7.6.10    挣得进度ES"></a>7.6.10    挣得进度ES</h5><ul><li>AT：实际时间</li><li>ES：挣得进度</li><li>TV：偏差时间AT-ES</li><li>TEAC：时间完工估算</li><li>TETC：时间完工尚需估算</li><li>TVAC：完工时间偏差</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569137444129.png" alt="1569137444129"></p><blockquote><p>土豆案例</p></blockquote><ul><li>PAR(计划完成速度)=BAC/SAC=20000/10=2000</li><li>ES(挣得进度)=EV/PAR=7500/2000=3.75</li><li>AT(实际时间)：5天</li><li>TV（偏差时间）=AT-ES=5-3.75=1.25</li><li>TPI（时间绩效指数）=ES/AT=3.75/5=0.75</li><li>SAC（计划完成时间）：10天</li><li>TEAC（时间完工估算）<ul><li>TEAC=SAC-TV=10-1.25=11.25</li><li>TEAC=SAC/TPI =10/0.75=13.33</li></ul></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569137700556.png" alt="1569137700556"></p><h4 id="7-7-本章知识点"><a href="#7-7-本章知识点" class="headerlink" title="7.7    本章知识点"></a>7.7    本章知识点</h4><ul><li>成本的分类&amp;使用场景</li><li>3个成本估算的精度标准</li><li>项目预算的构成</li><li>挣值分析各参数的含义，计算</li></ul><h3 id="8-质量管理"><a href="#8-质量管理" class="headerlink" title="8.    质量管理"></a>8.    质量管理</h3><h4 id="8-1-质量管理的过程："><a href="#8-1-质量管理的过程：" class="headerlink" title="8.1    质量管理的过程："></a>8.1    质量管理的过程：</h4><ul><li>规划质量管理</li><li>管理质量</li><li>控制质量</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569197511676.png" alt="1569197511676"></p><h4 id="8-2-等级-amp-质量"><a href="#8-2-等级-amp-质量" class="headerlink" title="8.2    等级&amp;质量"></a>8.2    等级&amp;质量</h4><blockquote><p>等级跟质量不是一个东西，等级高的东西不一定质量好，质量好的不一定等级高，两者不对等</p></blockquote><h4 id="8-3-精确度-amp-准确度"><a href="#8-3-精确度-amp-准确度" class="headerlink" title="8.3    精确度&amp;准确度"></a>8.3    精确度&amp;准确度</h4><blockquote><p>案例：打靶，你打的很准，弹孔很密集，但你都打到我的靶子上了，我虽然打的很散，但都在自己的靶子上，你到弹孔密集，所以精确度比较高，我打到我的靶子上了，所以准确度高</p></blockquote><blockquote><p>精确度：样本之间，互相的距离小，比较密集</p><p>准确度：样本和目标的距离小</p></blockquote><h4 id="8-4-质量管理的水平-amp-质量管理的发展"><a href="#8-4-质量管理的水平-amp-质量管理的发展" class="headerlink" title="8.4    质量管理的水平&amp;质量管理的发展"></a>8.4    质量管理的水平&amp;质量管理的发展</h4><p>质量管理水平：</p><ul><li>用户发现缺陷：代价最大，商誉和口碑受损</li><li>QC检查和纠正：检查结果和纠正缺陷来控制质量</li><li>QA过程保证：过程的保证和持续改进</li><li>DfX设计优化：质量融入规划设计中</li><li>TQM：全员参与质量管理文化</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569198206326.png" alt="1569198206326"></p><p>质量管理的发展：</p><ul><li><ol><li>工匠自检</li><li>专职质检</li><li>QC 质量控制</li><li>QA 质量保证</li><li>DfX</li><li>全面质量管理 TQM</li></ol></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569198392390.png" alt="1569198392390"></p><h4 id="8-5-质量管理的发展趋势-amp-代表人物"><a href="#8-5-质量管理的发展趋势-amp-代表人物" class="headerlink" title="8.5    质量管理的发展趋势&amp;代表人物"></a>8.5    质量管理的发展趋势&amp;代表人物</h4><h5 id="8-5-1-质量管理的发展趋势："><a href="#8-5-1-质量管理的发展趋势：" class="headerlink" title="8.5.1    质量管理的发展趋势："></a>8.5.1    质量管理的发展趋势：</h5><ul><li>客户满意（朱兰）：符合要求，适合使用</li><li>持续改进：戴明环（PDCA）</li><li>管理层的责任：质量出了问题应该有管理层承担责任</li><li>与供应商持续合作，互利共赢</li></ul><h5 id="8-5-2-持续改进的核心思想（PDCA）"><a href="#8-5-2-持续改进的核心思想（PDCA）" class="headerlink" title="8.5.2    持续改进的核心思想（PDCA）"></a>8.5.2    持续改进的核心思想（PDCA）</h5><ul><li>P：Plan</li><li>D:Do</li><li>C:Check</li><li>A:Action</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569199276154.png" alt="1569199276154"></p><h5 id="8-5-3-Six-sigma"><a href="#8-5-3-Six-sigma" class="headerlink" title="8.5.3    Six sigma"></a>8.5.3    Six sigma</h5><ul><li>6西格玛</li><li>Lean 精益</li><li>精益六西格玛</li></ul><h5 id="8-5-4-质量成本-COQ"><a href="#8-5-4-质量成本-COQ" class="headerlink" title="8.5.4    质量成本  COQ"></a>8.5.4    质量成本  COQ</h5><blockquote><p>包括为预防质量不合格，或纠正不合格（返工等），而发生的成本</p></blockquote><h5 id="8-5-5-一致性成本-amp-不一致成本"><a href="#8-5-5-一致性成本-amp-不一致成本" class="headerlink" title="8.5.5    一致性成本&amp;不一致成本"></a>8.5.5    一致性成本&amp;不一致成本</h5><ul><li>一致性成本：预防的</li><li>不一致性成本：纠正的</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569200109544.png" alt="1569200109544"></p><h5 id="8-5-6-质量偏离目标值越大，损失越大"><a href="#8-5-6-质量偏离目标值越大，损失越大" class="headerlink" title="8.5.6    质量偏离目标值越大，损失越大"></a>8.5.6    质量偏离目标值越大，损失越大</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569211370558.png" alt="1569211370558"></p><h4 id="8-6-两个质量管理工具"><a href="#8-6-两个质量管理工具" class="headerlink" title="8.6    两个质量管理工具"></a>8.6    两个质量管理工具</h4><ul><li>矩阵图</li><li>流程图</li></ul><p>矩阵图：</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569211955917.png" alt="1569211955917"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569211973465.png" alt="1569211973465"></p><p>流程图：</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569212033436.png" alt="1569212033436"></p><h4 id="8-7-QA质量保证-amp-QC质量控制"><a href="#8-7-QA质量保证-amp-QC质量控制" class="headerlink" title="8.7    QA质量保证&amp;QC质量控制"></a>8.7    QA质量保证&amp;QC质量控制</h4><ul><li>QA：过程</li><li>QC：结果</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569212059884.png" alt="1569212059884"></p><h4 id="8-8-面向X设计"><a href="#8-8-面向X设计" class="headerlink" title="8.8    面向X设计"></a>8.8    面向X设计</h4><blockquote><p>设计时充分考虑：好加工，好装配，好品控，好搬运，好收纳，好使用，好维护，好修理，好回收，好报废</p><p>案例：宜家家居</p></blockquote><h4 id="8-9-质量管理工具"><a href="#8-9-质量管理工具" class="headerlink" title="8.9    质量管理工具"></a>8.9    质量管理工具</h4><blockquote><p>根本原因分析：一级一级向上一个环节溯源，最终找到原因</p></blockquote><h5 id="8-9-1-鱼骨图"><a href="#8-9-1-鱼骨图" class="headerlink" title="8.9.1    鱼骨图"></a>8.9.1    鱼骨图</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569213245757.png" alt="1569213245757"></p><h5 id="8-9-2-直方图"><a href="#8-9-2-直方图" class="headerlink" title="8.9.2    直方图"></a>8.9.2    直方图</h5><ul><li><ol><li>基本符合正态分布</li><li>数据全部在规格以内</li><li>均值和规格的中心一致</li><li>规格线位于标准差4倍的位置</li></ol></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569215605937.png" alt="1569215605937"></p><p><strong>直方图分析：</strong></p><ul><li>对称分布（正态分布）：生产过程正常，质量稳定</li><li>偏态分布：技术，习惯原因造成，为异常生产情况</li><li>锯齿分布：分组不当，或测试方法和读数有问题</li><li>孤岛分布：不熟练的工人替班造成</li><li>陡壁分布：由剔除不合格品，等外品或超差返修后造成</li><li>双峰分布：有两个不同的分布混在一起检查的结果</li><li>平峰分布：由缓慢变化的因素起主导作用的结果</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569215726153.png" alt="1569215726153"></p><p><strong>不好的直方图：</strong></p><ul><li>双侧无余量型：产品范围与规格正好一致。因为没有裕量，令人担心，工序稍有变化，就会超出规格，所以有必要减少偏差</li><li>余量过富裕型：工序能力太富裕。如不是规格太宽裕，应适当放宽工序能力指数以降低成本</li><li>平均值偏离型：平均值过于偏左。为降低不良率，应调整工作中心使之接近规格中心</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569216025424.png" alt="1569216025424"></p><h5 id="8-9-3-散点图"><a href="#8-9-3-散点图" class="headerlink" title="8.9.3    散点图"></a>8.9.3    散点图</h5><blockquote><p>散点图：通过变量之间的相关性来分析质量问题产生的原因</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569234348256.png" alt="1569234348256"></p><h5 id="8-9-4-核对单"><a href="#8-9-4-核对单" class="headerlink" title="8.9.4    核对单"></a>8.9.4    核对单</h5><h5 id="8-9-5-检查表"><a href="#8-9-5-检查表" class="headerlink" title="8.9.5    检查表"></a>8.9.5    检查表</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569234423130.png" alt="1569234423130"></p><h5 id="8-9-6-帕累托图"><a href="#8-9-6-帕累托图" class="headerlink" title="8.9.6    帕累托图"></a>8.9.6    帕累托图</h5><blockquote><p>二八原理，即百分之八十的问题是百分之二十的原因所造成的</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569234446276.png" alt="1569234446276"></p><h5 id="8-9-7-控制图-amp-统计抽样"><a href="#8-9-7-控制图-amp-统计抽样" class="headerlink" title="8.9.7    控制图&amp;统计抽样"></a>8.9.7    控制图&amp;统计抽样</h5><p>==出现以下三种情况，必须停工找出问题：==</p><ul><li>连续7点出现在均值一侧</li><li>连续7点呈单调上升/下降趋势</li><li>数据出现在控制线外</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569234903825.png" alt="1569234903825"></p><h5 id="8-9-8-过程决策程序图"><a href="#8-9-8-过程决策程序图" class="headerlink" title="8.9.8    过程决策程序图"></a>8.9.8    过程决策程序图</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569235930685.png" alt="1569235930685"></p><h4 id="8-10-本章知识点"><a href="#8-10-本章知识点" class="headerlink" title="8.10    本章知识点"></a>8.10    本章知识点</h4><ul><li>等级&amp;质量，精确度&amp;准确度</li><li>质量管理水平的5个层次</li><li>持续改进PDCA循环</li><li>质量成本COQ</li><li>质量相关的各种工具技术</li></ul><h3 id="9-项目资源管理"><a href="#9-项目资源管理" class="headerlink" title="9    项目资源管理"></a>9    项目资源管理</h3><h4 id="9-1-资源管理的过程"><a href="#9-1-资源管理的过程" class="headerlink" title="9.1    资源管理的过程"></a>9.1    资源管理的过程</h4><ul><li>规划资源管理</li><li>估算活动资源</li><li>获取资源</li><li>建设团队</li><li>管理团队</li><li>控制资源</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569282881759.png" alt="1569282881759"></p><h4 id="9-2-权利矩阵"><a href="#9-2-权利矩阵" class="headerlink" title="9.2    权利矩阵"></a>9.2    权利矩阵</h4><blockquote><p>所有东西，由团队成员自己去定</p></blockquote><p>定调子：整体方向的设定</p><p>搭台子：团队及其组织环境的规划</p><p>写铺子：工作过程和进度的监控和管理</p><p>唱曲子：团队任务的执行</p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569282972602.png" alt="1569282972602"></p><h4 id="9-3-项目人力资源的特点"><a href="#9-3-项目人力资源的特点" class="headerlink" title="9.3    项目人力资源的特点"></a>9.3    项目人力资源的特点</h4><ul><li>临时性</li><li>流动性</li><li>松散型</li><li>复杂性</li></ul><h4 id="9-4-项目与企业的人力资源管理的区别"><a href="#9-4-项目与企业的人力资源管理的区别" class="headerlink" title="9.4    项目与企业的人力资源管理的区别"></a>9.4    项目与企业的人力资源管理的区别</h4><h5 id="9-4-1-企业人力资源："><a href="#9-4-1-企业人力资源：" class="headerlink" title="9.4.1    企业人力资源："></a>9.4.1    企业人力资源：</h5><ul><li>选</li><li>用</li><li>育</li><li>留</li></ul><h5 id="9-4-2-项目人力资源："><a href="#9-4-2-项目人力资源：" class="headerlink" title="9.4.2    项目人力资源："></a>9.4.2    项目人力资源：</h5><ul><li>借</li><li>用</li><li>育</li><li>还</li></ul><h4 id="9-5-团队章程与培训责任"><a href="#9-5-团队章程与培训责任" class="headerlink" title="9.5    团队章程与培训责任"></a>9.5    团队章程与培训责任</h4><h5 id="9-5-1-团队章程"><a href="#9-5-1-团队章程" class="headerlink" title="9.5.1    团队章程"></a>9.5.1    团队章程</h5><ul><li>团队的价值观</li><li>沟通指南</li><li>决策标准和过程</li><li>冲突处理过程</li><li>会议指南</li><li>团队共识</li></ul><h5 id="9-5-2-培训责任"><a href="#9-5-2-培训责任" class="headerlink" title="9.5.2    培训责任"></a>9.5.2    培训责任</h5><ul><li>员工的技术，技能，职能经理负责</li><li>员工的项目熟悉度，甘特图，项目经理</li><li>员工对公司文化，规章制度，人力资源负责</li></ul><h4 id="9-6-资源分解结构"><a href="#9-6-资源分解结构" class="headerlink" title="9.6   资源分解结构"></a>9.6   资源分解结构</h4><h5 id="9-6-1-资源分解结构（RBS）的含义及用法"><a href="#9-6-1-资源分解结构（RBS）的含义及用法" class="headerlink" title="9.6.1    资源分解结构（RBS）的含义及用法"></a>9.6.1    资源分解结构（RBS）的含义及用法</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569284733461.png" alt="1569284733461"></p><h5 id="9-6-2-RACI矩阵"><a href="#9-6-2-RACI矩阵" class="headerlink" title="9.6.2    RACI矩阵"></a>9.6.2    RACI矩阵</h5><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569284770832.png" alt="1569284770832"></p><h5 id="9-6-3-欲分派的概念"><a href="#9-6-3-欲分派的概念" class="headerlink" title="9.6.3    欲分派的概念"></a>9.6.3    欲分派的概念</h5><blockquote><p>项目中有一些特殊的技术人才，有一些事情只有他们能干，所以这种人是欲分派资源</p></blockquote><h5 id="9-6-4-虚拟团队"><a href="#9-6-4-虚拟团队" class="headerlink" title="9.6.4    虚拟团队"></a>9.6.4    虚拟团队</h5><blockquote><p>由跨地图，跨组织的成员通过通讯和信息技术联结和协同工作的团队</p></blockquote><h5 id="9-6-5-谈判"><a href="#9-6-5-谈判" class="headerlink" title="9.6.5    谈判"></a>9.6.5    谈判</h5><blockquote><p>项目上的资源和人都是通过谈判得到的</p></blockquote><h4 id="9-7-资源的获取"><a href="#9-7-资源的获取" class="headerlink" title="9.7    资源的获取"></a>9.7    资源的获取</h4><blockquote><p>野狗，狗，兔子都不能要</p><p>提升自己，影响他人</p></blockquote><h5 id="-1"><a href="#-1" class="headerlink" title></a><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569285604067.png" alt="1569285604067"></h5><h4 id="9-8-塔斯曼阶梯理论（重点能容）"><a href="#9-8-塔斯曼阶梯理论（重点能容）" class="headerlink" title="9.8    塔斯曼阶梯理论（重点能容）"></a>9.8    塔斯曼阶梯理论（重点能容）</h4><blockquote><p>一个新项目一般要经过一下几个阶段，形成期，团队士气高，但是由于还没有开始项目所以没有什么绩效，进入振荡器，团队开始相互抱怨，认为别人的能力不行，但是绩效在增加，进入规范期，团队成员开始改变自己，开始配合他人，相互之间有了已经的了解，团队士气高涨，绩效上升，进入表现期，团队喜欢在一起干活，士气高涨，绩效上升</p></blockquote><blockquote><p>对于以前有配合过的老团队，可能不需要经过前面几个阶段，直接进入规范期和表现期，一定是以前有配合过得老团队才会有这种可能</p></blockquote><blockquote><p>有些情况，团队已经开始规划，配合默契了，因为新的需求，有重新进入震荡阶段</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569286195833.png" alt="1569286195833"></p><h4 id="9-9-项目经理的角色和职责："><a href="#9-9-项目经理的角色和职责：" class="headerlink" title="9.9    项目经理的角色和职责："></a>9.9    项目经理的角色和职责：</h4><ul><li>资源的整合者</li><li>信息的沟通者</li><li>氛围的创造者</li><li>决策的制定者</li><li>团队的领导者</li></ul><h4 id="9-10-项目经理的管理风格："><a href="#9-10-项目经理的管理风格：" class="headerlink" title="9.10    项目经理的管理风格："></a>9.10    项目经理的管理风格：</h4><ul><li>形成阶段：指令型，直接    明确    清晰</li><li>震荡阶段：影响型   引导    调节</li><li>规范阶段： 参与型   帮助   参与   促进</li><li>表现阶段：  授权型   信任   授权   支持</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569322279843.png" alt="1569322279843"></p><h4 id="9-11-冲突管理-amp-冲突管理的益处"><a href="#9-11-冲突管理-amp-冲突管理的益处" class="headerlink" title="9.11    冲突管理&amp;冲突管理的益处"></a>9.11    冲突管理&amp;冲突管理的益处</h4><blockquote><p>项目环境中，冲突是难免的</p></blockquote><p><strong>冲突的益处：</strong></p><ul><li>促进磨合，增进了解</li><li>灵感源泉，创新动力</li><li>暴露问题，降低风险</li><li>加速决策，改进管理</li></ul><h4 id="9-12-冲突的解决办法"><a href="#9-12-冲突的解决办法" class="headerlink" title="9.12    冲突的解决办法"></a>9.12    冲突的解决办法</h4><ul><li>强迫/命令</li><li>撤退/回避</li><li>妥协/调解</li><li>缓和/包容</li><li>合作/解决</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569323651806.png" alt="1569323651806"></p><p><strong>五种冲突解决办法的适应性：</strong></p><ul><li>合作/解决:双赢</li><li>强迫/命令：一赢一输</li><li>撤回/回避：双赢</li><li>缓和/包容：一输一赢</li><li>妥协/调解：双输</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569324512115.png" alt="1569324512115"></p><h4 id="9-13-人员遣散的意思"><a href="#9-13-人员遣散的意思" class="headerlink" title="9.13    人员遣散的意思"></a>9.13    人员遣散的意思</h4><ul><li>控制成本</li><li>提升士气</li><li>降低风险、</li></ul><h4 id="9-14-项目经理的五种权利"><a href="#9-14-项目经理的五种权利" class="headerlink" title="9.14    项目经理的五种权利"></a>9.14    项目经理的五种权利</h4><ul><li>职位：<ul><li>法定/正式的权利</li><li>奖赏（口头赞赏，绩效写好评语）</li><li>强制/惩罚</li></ul></li><li>自身：<ul><li>专家权威（是某一方面的人才）</li><li>威望/参考（舅舅是高管）</li></ul></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569325324207.png" alt="1569325324207"></p><h4 id="9-15-X-Y理论-amp-需求层次理论"><a href="#9-15-X-Y理论-amp-需求层次理论" class="headerlink" title="9.15    X-Y理论 &amp; 需求层次理论"></a>9.15    X-Y理论 &amp; 需求层次理论</h4><h5 id="9-1-5-1-X-Y理论"><a href="#9-1-5-1-X-Y理论" class="headerlink" title="9.1.5.1    X-Y理论"></a>9.1.5.1    X-Y理论</h5><blockquote><p>X：所有人都是不积极的，不上进的，需要添加看制度去看管他们，去督促他们</p><p>Y：所有人都是积极上进的，有良好的自我意识，知道自己该干什么，不需要别人提醒自己，督促自己就能把事情干好</p></blockquote><p>X，Y理论没有谁对谁错，不同的行业应用不同的措施</p><h5 id="9-15-2-需求层次理论"><a href="#9-15-2-需求层次理论" class="headerlink" title="9.15.2    需求层次理论"></a>9.15.2    需求层次理论</h5><ul><li><ol><li>生存：空气、水，食物</li><li>安全：安全，次序，自由</li><li>社会：爱情，友谊，归属</li><li>尊重：自尊，成就，责任</li><li>自由实现：不讲回报，心甘情愿</li></ol></li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569406683741.png" alt="1569406683741"></p><p>规律：</p><ul><li>难以跨越</li><li>人人都有</li></ul><h4 id="9-16-双因素理论"><a href="#9-16-双因素理论" class="headerlink" title="9.16    双因素理论"></a>9.16    双因素理论</h4><blockquote><p>保健因素，就是公司应该满足员工，最近本保障的东西，比如，五险一金，工资等</p><p>激励因素，公司为了激励员工积极上进，出台的一些奖励措施，让员工更加积极的工作</p></blockquote><p>保健因素：</p><blockquote><p>工作条件，工资，福利，制度。基本没有激励作用但必须满足</p></blockquote><p>激励因素：</p><blockquote><p>成就，赏识，挑战性的工作，增加的工作责任，以及成长的发展的机会</p></blockquote><h4 id="9-17-期望理论"><a href="#9-17-期望理论" class="headerlink" title="9.17    期望理论"></a>9.17    期望理论</h4><ul><li>努力-绩效：目标通过努力可以达到</li><li>绩效-奖赏：绩效达标可以获得奖励</li><li>奖赏-吸引：潜在结果或奖赏有吸引力</li></ul><h4 id="9-18-本章知识点"><a href="#9-18-本章知识点" class="headerlink" title="9.18    本章知识点"></a>9.18    本章知识点</h4><ul><li>他克曼阶梯理论</li><li>项目经理的管理风格</li><li>冲突的益处</li><li>冲突的5中解决办法</li><li>项目经理的权利</li></ul><h3 id="10-项目沟通管理"><a href="#10-项目沟通管理" class="headerlink" title="10.    项目沟通管理"></a>10.    项目沟通管理</h3><h4 id="10-1-有效沟通"><a href="#10-1-有效沟通" class="headerlink" title="10.1    有效沟通"></a>10.1    有效沟通</h4><h5 id="10-1-1-有效沟通"><a href="#10-1-1-有效沟通" class="headerlink" title="10.1.1    有效沟通"></a>10.1.1    有效沟通</h5><blockquote><p>以正确的形式，在正确的时间把信息提供给正确的受众，并且使信息产生正确的影响</p></blockquote><h5 id="10-1-2-沟通管理的过程："><a href="#10-1-2-沟通管理的过程：" class="headerlink" title="10.1.2    沟通管理的过程："></a>10.1.2    沟通管理的过程：</h5><ul><li>规划沟通管理</li><li>管理沟通</li><li>监督沟通</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569457332973.png" alt="1569457332973"></p><h5 id="10-1-3-沟通管理的方式"><a href="#10-1-3-沟通管理的方式" class="headerlink" title="10.1.3    沟通管理的方式"></a>10.1.3    沟通管理的方式</h5><ul><li>内部（项目的内部）—–外部</li><li>正式（文件，会议）—-非正式（微信，QQ）</li><li>垂直（上下级）—-水平（同级别）</li><li>官方—-非官方</li><li>书面—-口头</li><li>言语—-体语</li></ul><h5 id="10-1-4-乔哈里窗"><a href="#10-1-4-乔哈里窗" class="headerlink" title="10.1.4    乔哈里窗"></a>10.1.4    乔哈里窗</h5><blockquote><p>双方在交流中，教自己的隐秘区开放出来，相互之间就有了信任，开放区就会增大</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569457632242.png" alt="1569457632242"></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569457702189.png" alt="1569457702189"></p><h4 id="10-2-项目沟通的5C原则"><a href="#10-2-项目沟通的5C原则" class="headerlink" title="10.2    项目沟通的5C原则"></a>10.2    项目沟通的5C原则</h4><ul><li>正确的语法和拼写</li><li>简洁的表述和无多余字</li><li>清楚的目的和表述</li><li>连贯的思维逻辑</li><li>受控的语句和想法承接</li></ul><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569458171997.png" alt="1569458171997"></p><h4 id="10-3-沟通管理考虑的因素，沟通模型"><a href="#10-3-沟通管理考虑的因素，沟通模型" class="headerlink" title="10.3    沟通管理考虑的因素，沟通模型"></a>10.3    沟通管理考虑的因素，沟通模型</h4><h5 id="10-3-1-规划沟通考虑的因素："><a href="#10-3-1-规划沟通考虑的因素：" class="headerlink" title="10.3.1    规划沟通考虑的因素："></a>10.3.1    规划沟通考虑的因素：</h5><ul><li>谁需要什么信息和谁有权接触这些信息</li><li>他们什么时候需要信息</li><li>信息应存储在什么地方</li><li>信息应以什么形式存储</li><li>如何检查这些信息</li><li>是否需要考虑时差，语言障碍和跨文化因素</li></ul><h5 id="10-3-2-沟通模型"><a href="#10-3-2-沟通模型" class="headerlink" title="10.3.2    沟通模型"></a>10.3.2    沟通模型</h5><blockquote><p>接收方有反馈，可以减少沟通漏斗</p></blockquote><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569459189058.png" alt="1569459189058"></p><p><strong>沟通漏斗</strong></p><p><img src="C:%5CUsers%5CflyTigger%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1569459245541.png" alt="1569459245541"></p><h4 id="10-4-沟通路径"><a href="#10-4-沟通路径" class="headerlink" title="10.4    沟通路径"></a>10.4    沟通路径</h4><blockquote><p>公式：C<del>n</del>^2^</p></blockquote><p><strong>过滤Filter:</strong></p><blockquote><p>指大量信息在自上而下或自下而上的沟通过程中损失掉的现象</p></blockquote><h4 id="10-5-沟通障碍"><a href="#10-5-沟通障碍" class="headerlink" title="10.5    沟通障碍"></a>10.5    沟通障碍</h4><h5 id="10-5-1-影响沟通障碍的因素"><a href="#10-5-1-影响沟通障碍的因素" class="headerlink" title="10.5.1    影响沟通障碍的因素"></a>10.5.1    影响沟通障碍的因素</h5><ul><li><ol><li>信息过载</li><li>缺少知识</li><li>文化差异</li><li>分散注意力的环境因素（找一个环境优雅的，安静的环境）</li><li>有害的态度</li><li>情绪</li><li>不懂技术或技术术语</li><li>沟通渠道过多</li><li>选择性的认知（人人都爱听表扬）</li></ol></li></ul><h5 id="10-5-2-沟通障碍的原因"><a href="#10-5-2-沟通障碍的原因" class="headerlink" title="10.5.2    沟通障碍的原因"></a>10.5.2    沟通障碍的原因</h5><ul><li>不同的干系人对项目目标的理解不同</li><li>人力，设备，材料等资源的竞争</li><li>人员之间的个人冲突</li><li>对变化的抵制（如新技术，新流程）</li></ul><h4 id="10-6-沟通技巧和方式"><a href="#10-6-沟通技巧和方式" class="headerlink" title="10.6    沟通技巧和方式"></a>10.6    沟通技巧和方式</h4><h5 id="10-6-1-沟通技术"><a href="#10-6-1-沟通技术" class="headerlink" title="10.6.1    沟通技术"></a>10.6.1    沟通技术</h5><ul><li>简化运用语言</li><li>视觉辅助手段</li><li>积极倾听</li><li>有效反馈</li><li>控制情绪</li></ul><h5 id="10-6-2-沟通的3种方式"><a href="#10-6-2-沟通的3种方式" class="headerlink" title="10.6.2    沟通的3种方式"></a>10.6.2    沟通的3种方式</h5><ul><li>交互式沟通</li><li>推式沟通（单向，群邮件）</li><li>拉式沟通（下载，关注，订阅）</li></ul><h4 id="10-6-会议管理"><a href="#10-6-会议管理" class="headerlink" title="10.6    会议管理"></a>10.6    会议管理</h4><ul><li>准备并发布会议议程，包含会议目标</li><li>在规定的时间开始和结束</li><li>确保适当参与者受邀并出席</li><li>切题</li><li>处理会议中的期望，问题和冲突</li><li>记录所有行动及其责任人</li></ul><h4 id="10-7-本章知识点"><a href="#10-7-本章知识点" class="headerlink" title="10.7    本章知识点"></a>10.7    本章知识点</h4><ul><li>沟通的类型</li><li>沟通模型与沟通漏斗</li><li>沟通路径</li><li>沟通障碍</li><li>3种沟通方式</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>rxjava总结</title>
      <link href="/2019/08/26/rxjava-zong-jie/"/>
      <url>/2019/08/26/rxjava-zong-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><pre class=" language-java"><code class="language-java">implementation <span class="token string">'io.reactivex.rxjava2:rxandroid:2.1.1'</span>implementation <span class="token string">'io.reactivex.rxjava2:rxjava:2.2.12'</span></code></pre><h3 id="三个重要的知识点"><a href="#三个重要的知识点" class="headerlink" title="三个重要的知识点"></a>三个重要的知识点</h3><blockquote><p>Observable：被观察者，可以理解为事件的发送者</p><p>Observer：观察者，可以理解为事件的接收者</p><p>Subscriber：订阅，可以理解为链接发送者跟接收者</p></blockquote><pre class=" language-java"><code class="language-java">Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> ob <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Observable"</span><span class="token punctuation">,</span> <span class="token string">"subscribe: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"hi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"嗨"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Observer<span class="token operator">&lt;</span>String<span class="token operator">></span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span>Disposable d<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"observer"</span><span class="token punctuation">,</span> <span class="token string">"onSubscribe: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"observer"</span><span class="token punctuation">,</span> <span class="token string">"onNext: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"observer"</span><span class="token punctuation">,</span> <span class="token string">"onError: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"observer"</span><span class="token punctuation">,</span> <span class="token string">"onComplete: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        ob<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>代码干了三件事情，</p><ul><li><ol><li>创建了Observable被观察者(发送者)对象，</li><li>创建Observer(接收者)对象，</li><li>然后通过subscribe将他们关联起来</li></ol></li></ul><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">42.399</span> <span class="token number">2352</span><span class="token operator">-</span><span class="token number">2352</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>observer<span class="token operator">:</span> onSubscribe<span class="token operator">:</span> <span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">42.399</span> <span class="token number">2352</span><span class="token operator">-</span><span class="token number">2352</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>Observable<span class="token operator">:</span> subscribe<span class="token operator">:</span> <span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">42.399</span> <span class="token number">2352</span><span class="token operator">-</span><span class="token number">2352</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>observer<span class="token operator">:</span> onNext<span class="token operator">:</span> hi<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">22</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">42.399</span> <span class="token number">2352</span><span class="token operator">-</span><span class="token number">2352</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>observer<span class="token operator">:</span> onComplete<span class="token operator">:</span> </code></pre><p>分析日志</p><ul><li><ol><li>被观察者调用subscribe()方法，相当于被观察说我想跟你关联了，然后观察者通过onSubscribe()回复被观察说行,然后两者就建立了连接</li><li>接着被观察者（发送者）通过onNext()发送数据</li><li>观察者（接收者）通过onNext()方法接收发送者发送过来的数据</li><li>在被观察者调用onComplete()方法时，代表已完成，观察者接着会调用onComplete()将两者之间的连接断开，所以后面的emitter.onNext(“嗨”);这句代码并没有被接收</li></ol></li></ul><blockquote><p>这里我们看到还有一个onError()方法没有被调用，关于onError()跟onComplete()是一对互斥的方法，也就是说当代码执行了onComplete()方法，那么onError()方法就不可能被调用，反之也一样，这里就不代码演示了</p></blockquote><h3 id="Observable几种创建方式"><a href="#Observable几种创建方式" class="headerlink" title="Observable几种创建方式"></a>Observable几种创建方式</h3><blockquote><p>just(T…)：将传入的数据依次发送出去</p><p>fromArray(T… items) 将传入的数组或 <code>Iterable</code> 拆分成具体对象后，依次发送出来：</p></blockquote><pre class=" language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token string">"王五"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span>Disposable d<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"onSubscribe"</span><span class="token punctuation">,</span> <span class="token string">"onNext: "</span><span class="token operator">+</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">38.019</span> <span class="token number">2637</span><span class="token operator">-</span><span class="token number">2637</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 张三<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">38.019</span> <span class="token number">2637</span><span class="token operator">-</span><span class="token number">2637</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 李四<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">38.019</span> <span class="token number">2637</span><span class="token operator">-</span><span class="token number">2637</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 王五</code></pre><pre class=" language-java"><code class="language-java">String<span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span>Disposable d<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"onSubscribe"</span><span class="token punctuation">,</span> <span class="token string">"onNext: "</span><span class="token operator">+</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">47.819</span> <span class="token number">2710</span><span class="token operator">-</span><span class="token number">2710</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 张三<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">47.819</span> <span class="token number">2710</span><span class="token operator">-</span><span class="token number">2710</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 李四<span class="token number">08</span><span class="token operator">-</span><span class="token number">25</span> <span class="token number">23</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">47.819</span> <span class="token number">2710</span><span class="token operator">-</span><span class="token number">2710</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>onSubscribe<span class="token operator">:</span> onNext<span class="token operator">:</span> 王五</code></pre><h3 id="Consumer-amp-Action"><a href="#Consumer-amp-Action" class="headerlink" title="Consumer&amp;Action"></a>Consumer&amp;Action</h3><blockquote><p><code>Consumer</code>是Rxjava的一个接口，他只有一个方法<code>accept(T t)</code>方法，这个方法无返回值，但有一个参数， 由于<code>onNext(T obj)</code> 和 <code>onError(Throwable error)</code> 也是单参数无返回值的,因此Consumer可以被当着包装对象,当着onNext和onError来使用</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>T t<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>Action也是Rxjava的一个接口，他只有一个方法run，无参数，无返回值，由于onComplete()也是无参无返回值，所以Action可以被当着包装对象，当着onComplete来势</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Action</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>示例代码：</p><pre class=" language-java"><code class="language-java"> Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> observable <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Action onComplete <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Action</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        Consumer<span class="token operator">&lt;</span>String<span class="token operator">></span> onNext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"onNext"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        Consumer<span class="token operator">&lt;</span>Throwable<span class="token operator">></span> onError <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>Throwable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>Throwable throwable<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>onNext<span class="token punctuation">,</span> onError<span class="token punctuation">,</span> onComplete<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>往往我们在写代码中只关注onNext方法，所以上面复杂的代码可以简化：</p><pre class=" language-java"><code class="language-java"> String<span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token string">"王五"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">03.139</span> <span class="token number">3410</span><span class="token operator">-</span><span class="token number">3410</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>accept<span class="token operator">:</span> accept<span class="token operator">:</span> 张三<span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">03.139</span> <span class="token number">3410</span><span class="token operator">-</span><span class="token number">3410</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>accept<span class="token operator">:</span> accept<span class="token operator">:</span> 李四<span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">03.139</span> <span class="token number">3410</span><span class="token operator">-</span><span class="token number">3410</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>accept<span class="token operator">:</span> accept<span class="token operator">:</span> 王五</code></pre><h3 id="线程控制–Scheduler"><a href="#线程控制–Scheduler" class="headerlink" title="线程控制–Scheduler"></a>线程控制–Scheduler</h3><blockquote><p>在不指定线程的情况下，Rxjava在那个线程subscribe()就在那个线程产生事件，在那个线程产生事件，就在那个线程消费事件，如果需要线程切换，就需要用的Scheduler(调度器)</p></blockquote><p>Rxjava内置的几种Scheduler</p><ul><li>Scheduler.immediate()：默认情况下的值，相当于当前线程</li><li>Scheduler.newThread()：开启一个新的线程</li><li>Scheduler.io()：I/O 操作（读写文件、读写数据库、网络信息交互等）所使用的 <code>Scheduler</code>。行为模式和 <code>newThread()</code> 差不多，区别在于 <code>io()</code> 的内部实现是是用一个无数量上限的线程池，可以重用空闲的线程，因此多数情况下 <code>io()</code> 比 <code>newThread()</code> 更有效率。不要把计算工作放在 <code>io()</code> 中，可以避免创建不必要的线程</li><li>Scheduler.computation()：计算所使用的 <code>Scheduler</code>。这个计算指的是 CPU 密集型计算，即不会被 I/O 等操作限制性能的操作，例如图形的计算。这个 <code>Scheduler</code> 使用的固定的线程池，大小为 CPU 核数。不要把 I/O 操作放在 <code>computation()</code> 中，否则 I/O 操作的等待时间会浪费 CPU</li><li>AndroidScheduler.mainThread()：指定的操作将在主线程进行</li></ul><p>通常情况下，我们一般发送一个请求，然后等待后台反馈，等反馈回来后我们在讲反馈回来的数据进行显示，这是我们平时最常见的操作，那么用rxjava怎么实现呢</p><pre class=" language-java"><code class="language-java"> Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> observable <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"subscribe: "</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"111"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        observable<span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">15</span><span class="token operator">:</span><span class="token number">20.559</span> <span class="token number">3749</span><span class="token operator">-</span><span class="token number">3773</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> subscribe<span class="token operator">:</span> RxNewThreadScheduler<span class="token operator">-</span><span class="token number">1</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">15</span><span class="token operator">:</span><span class="token number">20.569</span> <span class="token number">3749</span><span class="token operator">-</span><span class="token number">3749</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> accept<span class="token operator">:</span> main<span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">15</span><span class="token operator">:</span><span class="token number">20.569</span> <span class="token number">3749</span><span class="token operator">-</span><span class="token number">3749</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">111</span></code></pre><p>日志分析：可以看到Observable在一个新的线程发送事件，Consumer在主线程接收事件</p><blockquote><p>subscribeOn()：指定发送事件所在的线程</p><p>observeOn()：指定接收事件所在的线程</p></blockquote><p>==注意：==</p><blockquote><p>多次指定subscribeOn()方法，只有第一次的有效</p><p>多次指定observeOn()方法，每次都有效</p></blockquote><pre class=" language-java"><code class="language-java"> Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> observable <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"subscribe: "</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"111"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        observable<span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"scheduler"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">24</span><span class="token operator">:</span><span class="token number">31.459</span> <span class="token number">3867</span><span class="token operator">-</span><span class="token number">3895</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> subscribe<span class="token operator">:</span> RxNewThreadScheduler<span class="token operator">-</span><span class="token number">1</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">24</span><span class="token operator">:</span><span class="token number">31.469</span> <span class="token number">3867</span><span class="token operator">-</span><span class="token number">3896</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> accept<span class="token operator">:</span> RxNewThreadScheduler<span class="token operator">-</span><span class="token number">2</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">01</span><span class="token operator">:</span><span class="token number">24</span><span class="token operator">:</span><span class="token number">31.469</span> <span class="token number">3867</span><span class="token operator">-</span><span class="token number">3896</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>scheduler<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">111</span></code></pre><p>日志分析：</p><p>我们可以看到两次调用subscribeOn()方法，但是日志显示还是在新的线程执行，所以只有第一次的有效，两次调用observeOn()方法，显示在主线程，再是在新线程，所以最后执行实在新线程，日志也是如此</p><h3 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h3><blockquote><p>所谓的变换，是将事件序列中的对象或者整个事件序列进行加工处理，转换成不同的事件对象或者事件序列</p></blockquote><h4 id="Map"><a href="#Map" class="headerlink" title="Map():"></a>Map():</h4><p>将传入的数据进行加工，返回加工后的数据，map是一对一转换的</p><pre class=" language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> String <span class="token function">apply</span><span class="token punctuation">(</span>Integer integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"map"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上面的例子，我们传入了一个整形的值，然后通过map方法，将整形的值转换为字符串返回</p><h4 id="fromArray"><a href="#fromArray" class="headerlink" title="fromArray():"></a>fromArray():</h4><pre class=" language-java"><code class="language-java">String<span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token string">"王五"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="filter"><a href="#filter" class="headerlink" title="filter():"></a>filter():</h4><blockquote><p>对数组进行过滤，返回新的数组</p></blockquote><pre class=" language-java"><code class="language-java"> Integer<span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span>Integer integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                <span class="token keyword">return</span> integer <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>Integer integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"filter"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">02</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">20.499</span> <span class="token number">4364</span><span class="token operator">-</span><span class="token number">4364</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>filter<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">6</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">02</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">20.499</span> <span class="token number">4364</span><span class="token operator">-</span><span class="token number">4364</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>filter<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">7</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">26</span> <span class="token number">02</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">20.499</span> <span class="token number">4364</span><span class="token operator">-</span><span class="token number">4364</span><span class="token operator">/</span>com<span class="token punctuation">.</span>rxandroid D<span class="token operator">/</span>filter<span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">8</span></code></pre><h4 id="take"><a href="#take" class="headerlink" title="take():"></a>take():</h4><blockquote><p>保留事件数</p></blockquote><pre class=" language-java"><code class="language-java"> Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"take"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-log"><code class="language-log">08-26 02:34:55.559 4539-4539/com.rxandroid D/take: accept: 108-26 02:34:55.559 4539-4539/com.rxandroid D/take: accept: 2</code></pre><h4 id="doOnNext"><a href="#doOnNext" class="headerlink" title="doOnNext():"></a>doOnNext():</h4><blockquote><p>在处理事件之前做一些工作，可以放在这个方法中</p></blockquote><h4 id="zip"><a href="#zip" class="headerlink" title="zip():"></a>zip():</h4><blockquote><p>zip通过一个函数将多个Observable发送的事件结合到一起，然后发送这些组合到一起的事件. 它按照严格的顺序应用这个函数。它只发射与发射数据项最少的那个Observable一样多的数据</p></blockquote><pre class=" language-java"><code class="language-java">Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> ob1 <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> ob2 <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>ObservableEmitter<span class="token operator">&lt;</span>String<span class="token operator">></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Observable<span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span>ob1<span class="token punctuation">,</span> ob2<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BiFunction</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token punctuation">,</span> String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> String <span class="token function">apply</span><span class="token punctuation">(</span>String s<span class="token punctuation">,</span> String s2<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                <span class="token keyword">return</span> s <span class="token operator">+</span> s2<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"zip"</span><span class="token punctuation">,</span> <span class="token string">"accept: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-log"><code class="language-log">08-26 02:42:12.839 4644-4644/com.rxandroid D/zip: accept: 12</code></pre>]]></content>
      
      
      <categories>
          
          <category> rxandroid </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> rxandroid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter学习</title>
      <link href="/2019/08/23/flutter-xue-xi/"/>
      <url>/2019/08/23/flutter-xue-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Text组件"><a href="#1-Text组件" class="headerlink" title="1.    Text组件"></a>1.    Text组件</h3><table><thead><tr><th align="center">名称</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">textAlign</td><td align="center">文本对齐方式（center:居中，left：居左，right:居右，justfy:两端对齐）</td></tr><tr><td align="center">textDirection</td><td align="center">文本方向（ltr：从左到右，rtl:从右到左）</td></tr><tr><td align="center">overflow</td><td align="center">文字超出屏幕之后的处理方式（clip:裁剪，fade:隐藏，ellipsis:省略号）</td></tr><tr><td align="center">textScaleFactor</td><td align="center">文字显示倍率</td></tr><tr><td align="center">maxLines</td><td align="center">文字显示最大行数</td></tr><tr><td align="center">style</td><td align="center">文字的样式设置</td></tr></tbody></table><h4 id="1-1-TextStyle"><a href="#1-1-TextStyle" class="headerlink" title="1.1 TextStyle"></a>1.1 TextStyle</h4><table><thead><tr><th align="center">名称</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">decoration</td><td align="center">文字装饰线（none:没有线，lineThrough：删除线，overline：上划线，underline：下划线）</td></tr><tr><td align="center">decorationColor</td><td align="center">文字装饰线的颜色</td></tr><tr><td align="center">decorationStyle</td><td align="center">文字装饰线风格（[dashed,dotted]）虚线，double两根线，solid一根线，wavy波浪线</td></tr><tr><td align="center">wordSpacing</td><td align="center">单词间隙（如果为负数，会让单词变得更紧凑）</td></tr><tr><td align="center">letterSpacing</td><td align="center">字母间隙（如果是负数，会让字母变得更紧凑）</td></tr><tr><td align="center">fontStyle</td><td align="center">文字样式（italic斜体，normal正常体）</td></tr><tr><td align="center">fontSize</td><td align="center">字体大小</td></tr><tr><td align="center">color</td><td align="center">字体颜色</td></tr><tr><td align="center">fontWeight</td><td align="center">字体粗细（bold粗体，normal正常）</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>            <span class="token string">"造物无言却有情，每于寒尽觉春生。千红万紫安排著，只待新雷第一声"</span><span class="token punctuation">,</span>            textAlign<span class="token operator">:</span> TextAlign<span class="token punctuation">.</span>right<span class="token punctuation">,</span>            maxLines<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            overflow<span class="token operator">:</span> TextOverflow<span class="token punctuation">.</span>ellipsis<span class="token punctuation">,</span>            textDirection<span class="token operator">:</span> TextDirection<span class="token punctuation">.</span>rtl<span class="token punctuation">,</span>            textScaleFactor<span class="token operator">:</span> <span class="token number">1.2</span><span class="token punctuation">,</span>            style<span class="token operator">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>              textBaseline<span class="token operator">:</span> TextBaseline<span class="token punctuation">.</span>alphabetic<span class="token punctuation">,</span>              fontSize<span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>              letterSpacing<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>              fontWeight<span class="token operator">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>              decoration<span class="token operator">:</span> TextDecoration<span class="token punctuation">.</span>underline<span class="token punctuation">,</span>              decorationColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              decorationStyle<span class="token operator">:</span> TextDecorationStyle<span class="token punctuation">.</span>dashed            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="2-Container组件"><a href="#2-Container组件" class="headerlink" title="2.    Container组件"></a>2.    Container组件</h3><blockquote><p>相当于div使用，在不设置宽高时，由内部孩子撑开</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">alignment</td><td align="center">内部孩子对齐方式；topCenter：顶部居中对齐；topLeft：顶部左对齐；topRight:顶部右对齐；center：水平垂直居中对齐；centerLeft：垂直居中水平居中对齐；centerRight:垂直居中水平居右对齐；bottomCenter:底部居中对齐；bottomLeft：对不局左对齐；bottomRight：底部居右对齐</td></tr><tr><td align="center">decoration</td><td align="center">BoxDecoration,color,border,borderRadius</td></tr><tr><td align="center">margin</td><td align="center">margin属性表示Container与外部其他组件的距离。EdgeInsets.all()</td></tr><tr><td align="center">padding</td><td align="center">padding是Container的内边距，指的是Container边缘与child之间的距离</td></tr><tr><td align="center">transform</td><td align="center">让Container容器进行一些旋转之类的操作；transform:Matrix4.rotationZ(0.2)</td></tr><tr><td align="center">heigth</td><td align="center">Container的高度</td></tr><tr><td align="center">width</td><td align="center">Container宽度</td></tr><tr><td align="center">child</td><td align="center">Container 子元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      theme<span class="token operator">:</span> ThemeData<span class="token punctuation">.</span><span class="token function">light</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是Container标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>          height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//          color: Colors.blue,</span>          alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是内容"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          margin<span class="token operator">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          transform<span class="token operator">:</span> Matrix4<span class="token punctuation">.</span><span class="token function">rotationZ</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          decoration<span class="token operator">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>            color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            borderRadius<span class="token operator">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-Image图片组件"><a href="#3-Image图片组件" class="headerlink" title="3.    Image图片组件"></a>3.    Image图片组件</h3><blockquote><p>image.asset</p><p>image.network</p><p>image.file</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">alignment</td><td align="center">Alignment</td><td align="center">图片对其方式</td></tr><tr><td align="center">color和colorBlendMode</td><td align="center"></td><td align="center">设置图片的背景颜色，通常和colorBlendMode一起使用，这样可以使图片颜色跟背景颜色混合</td></tr><tr><td align="center">fit</td><td align="center">BoxFit</td><td align="center">fit属性用来控制拉伸与挤压，是相对于父容器的。BoxFit.fill:拉伸图片，充满父容器；BoxFit.contain:原比例拉伸，可能用空隙；BoxFit.cover:图片原比例充满父容器，多余的会被裁剪；BoxFit.fitWidth:充满父容器宽度；BoxFit.fitHeight:充满父容器高度；BoxFit.scaleDown:效果跟contain一样，但是此属性不允许显示超过源图片大小，可小不可大</td></tr><tr><td align="center">repeat</td><td align="center">平铺</td><td align="center">ImageRepeat.repeat:原图位置为中心，向其他地方铺满容器；ImageRepeat.repeatX:原图位置为中心，在X轴方向铺满容器；ImageRepeat.repeatY:原图位置为中心，在Y轴方向铺满容器；</td></tr><tr><td align="center">width</td><td align="center"></td><td align="center">宽度 一般结合 ClipOval 才能看到效果</td></tr><tr><td align="center">height</td><td align="center"></td><td align="center">高度 一般结合 ClipOval 才能看到效果</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是Image组件"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>            width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>            decoration<span class="token operator">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                border<span class="token operator">:</span> Border<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>                    color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>black12<span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> style<span class="token operator">:</span> BorderStyle<span class="token punctuation">.</span>solid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            child<span class="token operator">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>              <span class="token string">"http://pic33.nipic.com/20131007/13639685_123501617185_2.jpg"</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              colorBlendMode<span class="token operator">:</span> BlendMode<span class="token punctuation">.</span>color<span class="token punctuation">,</span>              fit<span class="token operator">:</span> BoxFit<span class="token punctuation">.</span>contain<span class="token punctuation">,</span>              repeat<span class="token operator">:</span> ImageRepeat<span class="token punctuation">.</span>repeat<span class="token punctuation">,</span>              width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="4-ListView列表"><a href="#4-ListView列表" class="headerlink" title="4.    ListView列表"></a>4.    ListView列表</h3><ul><li>垂直列表</li><li>水平列表</li><li>垂直图文列表</li><li>动态列表</li><li>矩阵列表</li></ul><table><thead><tr><th align="center">名称</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">scrollDirection</td><td align="center">Axis</td><td align="center">Axis.Vertical:垂直类别；Axis.Horizontal:水平列表</td></tr><tr><td align="center">padding</td><td align="center">EdgetInsetsGeometory</td><td align="center">内边距</td></tr><tr><td align="center">resolve</td><td align="center">bool</td><td align="center">是否倒叙</td></tr><tr><td align="center">children</td><td align="center">List<widget></widget></td><td align="center">列表元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是ListView"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">ListView</span><span class="token punctuation">(</span>          reverse<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是第一条数据"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"第一条数据副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="5-GridView网格"><a href="#5-GridView网格" class="headerlink" title="5.    GridView网格"></a>5.    GridView网格</h3><ul><li>垂直列表</li><li>水平列表</li><li>垂直图文列表</li><li>动态列表</li><li>矩阵列表</li></ul><blockquote><p>GridView.builder</p><p>GridView.count</p></blockquote><table><thead><tr><th>名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>scrollDirection</td><td>Axis</td><td>Axis.Vertical:垂直类别；Axis.Horizontal:水平列表</td></tr><tr><td>padding</td><td>EdgetInsetsGeometory</td><td>内边距</td></tr><tr><td>resolve</td><td>bool</td><td>是否倒叙</td></tr><tr><td>children</td><td>List<widget></widget></td><td>列表元素</td></tr><tr><td>crossAxisSpacing</td><td>double</td><td>水平子widget之间的间距</td></tr><tr><td>mainAxisSpacing</td><td>double</td><td>垂直子widget之间的间距</td></tr><tr><td>crossAxisCount</td><td>int</td><td>一行widget的数量</td></tr><tr><td>childAspectRatio</td><td>double</td><td>子widget宽度比例</td></tr><tr><td>gridDelegate</td><td>SliverGridDelegateWithFixedCrossAxisCount（常用）SliverGridDelegateWithMaxCrossAxisExtent</td><td>控制布局主要用在GridView.builder里面</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>          appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>            title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"GridView"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          body<span class="token operator">:</span> GridView<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>            crossAxisCount<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            crossAxisSpacing<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            mainAxisSpacing<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>              <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                  leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                  title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                  leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                  title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                  leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                  title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">ListTile</span><span class="token punctuation">(</span>                  leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                  title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  subtitle<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是副标题"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="6-Padding组件"><a href="#6-Padding组件" class="headerlink" title="6.    Padding组件"></a>6.    Padding组件</h3><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">padding</td><td align="center">padding 值, EdgeInsetss 设置填充的值</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Padding"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Padding</span><span class="token punctuation">(</span>padding<span class="token operator">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是内容"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="7-Row水平布局组件"><a href="#7-Row水平布局组件" class="headerlink" title="7. Row水平布局组件"></a>7. Row水平布局组件</h3><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mainAxisAlignment</td><td align="center">主轴的排序方式</td></tr><tr><td align="center">crossAxisAlignment</td><td align="center">次轴的排序方式</td></tr><tr><td align="center">children</td><td align="center">子元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Row"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Expanded</span><span class="token punctuation">(</span>child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="8-Column垂直布局组件"><a href="#8-Column垂直布局组件" class="headerlink" title="8.    Column垂直布局组件"></a>8.    Column垂直布局组件</h3><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mainAxisAlignment</td><td align="center">主轴的排序方式</td></tr><tr><td align="center">crossAxisAlignment</td><td align="center">次轴的排序方式</td></tr><tr><td align="center">children</td><td align="center">子元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Column"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>          mainAxisAlignment<span class="token operator">:</span> MainAxisAlignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>green<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="9-Expanded"><a href="#9-Expanded" class="headerlink" title="9.    Expanded"></a>9.    Expanded</h3><blockquote><p>类似于web中的flex布局，Expanded可用在Row，Column中</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">flex</td><td align="center">元素占整个Row/Column的比例</td></tr><tr><td align="center">child</td><td align="center">子元素</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Expanded"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Expanded</span><span class="token punctuation">(</span>              flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>                height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="10-Stack组件"><a href="#10-Stack组件" class="headerlink" title="10.    Stack组件"></a>10.    Stack组件</h3><blockquote><p>Stack栈的意思，用Stack或Stack结合Align或者Stack结合Positiond来实现定位</p></blockquote><h4 id="10-1-Stack"><a href="#10-1-Stack" class="headerlink" title="10.1    Stack"></a>10.1    Stack</h4><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">alignment</td><td align="center">配置所有子元素显示的位置</td></tr><tr><td align="center">children</td><td align="center">子组件</td></tr><tr><td align="center">fit</td><td align="center">用来决定没有Positioned方式时候子Widget的大小，StackFit.loose 指的是子Widget 多大就多大，StackFit.expand使子Widget的大小和父组件一样大</td></tr><tr><td align="center">overflow</td><td align="center">overflow :指子Widget 超出Stack时候如何显示，默认值是Overflow.clip，子Widget超出Stack会被截断;Overflow.visible超出部分还会显示的</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Stack"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Stack</span><span class="token punctuation">(</span>          fit<span class="token operator">:</span> StackFit<span class="token punctuation">.</span>expand<span class="token punctuation">,</span><span class="token comment" spellcheck="true">//这个属性设置后，Container内部设置的宽高不起作用，是以父容器为准</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="10-2-Align"><a href="#10-2-Align" class="headerlink" title="10.2    Align"></a>10.2    Align</h4><blockquote><p>Stack 组件中结合 Align 组件可以控制每个子元素的显示位置</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">alignment</td><td align="center">配置所有子元素显示的位置</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr></tbody></table><h4 id="10-3-Positiond"><a href="#10-3-Positiond" class="headerlink" title="10.3 Positiond"></a>10.3 Positiond</h4><blockquote><p>Stack 组件中结合 Positioned 组件也可以控制每个子元素的显示位置</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">top</td><td align="center">子元素距离顶部的距离</td></tr><tr><td align="center">bottom</td><td align="center">子元素距离底部的距离</td></tr><tr><td align="center">left</td><td align="center">子元素距离左侧的距离</td></tr><tr><td align="center">right</td><td align="center">子元素距离右侧的距离</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>          title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Stack"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Stack</span><span class="token punctuation">(</span>            children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>              <span class="token function">Positioned</span><span class="token punctuation">(</span>                left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                  color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>                  height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Positioned</span><span class="token punctuation">(</span>                right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                bottom<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                  color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>                  height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="11-AspeactRatio组件"><a href="#11-AspeactRatio组件" class="headerlink" title="11.    AspeactRatio组件"></a>11.    AspeactRatio组件</h3><ul><li><p>AspectRatio 的作用是根据设置调整子元素 child 的宽高比</p></li><li><p>AspectRatio 首先会在布局限制条件允许的范围内尽可能的扩展，widget 的高度是由宽 </p><p>度和比率决定的，类似于 BoxFit 中的 contain，按照固定比率去尽量占满区域</p></li><li><p>如果在满足所有限制条件过后无法找到一个可行的尺寸，AspectRatio 最终将会去优先 </p><p>适应布局限制条件，而忽略所设置的比率</p></li></ul><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">AspeactRatio</td><td align="center">宽高比，最终可能不会以这个值布局，具体要看综合因素。，外层是否允许按照这种比率进行布局，这只是一个参考值</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr></tbody></table><h3 id="12-Card组件"><a href="#12-Card组件" class="headerlink" title="12.    Card组件"></a>12.    Card组件</h3><blockquote><p>Card 是卡片组件块，内容可以由大多数类型的 Widget 构成，Card 具有圆角和阴影，这让它 </p><p>看起来有立体感</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">margin</td><td align="center">外边距</td></tr><tr><td align="center">child</td><td align="center">子组件</td></tr><tr><td align="center">Shape</td><td align="center">Card 的阴影效果，默认的阴影效果为圆角的</td></tr><tr><td align="center">elevation</td><td align="center">外部阴影的偏离值</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>          child<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>            width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            child<span class="token operator">:</span> <span class="token function">Card</span><span class="token punctuation">(</span>              color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              elevation<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是卡片的内容"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              shape<span class="token operator">:</span> <span class="token function">RoundedRectangleBorder</span><span class="token punctuation">(</span>                borderRadius<span class="token operator">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="13-RaisedButton组件"><a href="#13-RaisedButton组件" class="headerlink" title="13.    RaisedButton组件"></a>13.    RaisedButton组件</h3><blockquote><p>Flutter通常用RaisedButton定义一个按钮</p><p>Flutter 里有很多的 Button 组件很多，常见的按钮组件有：RaisedButton、FlatButton、 </p><p>IconButton、OutlineButton、ButtonBar、FloatingActionButton 等。 </p><p><strong>RaisedButton</strong> ：凸起的按钮，其实就是 Material Design 风格的 Button </p><p><strong>FlatButton</strong> ：扁平化的按钮 </p><p><strong>OutlineButton</strong>：线框按钮 </p><p><strong>IconButton</strong> ：图标按钮 </p><p><strong>ButtonBar</strong>:按钮组 </p><p><strong>FloatingActionButton:</strong>浮动按钮</p></blockquote><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>onPressed</td><td>VoidCallback ，一般接收一个方法</td><td>必填参数，按下按钮时触发的回调，接收一个方法，传 null 表示按钮禁用，会显示禁用相关样式</td></tr><tr><td>child</td><td>Widget</td><td>文本控件</td></tr><tr><td>textColor</td><td>Color</td><td>文本颜色</td></tr><tr><td>color</td><td>Color</td><td>按钮的颜色</td></tr><tr><td>disabledColor</td><td>Color</td><td>按钮禁用时的颜色</td></tr><tr><td>disabledTextColor</td><td>Color</td><td>按钮禁用时的文本颜色</td></tr><tr><td>splashColor</td><td>Color</td><td>点击按钮时水波纹的颜色</td></tr><tr><td>highlightColor</td><td>Color</td><td>点击（长按）按钮后按钮的颜色</td></tr><tr><td>elevation</td><td>double</td><td>阴影的范围，值越大阴影范围越大</td></tr><tr><td>padding</td><td></td><td>内边距</td></tr><tr><td>shape</td><td></td><td>设置按钮的形状 shape: RoundedRectangleBorder( borderRadius: BorderRadius.circular(10),)</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">RaisedButton</span><span class="token punctuation">(</span>                onPressed<span class="token operator">:</span> null<span class="token punctuation">,</span>                child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"raisedButton"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">IconButton</span><span class="token punctuation">(</span>                icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>                tooltip<span class="token operator">:</span> <span class="token string">"IconButton"</span><span class="token punctuation">,</span>                disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              alignment<span class="token operator">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>              height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>              child<span class="token operator">:</span> <span class="token function">FlatButton</span><span class="token punctuation">(</span>                child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"FlatButton"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="14-Wrap组件"><a href="#14-Wrap组件" class="headerlink" title="14.    Wrap组件"></a>14.    Wrap组件</h3><blockquote><p>Wrap 可以实现流布局，单行的 Wrap 跟 Row 表现几乎一致，单列的 Wrap 则跟 Column 表 </p><p>现几乎一致。但 Row 与 Column 都是单行单列的，Wrap 则突破了这个限制，mainAxis 上空 </p><p>间不足时，则向 crossAxis 上去扩展显示</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">direction</td><td align="center">主轴方向，默认水平</td></tr><tr><td align="center">alignment</td><td align="center">主轴对其方式</td></tr><tr><td align="center">spacing</td><td align="center">主轴方向上的间距</td></tr><tr><td align="center">textDirection</td><td align="center">定义了Dirction的摆放顺序，默认是Down,</td></tr><tr><td align="center">runAlignment</td><td align="center">run 的对齐方式。run 可以理解为新的行或者列，如果是水平方向布局的话，run 可以理解为新的一行</td></tr><tr><td align="center">runSpacing</td><td align="center">run 的间距</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Wrap</span><span class="token punctuation">(</span>          spacing<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>          alignment<span class="token operator">:</span> WrapAlignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>          children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">RaisedButton</span><span class="token punctuation">(</span>              child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              disabledColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>            <span class="token punctuation">)</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="15-自定义组件"><a href="#15-自定义组件" class="headerlink" title="15.    自定义组件"></a>15.    自定义组件</h3><ul><li><p>StatelessWidget:是无状态组件，状态不可变的 widget</p></li><li><p>StatefulWidget:是有状态组件，持有的状态可能在 widget 生命周期改变。通俗的讲：如果我 </p><p>们想改变页面中的数据的话这个时候就需要用到 <strong>StatefulWidget</strong></p></li></ul><h3 id="16-BottomNavigationBar组件"><a href="#16-BottomNavigationBar组件" class="headerlink" title="16.    BottomNavigationBar组件"></a>16.    BottomNavigationBar组件</h3><blockquote><p>BottomNavigationBar 是底部导航条，可以让我们定义底部 Tab 切换，bottomNavigationBar </p><p>是 Scaffold 组件的参数</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">items</td><td align="center">List<bottomnavigationbaritem> 底部导航 条按钮集合</bottomnavigationbaritem></td></tr><tr><td align="center">iconSize</td><td align="center">icon</td></tr><tr><td align="center">currentIndex</td><td align="center">默认选中第几个</td></tr><tr><td align="center">onTap</td><td align="center">选中变化回调函数</td></tr><tr><td align="center">fixedColor</td><td align="center">选中的颜色</td></tr><tr><td align="center">type</td><td align="center">BottomNavigationBarType.fixed  BottomNavigationBarType.shifting</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>   List<span class="token operator">&lt;</span>BottomNavigationBarItem<span class="token operator">></span> items<span class="token operator">=</span><span class="token punctuation">[</span>     <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>home<span class="token punctuation">)</span><span class="token punctuation">,</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"首页"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>home<span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">,</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"搜索"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token function">BottomNavigationBarItem</span><span class="token punctuation">(</span>icon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我的"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>activeIcon<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">,</span>color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        bottomNavigationBar<span class="token operator">:</span> <span class="token function">BottomNavigationBar</span><span class="token punctuation">(</span>items<span class="token operator">:</span> items<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="17-路由"><a href="#17-路由" class="headerlink" title="17.    路由"></a>17.    路由</h3><blockquote><p>Flutter 中的路由通俗的讲就是页面跳转。在 Flutter 中通过 Navigator 组件管理路由导航。 </p><p>并提供了管理堆栈的方法。如：Navigator.push 和 Navigator.pop </p><p>Flutter 中给我们提供了两种配置路由跳转的方式：1、基本路由 2、命名路由</p></blockquote><h4 id="17-1-基本路由"><a href="#17-1-基本路由" class="headerlink" title="17.1    基本路由"></a>17.1    基本路由</h4><blockquote><p>比如我们现在想从 HomePage 组件跳转到 SearchPage 组件</p></blockquote><ul><li><ol><li>需要在 HomPage 中引入 SearchPage.dart</li></ol></li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'../SearchPage.dart'</span><span class="token punctuation">;</span></code></pre><ul><li><ol start="2"><li>在HomePage中通过下面方式调整</li></ol></li></ul><pre class=" language-java"><code class="language-java"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>    child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"跳转到搜索页面"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>            <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                builder<span class="token operator">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token function">SearchPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>accentColor<span class="token punctuation">,</span>    textTheme<span class="token operator">:</span> ButtonTextTheme<span class="token punctuation">.</span>primary<span class="token punctuation">)</span></code></pre><ul><li><ol start="3"><li>中的基本路由跳转传值</li></ol></li></ul><blockquote><p>比如我们现在想从 HomePage 组件跳转到 SearchPage 组件传值</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>    child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"跳转到搜索页面"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>            <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                builder<span class="token operator">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token function">SearchPage</span><span class="token punctuation">(</span>title<span class="token operator">:</span><span class="token string">"表单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//传值</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>accentColor<span class="token punctuation">,</span>    textTheme<span class="token operator">:</span> ButtonTextTheme<span class="token punctuation">.</span>primary<span class="token punctuation">)</span></code></pre><h4 id="17-2-命名路由"><a href="#17-2-命名路由" class="headerlink" title="17.2    命名路由"></a>17.2    命名路由</h4><h5 id="17-2-1-配置路由"><a href="#17-2-1-配置路由" class="headerlink" title="17.2.1    配置路由"></a>17.2.1    配置路由</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Tabs.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'pages/Search.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Form.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@override</span> Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>             <span class="token comment" spellcheck="true">// home:Tabs(), </span>            initialRoute<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>            routes<span class="token operator">:</span> <span class="token punctuation">{</span>                 <span class="token string">'/'</span><span class="token operator">:</span><span class="token punctuation">(</span>contxt<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                 <span class="token string">'/search'</span><span class="token operator">:</span><span class="token punctuation">(</span>contxt<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token function">SearchPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                 <span class="token string">'/form'</span><span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">FormPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h5 id="17-2-2-路由跳转"><a href="#17-2-2-路由跳转" class="headerlink" title="17.2.2    路由跳转"></a>17.2.2    路由跳转</h5><pre class=" language-java"><code class="language-java"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>     child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"跳转到搜索页面"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         Navigator<span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">'/search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>accentColor<span class="token punctuation">,</span>     textTheme<span class="token operator">:</span> ButtonTextTheme<span class="token punctuation">.</span>primary<span class="token punctuation">)</span></code></pre><h4 id="17-3-命名路由传值"><a href="#17-3-命名路由传值" class="headerlink" title="17.3    命名路由传值"></a>17.3    命名路由传值</h4><h5 id="17-3-1-配置路由"><a href="#17-3-1-配置路由" class="headerlink" title="17.3.1    配置路由"></a>17.3.1    配置路由</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Tabs.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Search.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'pages/Form.dart'</span><span class="token punctuation">;</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>     <span class="token keyword">final</span> routes <span class="token operator">=</span> <span class="token punctuation">{</span>         <span class="token string">'/'</span><span class="token operator">:</span> <span class="token punctuation">(</span>contxt<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token string">'/search'</span><span class="token operator">:</span> <span class="token punctuation">(</span>contxt<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">SearchPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token string">'/form'</span><span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token punctuation">{</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">FormPage</span><span class="token punctuation">(</span>arguments<span class="token operator">:</span> arguments<span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token punctuation">}</span>    <span class="token annotation punctuation">@override</span> Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>            home<span class="token operator">:</span> <span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             onGenerateRoute<span class="token operator">:</span> <span class="token punctuation">(</span>RouteSettings settings<span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token comment" spellcheck="true">// 统一处理 </span>                <span class="token keyword">final</span> String name <span class="token operator">=</span> settings<span class="token punctuation">.</span>name<span class="token punctuation">;</span>                 <span class="token keyword">final</span> Function pageContentBuilder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>pageContentBuilder <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                     <span class="token keyword">if</span> <span class="token punctuation">(</span>settings<span class="token punctuation">.</span>arguments <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                         <span class="token keyword">final</span> Route route <span class="token operator">=</span> <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                             builder<span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">pageContentBuilder</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arguments<span class="token operator">:</span> settings<span class="token punctuation">.</span>arguments<span class="token punctuation">)</span>                        <span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token keyword">return</span> route<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                         <span class="token keyword">final</span> Route route <span class="token operator">=</span> <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                             builder<span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">pageContentBuilder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> route<span class="token punctuation">;</span>                     <span class="token punctuation">}</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h5 id="17-3-2-跳转传值"><a href="#17-3-2-跳转传值" class="headerlink" title="17.3.2    跳转传值"></a>17.3.2    跳转传值</h5><pre class=" language-java"><code class="language-java"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>     child<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"跳转到表单演示页面"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     onPressed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         Navigator<span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>                             <span class="token string">'/form'</span><span class="token punctuation">,</span>arguments<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string">"id"</span><span class="token operator">:</span><span class="token number">20</span> <span class="token punctuation">}</span>                           <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>accentColor<span class="token punctuation">,</span>    textTheme<span class="token operator">:</span> ButtonTextTheme<span class="token punctuation">.</span>primary<span class="token punctuation">)</span></code></pre><h5 id="17-3-3-接收参数"><a href="#17-3-3-接收参数" class="headerlink" title="17.3.3    接收参数"></a>17.3.3    <strong>接收参数</strong></h5><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">class</span> <span class="token class-name">FormPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>     <span class="token keyword">final</span> Map arguments<span class="token punctuation">;</span>     <span class="token function">FormPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token annotation punctuation">@override</span> Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>             appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span> title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"搜索"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                           <span class="token punctuation">)</span><span class="token punctuation">,</span>            body<span class="token operator">:</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"我是一个表单页面 ${arguments != null ? arguments['id'] : '0'}"</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h4 id="17-4-命名路单独抽离到一-个文件"><a href="#17-4-命名路单独抽离到一-个文件" class="headerlink" title="17.4    命名路单独抽离到一 个文件"></a>17.4    <strong>命名路单独抽离到一</strong> 个文件</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'../pages/Tabs.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'../pages/Search.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'../pages/Form.dart'</span><span class="token punctuation">;</span> <span class="token keyword">final</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Function<span class="token operator">></span> routes <span class="token operator">=</span> <span class="token punctuation">{</span>     <span class="token string">'/'</span><span class="token operator">:</span><span class="token punctuation">(</span>contxt<span class="token punctuation">,</span><span class="token punctuation">{</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token string">'/search'</span><span class="token operator">:</span><span class="token punctuation">(</span>contxt<span class="token punctuation">,</span><span class="token punctuation">{</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token function">SearchPage</span><span class="token punctuation">(</span>arguments<span class="token operator">:</span> arguments<span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token string">'/form'</span><span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token punctuation">{</span>arguments<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token function">FormPage</span><span class="token punctuation">(</span>arguments<span class="token operator">:</span> arguments<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>var onGenerateRoute<span class="token operator">=</span><span class="token punctuation">(</span>RouteSettings settings<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">// 统一处理 </span>    <span class="token keyword">final</span> String name <span class="token operator">=</span> settings<span class="token punctuation">.</span>name<span class="token punctuation">;</span>     <span class="token keyword">final</span> Function pageContentBuilder <span class="token operator">=</span> routes<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>pageContentBuilder <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">final</span> Route route <span class="token operator">=</span> <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>             builder<span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">pageContentBuilder</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arguments<span class="token operator">:</span> settings<span class="token punctuation">.</span>arguments<span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> route<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token string">'routes/Routes.dart'</span><span class="token punctuation">;</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@override</span>    Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>             <span class="token comment" spellcheck="true">// home:Tabs(), </span>            initialRoute<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>             onGenerateRoute<span class="token operator">:</span> onGenerateRoute         <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h4 id="17-5-路由-路由替换-返回到根路由"><a href="#17-5-路由-路由替换-返回到根路由" class="headerlink" title="17.5    路由 路由替换 返回到根路由"></a>17.5    路由 路由替换 返回到根路由</h4><h5 id="17-5-1-返回到上一页"><a href="#17-5-1-返回到上一页" class="headerlink" title="17.5.1    返回到上一页"></a>17.5.1    返回到上一页</h5><pre class=" language-java"><code class="language-java">Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="17-5-2-替换路由"><a href="#17-5-2-替换路由" class="headerlink" title="17.5.2    替换路由"></a>17.5.2    替换路由</h5><blockquote><p>比如我们从用户中心页面跳转到了 registerFirst 页面，然后从 registerFirst 页面通过 </p><p>pushReplacementNamed 跳转到了 registerSecond 页面。这个时候当我们点击 registerSecond </p><p>的返回按钮的时候它会直接返回到用户中心</p></blockquote><pre class=" language-java"><code class="language-java">Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushReplacementNamed</span><span class="token punctuation">(</span><span class="token string">'/registerSecond'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="17-5-3-返回到根路由"><a href="#17-5-3-返回到根路由" class="headerlink" title="17.5.3    返回到根路由"></a>17.5.3    返回到根路由</h5><blockquote><p>比如我们从用户中心跳转到 registerFirst 页面，然后从 registerFirst 页面跳转到 registerSecond </p><p>页面，然后从 registerSecond 跳转到了 registerThird 页面。这个时候我们想的是 registerThird </p><p>注册成功后返回到用户中心。 这个时候就用到了返回到根路由的方法。</p></blockquote><pre class=" language-java"><code class="language-java">Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushAndRemoveUntil</span><span class="token punctuation">(</span>     <span class="token keyword">new</span> <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>builder<span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Tabs</span><span class="token punctuation">(</span>index<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>                         <span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> route <span class="token operator">==</span> null <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="18-Appbar组件"><a href="#18-Appbar组件" class="headerlink" title="18.    Appbar组件"></a>18.    Appbar组件</h3><blockquote><p>自定义顶部导航按钮图标、颜色 以及TabBar定义顶部 Tab</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">leading</td><td align="center">在标题前面显示的一个控件，在首页通常显示应用的 logo；在其他界面通常显示为返回按钮</td></tr><tr><td align="center">title</td><td align="center">标题，通常显示为当前界面的标题文字，可以放组件</td></tr><tr><td align="center">actions</td><td align="center">通常使用 IconButton 来表示，可以放按钮组</td></tr><tr><td align="center">bottom</td><td align="center">通常放 tabBar，标题下面显示一个 Tab 导航栏</td></tr><tr><td align="center">backgroundColor</td><td align="center">导航背景颜色</td></tr><tr><td align="center">iconTheme</td><td align="center">图标样式</td></tr><tr><td align="center">textTheme</td><td align="center">文字样式</td></tr><tr><td align="center">centerTitle</td><td align="center">标题是否居中显示</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      showSemanticsDebugger<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token operator">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Card"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>leading<span class="token operator">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person<span class="token punctuation">)</span><span class="token punctuation">,</span>backgroundColor<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>centerTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="19-TabBar-常见属性"><a href="#19-TabBar-常见属性" class="headerlink" title="19.    TabBar 常见属性"></a>19.    TabBar <strong>常见属性</strong></h3><blockquote><p>AppBar 中自定义 TabBar 实现顶部 Tab 切换</p></blockquote><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">tabs</td><td align="center">显示的标签内容，一般使用 Tab 对象,也可以是其他的 Widget</td></tr><tr><td align="center">controller</td><td align="center">TabController 对象</td></tr><tr><td align="center">isScrollable</td><td align="center">是否可滚动</td></tr><tr><td align="center">indicatorColor</td><td align="center">指示器颜色</td></tr><tr><td align="center">indicatorWeight</td><td align="center">指示器高度</td></tr><tr><td align="center">indicatorPadding</td><td align="center">底部指示器的 Padding</td></tr><tr><td align="center">indicator</td><td align="center">指示器 decoration，例如边框等</td></tr><tr><td align="center">indicatorSize</td><td align="center">指示器大小计算方式，TabBarIndicatorSize.label 跟文字等宽,TabBarIndicatorSize.tab 跟每个 tab 等宽</td></tr><tr><td align="center">labelColor</td><td align="center">选中 label 颜色</td></tr><tr><td align="center">labelStyle</td><td align="center">选中 label 的 Style</td></tr><tr><td align="center">labelPadding</td><td align="center">每个 label 的 padding 值</td></tr><tr><td align="center">unselectedLabelColor</td><td align="center">未选中 label 颜色</td></tr><tr><td align="center">unselectedLabelStyle</td><td align="center">未选中 label 的 Style</td></tr></tbody></table><h3 id="20-Drawer侧边栏"><a href="#20-Drawer侧边栏" class="headerlink" title="20.    Drawer侧边栏"></a>20.    Drawer侧边栏</h3><blockquote><p>在 Scaffold 组件里面传入 drawer 参数可以定义左侧边栏，传入 endDrawer 可以定义右侧边 </p><p>栏。侧边栏默认是隐藏的，我们可以通过手指滑动显示侧边栏，也可以通过点击按钮显示侧 </p><p>边栏。</p></blockquote><p><strong>DrawerHeader</strong></p><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">decoration</td><td align="center">设置顶部背景颜色</td></tr><tr><td align="center">child</td><td align="center">配置子元素</td></tr><tr><td align="center">padding</td><td align="center">内边距</td></tr><tr><td align="center">margin</td><td align="center">外边距</td></tr></tbody></table><p><strong>UserAccountsDrawerHeader</strong></p><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">decoration</td><td align="center">设置顶部背景颜色</td></tr><tr><td align="center">accountName</td><td align="center">账户名称</td></tr><tr><td align="center">accountEmail</td><td align="center">账户邮箱</td></tr><tr><td align="center">currentAccountPicture</td><td align="center">用户头像</td></tr><tr><td align="center">otherAccountsPictures</td><td align="center">用来设置当前账户其他账户头像</td></tr><tr><td align="center">margin</td><td align="center">外边距</td></tr></tbody></table><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// TODO: implement build</span>    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>      debugShowCheckedModeBanner<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      home<span class="token operator">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        drawer<span class="token operator">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>          color<span class="token operator">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>          child<span class="token operator">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>            children<span class="token operator">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>             <span class="token function">UserAccountsDrawerHeader</span><span class="token punctuation">(</span>                 accountName<span class="token operator">:</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong>侧边栏路由跳转</strong></p><pre class=" language-java"><code class="language-java">onTap<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     Navigator<span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">'/search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><h3 id="21-FloatingActionButton"><a href="#21-FloatingActionButton" class="headerlink" title="21.    FloatingActionButton"></a>21.    FloatingActionButton</h3><blockquote><p><strong>FloatingActionButton 简称 FAB ,</strong>可以实现浮动按钮，也可以实现类似闲鱼 app 的地步凸 </p><p>起导航 </p></blockquote><table><thead><tr><th align="center">*<em>属性名称 *</em></th><th align="center">属性值</th></tr></thead><tbody><tr><td align="center">child</td><td align="center">子视图，一般为 Icon，不推荐使用文字</td></tr><tr><td align="center">tooltip</td><td align="center">FAB 被长按时显示，也是无障碍功能</td></tr><tr><td align="center">backgroundColor</td><td align="center">背景颜色</td></tr><tr><td align="center">elevation</td><td align="center">未点击的时候的阴影</td></tr><tr><td align="center">hignlightElevation</td><td align="center">点击时阴影值，默认 12.0</td></tr><tr><td align="center">onPressed</td><td align="center">点击事件回调</td></tr><tr><td align="center">shape</td><td align="center">可以定义 FAB 的形状等</td></tr><tr><td align="center">mini</td><td align="center">是否是 mini 类型默认 false</td></tr></tbody></table><h3 id="22-表单"><a href="#22-表单" class="headerlink" title="22.    表单"></a>22.    表单</h3><blockquote><p>Flutter 中常见的表单有 TextField 单行文本框，TextField 多行文本框、CheckBox、Radio、Switch </p><p>CheckboxListTile、RadioListTile、SwitchListTile、Slide</p></blockquote><h4 id="22-1-TextField"><a href="#22-1-TextField" class="headerlink" title="22.1    TextField"></a>22.1    TextField</h4><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">maxLines</td><td align="center">设置此参数可以把文本框改为多行文本框</td></tr><tr><td align="center">onChanged</td><td align="center">文本框改变的时候触发的事件</td></tr><tr><td align="center">decoration</td><td align="center"><strong>hintText</strong> 类似 html 中的 placeholder；<strong>border</strong> 配置文本框边框 OutlineInputBorder 配合使用；<strong>labelText</strong> lable 的名称；<strong>labelStyle</strong> 配置 lable 的样式</td></tr><tr><td align="center">obscureText</td><td align="center">把文本框框改为密码框</td></tr><tr><td align="center">controller</td><td align="center"><strong>controller</strong> 结合 TextEditingController()可以配置表单默认显示的内容</td></tr></tbody></table><h4 id="22-2-CheckBox，CheckBoxListTitle"><a href="#22-2-CheckBox，CheckBoxListTitle" class="headerlink" title="22.2    CheckBox，CheckBoxListTitle"></a>22.2    CheckBox，CheckBoxListTitle</h4><p><strong>Checkbox</strong> <strong>常见属性</strong></p><table><thead><tr><th>*<em>属性 *</em></th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>true 或者 false</td></tr><tr><td>onChanged</td><td>改变的时候触发的事件</td></tr><tr><td>activeColor</td><td>选中的颜色、背景颜色</td></tr><tr><td>checkColor</td><td>选中的颜色、Checkbox 里面对号的颜色</td></tr></tbody></table><p><strong>CheckboxListTile</strong> <strong>常见属性</strong></p><table><thead><tr><th align="center">*<em>属性 *</em></th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">true 或者 false</td></tr><tr><td align="center">onChanged</td><td align="center">改变的时候触发的事件</td></tr><tr><td align="center">activeColor</td><td align="center">选中的颜色、背景颜色</td></tr><tr><td align="center">title</td><td align="center">标题</td></tr><tr><td align="center">subtitle</td><td align="center">二级标题</td></tr><tr><td align="center">secondary</td><td align="center">配置图标或者图片</td></tr><tr><td align="center">selected</td><td align="center">选中的时候文字颜色是否跟着改变</td></tr></tbody></table><h4 id="22-3-Radio、RadioListTile"><a href="#22-3-Radio、RadioListTile" class="headerlink" title="22.3    Radio、RadioListTile"></a>22.3    Radio、RadioListTile</h4><p><strong>Radio</strong> <strong>常用属性</strong></p><table><thead><tr><th align="center">*<em>属性 *</em></th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">单选的值</td></tr><tr><td align="center">onChanged</td><td align="center">改变时触发</td></tr><tr><td align="center">activeColor</td><td align="center">选中的颜色、背景颜色</td></tr><tr><td align="center">groupValue</td><td align="center">选择组的值</td></tr></tbody></table><p><strong>RadioListTile</strong> <strong>常用属性</strong></p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">true 或者 false</td></tr><tr><td align="center">onChanged</td><td align="center">改变的时候触发的事件</td></tr><tr><td align="center">activeColor</td><td align="center">选中的颜色、背景颜色</td></tr><tr><td align="center">title</td><td align="center">标题</td></tr><tr><td align="center">subtitle</td><td align="center">二级标题</td></tr><tr><td align="center">secondary</td><td align="center">配置图标或者图片</td></tr><tr><td align="center">groupValue</td><td align="center">选择组的值</td></tr></tbody></table><h4 id="22-4-Switch开关"><a href="#22-4-Switch开关" class="headerlink" title="22.4    Switch开关"></a>22.4    Switch开关</h4><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">value</td><td align="center">单选的值</td></tr><tr><td align="center">onChanged</td><td align="center">改变时触发</td></tr><tr><td align="center">activeColor</td><td align="center">选中的颜色、背景颜色</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora基本使用</title>
      <link href="/2019/08/23/typora-ji-ben-shi-yong/"/>
      <url>/2019/08/23/typora-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><code>Ctrl 0</code>到 <code>Ctrl4</code> : 普通文本一级~四级标题</p><p><code>Ctrl B</code> :加粗</p><p><strong>我是加粗的文字</strong></p><p><code>Ctrl I</code> :斜体</p><p><em>我是斜体的文字</em></p><p><code>Ctrl U</code> :下划线</p><p><u>我是带下划线的文字</u></p><p><code>Ctrl K</code>:超链接</p><p><a href www.baidu.com"">我是超链接</a></p><p><code>Ctrl T</code>:表格</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p><code>shift+ctrl+Q</code>:引用</p><blockquote><p>我是引用的一段话</p></blockquote><p><code>shift+ctrl+I</code>:插入图片</p><p><img src="https://www.baidu.com/img/baidu_jgylogo3.gif" alt="baidu"></p><p>三个飘号：代码块</p><pre class=" language-javascript"><code class="language-javascript">我是代码块</code></pre><p>有序，无序列表：<code>*</code>，<code>+</code>，<code>-</code>，按<code>tab</code>键可以切换二级列表</p><ul><li>一级列表1</li><li>一级列表2<ul><li>二级列表1</li><li>二级列表2</li></ul></li></ul><p>上标：<code>^上标^</code></p><p>​    2^2^</p><p>下标：<code>~下标~</code></p><p>​    H<del>2</del>O</p><p>高亮：<code>==高亮字==</code></p><p>​    ==我是高亮的字==</p><p>分割线：<code>---</code></p><hr><p>emoji图片：<code>:</code></p><p>​    :arrow_up:</p><p>目录生成：<code>[toc]</code></p><p>[TOC]</p><p>流程图：<code>Flowchart</code>，<code>Mermaid</code></p><ul><li><p>流程图：Flowchart</p><pre class=" language-flow"><code class="language-flow"></code></pre></li></ul><ul><li><p>流程图：Mermaid</p><pre class=" language-mermaid"><code class="language-mermaid"></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
